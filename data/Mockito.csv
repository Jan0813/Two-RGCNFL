filename,code_line,line_number,is_comment,is_blank
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,import org.mockito.internal.stubbing.answers.ReturnsArgumentAt;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,import org.mockito.internal.stubbing.answers.ReturnsElementsOf;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,import org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,import java.util.Collection;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Additional answers provides factory methods for less common answers.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>Currently offer answers that can return the parameter of an invocation at a certain position.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <p>See factory methods for more information : {@link #returnsFirstArg}, {@link #returnsSecondArg},",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* {@link #returnsLastArg} and {@link #returnsArgAt},20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"@SuppressWarnings(""unchecked"")",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public class AdditionalAnswers {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,private static final ReturnsArgumentAt RETURNS_FIRST_ARGUMENT = new ReturnsArgumentAt(0);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,private static final ReturnsArgumentAt RETURNS_SECOND_ARGUMENT = new ReturnsArgumentAt(1);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,private static final ReturnsArgumentAt RETURNS_LAST_ARGUMENT = new ReturnsArgumentAt(-1);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Returns the first parameter of an invocation.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     This additional answer could be used at stub time using the,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     <code>then|do|will{@link org.mockito.stubbing.Answer}</code> methods. For example :,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">given(carKeyFob.authenticate(carKey)).will(returnsFirstArg());",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* doAnswer(returnsFirstArg()).when(carKeyFob).authenticate(carKey)</code></pre>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param <T> Return type of the invocation.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return Answer that will return the first argument of the invocation.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> returnsFirstArg() {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) RETURNS_FIRST_ARGUMENT;,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Returns the second parameter of an invocation.,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     This additional answer could be used at stub time using the,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     <code>then|do|will{@link org.mockito.stubbing.Answer}</code> methods. For example :,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </p>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">given(trader.apply(leesFormula, onCreditDefaultSwap)).will(returnsSecondArg());",58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* doAnswer(returnsSecondArg()).when(trader).apply(leesFormula, onCreditDefaultSwap)</code></pre>",59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param <T> Return type of the invocation.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return Answer that will return the second argument of the invocation.,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> returnsSecondArg() {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) RETURNS_SECOND_ARGUMENT;,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Returns the last parameter of an invocation.,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     This additional answer could be used at stub time using the,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     <code>then|do|will{@link org.mockito.stubbing.Answer}</code> methods. For example :,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </p>,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">given(person.remember(dream1, dream2, dream3, dream4)).will(returnsLastArg());",78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* doAnswer(returnsLastArg()).when(person).remember(dream1, dream2, dream3, dream4)</code></pre>",79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param <T> Return type of the invocation.,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return Answer that will return the last argument of the invocation.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> returnsLastArg() {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) RETURNS_LAST_ARGUMENT;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Returns the parameter of an invocation at the given position.,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* This additional answer could be used at stub time using the,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <code>then|do|will{@link org.mockito.stubbing.Answer}</code> methods. For example :,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </p>,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">given(person.remember(dream1, dream2, dream3, dream4)).will(returnsArgAt(3));",98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* doAnswer(returnsArgAt(3)).when(person).remember(dream1, dream2, dream3, dream4)</code></pre>",99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param <T> Return type of the invocation.,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param position index of the argument from the list of arguments.,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return Answer that will return the argument from the given position in the argument's list,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> returnsArgAt(int position) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) new ReturnsArgumentAt(position);,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* An answer that directly forwards the calls to the delegate. The delegate may or may not be of the same type as the mock.,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* If the type is different, a matching method needs to be found on delegate type otherwise an exception is thrown.",113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Useful for spies or partial mocks of objects that are difficult to mock,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* or spy using the usual spy API. Possible use cases:,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <ul>,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     <li>Final classes but with an interface</li>,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     <li>Already custom proxied object</li>,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*     <li>Special objects with a finalize method, i.e. to avoid executing it 2 times</li>",120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </ul>,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* For more details including the use cases reported by users take a look at,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <a link=""http://code.google.com/p/mockito/issues/detail?id=145"">issue 145</a>.",123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* The difference with the regular spy:,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <ul>,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   <li>,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     The regular spy ({@link Mockito#spy(Object)}) contains <strong>all</strong> state from the spied instance,128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     and the methods are invoked on the spy. The spied instance is only used at mock creation to copy the state from.,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*     If you call a method on a regular spy and it internally calls other methods on this spy, those calls are remembered",130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*     for verifications, and they can be effectively stubbed.",131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   </li>,132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   <li>,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     The mock that delegates simply delegates all methods to the delegate.,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     The delegate is used all the time as methods are delegated onto it.,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*     If you call a method on a mock that delegates and it internally calls other methods on this mock,",136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*     those calls are <strong>not</strong> remembered for verifications, stubbing does not have effect on them, too.",137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*     Mock that delegates is less powerful than the regular spy but it is useful when the regular spy cannot be created.,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   </li>,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </ul>,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* An example with a final class that we want to delegate to:,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">",143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   final class DontYouDareToMockMe implements list { ... },144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   DontYouDareToMockMe awesomeList = new DontYouDareToMockMe();,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   List mock = mock(List.class, delegatesTo(awesomeList));",148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </code></pre>,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* This feature suffers from the same drawback as the spy.,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* The mock will call the delegate if you use regular when().then() stubbing style.,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Since the real implementation is called this might have some side effects.,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Therefore you should to use the doReturn|Throw|Answer|CallRealMethod stubbing style. Example:,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">",157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   List listWithDelegate = mock(List.class, AdditionalAnswers.delegatesTo(awesomeList));",158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   //Impossible: real method is called so listWithDelegate.get(0) throws IndexOutOfBoundsException (the list is yet empty),160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   when(listWithDelegate.get(0)).thenReturn(""foo"");",161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   //You have to use doReturn() for stubbing,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   doReturn(""foo"").when(listWithDelegate).get(0);",164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </code></pre>,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param delegate The delegate to forward calls to. It does not have to be of the same type as the mock (although it usually is).,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*                 The only requirement is that the instance should have compatible method signatures including the return values.,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*                 Only the methods that were actually executed on the mock need to be present on the delegate type.,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return the answer,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> delegatesTo(Object delegate) {,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) new ForwardsInvocations(delegate);,175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,,177,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,/**,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Returns elements of the collection. Keeps returning the last element forever.,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* Might be useful on occasion when you have a collection of elements to return.,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* <p>,181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"* <pre class=""code""><code class=""java"">",182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   //this:,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   when(mock.foo()).thenReturn(1, 2, 3);",184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*   //is equivalent to:,186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,"*   when(mock.foo()).thenAnswer(new ReturnsElementsOf(Arrays.asList(1, 2, 3)));",187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* </code></pre>,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @param elements The collection of elements to return.,190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @return the answer,191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*,192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,* @since 1.9.5,193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,*/,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,public static <T> Answer<T> returnsElementsOf(Collection<?> elements) {,195,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,return (Answer<T>) new ReturnsElementsOf(elements);,196,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},197,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalAnswers.java,},198,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.ArrayEquals;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.CompareEqual;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.EqualsWithDelta;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.Find;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.GreaterOrEqual;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.GreaterThan;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.LessOrEqual;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.matchers.LessThan;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.progress.HandyReturnValues;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.progress.MockingProgress;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,import org.mockito.internal.progress.ThreadSafeMockingProgress;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See {@link Matchers} for general info about matchers.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* AdditionalMatchers provides rarely used matchers, kept only for somewhat compatibility with EasyMock.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Use additional matchers very judiciously because they may impact readability of a test.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* It is recommended to use matchers from {@link Matchers} and keep stubbing and verification simple.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* Example of using logical and(), not(), or() matchers:",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* <pre class=""code""><code class=""java"">",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*   //anything but not ""ejb""",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*   mock.someMethod(not(eq(""ejb"")));",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*   //not ""ejb"" and not ""michael jackson""",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*   mock.someMethod(and(not(eq(""ejb"")), not(eq(""michael jackson""))));",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*   //1 or 10,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*   mock.someMethod(or(eq(1), eq(10)));",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* </code></pre>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Scroll down to see all methods - full list of matchers.,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public class AdditionalMatchers {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,private static final MockingProgress MOCKING_PROGRESS = new ThreadSafeMockingProgress();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* argument greater than or equal the given value.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T extends Comparable<T>> T geq(Comparable<T> value) {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<T>(value)).<T>returnNull();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument greater than or equal to the given value.,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte geq(byte value) {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Byte>(value)).returnZero();,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument greater than or equal to the given value.,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double geq(double value) {,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Double>(value)).returnZero();,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument greater than or equal to the given value.,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float geq(float value) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Float>(value)).returnZero();,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument greater than or equal to the given value.,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int geq(int value) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Integer>(value)).returnZero();,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument greater than or equal to the given value.,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long geq(long value) {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Long>(value)).returnZero();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument greater than or equal to the given value.,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short geq(short value) {,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterOrEqual<Short>(value)).returnZero();,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,136,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* comparable argument less than or equal the given value details.,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T extends Comparable<T>> T leq(Comparable<T> value) {,146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<T>(value)).<T>returnNull();,147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,149,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument less than or equal to the given value.,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte leq(byte value) {,159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Byte>(value)).returnZero();,160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,162,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument less than or equal to the given value.,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double leq(double value) {,172,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Double>(value)).returnZero();,173,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,175,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument less than or equal to the given value.,177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float leq(float value) {,185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Float>(value)).returnZero();,186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,188,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument less than or equal to the given value.,190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int leq(int value) {,198,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Integer>(value)).returnZero();,199,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},200,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,201,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument less than or equal to the given value.,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long leq(long value) {,211,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Long>(value)).returnZero();,212,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},213,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,214,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument less than or equal to the given value.,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short leq(short value) {,224,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessOrEqual<Short>(value)).returnZero();,225,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},226,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,227,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* comparable argument greater than the given value.,229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,233,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T extends Comparable<T>> T gt(Comparable<T> value) {,237,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<T>(value)).<T>returnNull();,238,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},239,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,240,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument greater than the given value.,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,246,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte gt(byte value) {,250,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Byte>(value)).returnZero();,251,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,253,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,254,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument greater than the given value.,255,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,256,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,257,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,258,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,259,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double gt(double value) {,263,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Double>(value)).returnZero();,264,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},265,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,266,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument greater than the given value.,268,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,269,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,274,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,275,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float gt(float value) {,276,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Float>(value)).returnZero();,277,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},278,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,279,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,280,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument greater than the given value.,281,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,282,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,283,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,286,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,287,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int gt(int value) {,289,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Integer>(value)).returnZero();,290,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},291,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,292,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,293,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument greater than the given value.,294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,298,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,299,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long gt(long value) {,302,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Long>(value)).returnZero();,303,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},304,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,305,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,306,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument greater than the given value.,307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,310,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,311,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,312,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,313,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short gt(short value) {,315,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new GreaterThan<Short>(value)).returnZero();,316,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},317,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,318,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* comparable argument less than the given value.,320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,323,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T extends Comparable<T>> T lt(Comparable<T> value) {,328,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<T>(value)).<T>returnNull();,329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},330,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,331,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,332,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument less than the given value.,333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,336,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,337,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,338,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,339,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,340,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte lt(byte value) {,341,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Byte>(value)).returnZero();,342,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},343,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,344,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,345,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument less than the given value.,346,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,347,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,350,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,351,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,353,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double lt(double value) {,354,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Double>(value)).returnZero();,355,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},356,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,357,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,358,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument less than the given value.,359,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,360,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,361,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,362,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,363,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,364,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,365,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,366,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float lt(float value) {,367,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Float>(value)).returnZero();,368,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},369,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,370,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,371,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument less than the given value.,372,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,373,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,374,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,375,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,376,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,377,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,378,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,379,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int lt(int value) {,380,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Integer>(value)).returnZero();,381,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},382,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,383,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument less than the given value.,385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,389,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,390,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,391,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,392,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long lt(long value) {,393,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Long>(value)).returnZero();,394,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},395,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,396,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,397,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument less than the given value.,398,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,399,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,400,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,405,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short lt(short value) {,406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new LessThan<Short>(value)).returnZero();,407,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},408,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,409,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* comparable argument equals to the given value according to their,411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* compareTo method.,412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,413,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,414,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,415,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,416,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,417,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,418,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,419,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T extends Comparable<T>> T cmpEq(Comparable<T> value) {,420,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new CompareEqual<T>(value)).<T>returnNull();,421,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},422,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,423,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,424,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* String argument that contains a substring that matches the given regular,425,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* expression.,426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,427,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param regex,428,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the regular expression.,429,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,430,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,431,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static String find(String regex) {,432,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new Find(regex)).<String>returnNull();,433,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},434,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,435,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,436,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* Object array argument that is equal to the given array, i.e. it has to",437,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* have the same type, length, and each element has to be equal.",438,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,439,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,440,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,441,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param <T>,442,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*            the type of the array, it is passed through to prevent casts.",443,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,444,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,445,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,446,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,447,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T> T[] aryEq(T[] value) {,448,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,449,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},450,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,451,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,452,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* short array argument that is equal to the given array, i.e. it has to",453,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* have the same length, and each element has to be equal.",454,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,455,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,456,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,457,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,458,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,459,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,460,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,461,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short[] aryEq(short[] value) {,462,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,463,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},464,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,465,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* long array argument that is equal to the given array, i.e. it has to have",467,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* the same length, and each element has to be equal.",468,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,469,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,470,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,471,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,472,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,473,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,474,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,475,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long[] aryEq(long[] value) {,476,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,477,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},478,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,479,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,480,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* int array argument that is equal to the given array, i.e. it has to have",481,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* the same length, and each element has to be equal.",482,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,483,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,484,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,485,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,486,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int[] aryEq(int[] value) {,490,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,491,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},492,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,493,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,494,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* float array argument that is equal to the given array, i.e. it has to",495,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* have the same length, and each element has to be equal.",496,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,497,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,498,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,499,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float[] aryEq(float[] value) {,504,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,505,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},506,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,507,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,508,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* double array argument that is equal to the given array, i.e. it has to",509,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* have the same length, and each element has to be equal.",510,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,511,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,512,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,513,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,514,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,515,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,516,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,517,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double[] aryEq(double[] value) {,518,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,519,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},520,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,521,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,522,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* char array argument that is equal to the given array, i.e. it has to have",523,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* the same length, and each element has to be equal.",524,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,525,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,526,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,527,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,528,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,529,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,530,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static char[] aryEq(char[] value) {,532,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,533,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},534,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,535,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* byte array argument that is equal to the given array, i.e. it has to have",537,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* the same length, and each element has to be equal.",538,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,539,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,540,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,541,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,542,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,543,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,544,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,545,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte[] aryEq(byte[] value) {,546,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,547,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},548,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,549,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,550,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* boolean array argument that is equal to the given array, i.e. it has to",551,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"* have the same length, and each element has to be equal.",552,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,553,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,554,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,555,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,556,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given array.,557,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,558,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,559,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static boolean[] aryEq(boolean[] value) {,560,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return reportMatcher(new ArrayEquals(value)).returnNull();,561,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},562,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,563,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,564,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* boolean argument that matches both given matchers.,565,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,566,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,567,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,568,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,569,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,570,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,571,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,572,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>false</code>.,573,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,574,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static boolean and(boolean first, boolean second) {",575,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnFalse();,576,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},577,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,578,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,579,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument that matches both given argument matchers.,580,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,581,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,582,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,583,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,584,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,585,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,586,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,587,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,588,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,589,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static byte and(byte first, byte second) {",590,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,591,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},592,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,593,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* char argument that matches both given argument matchers.,595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,597,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,598,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,599,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,600,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,601,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,602,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,603,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,604,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static char and(char first, char second) {",605,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnChar();,606,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},607,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,608,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,609,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument that matches both given argument matchers.,610,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,611,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,612,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,613,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,614,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,615,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,616,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,617,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,618,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,619,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static double and(double first, double second) {",620,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,621,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},622,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,623,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,624,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument that matches both given argument matchers.,625,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,626,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,627,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,628,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,629,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,630,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,631,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,632,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,633,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,634,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static float and(float first, float second) {",635,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,636,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},637,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,638,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,639,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument that matches both given argument matchers.,640,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,641,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,642,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,643,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,644,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,645,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,646,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,647,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,648,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,649,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static int and(int first, int second) {",650,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,651,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},652,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,653,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,654,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument that matches both given argument matchers.,655,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,656,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,657,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,658,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,659,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,660,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,661,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,662,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,663,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,664,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static long and(long first, long second) {",665,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,666,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},667,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,668,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,669,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument that matches both given argument matchers.,670,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,671,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,672,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,673,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,674,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,675,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,676,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,677,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,678,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,679,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static short and(short first, short second) {",680,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().returnZero();,681,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},682,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,683,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,684,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Object argument that matches both given argument matchers.,685,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,686,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,687,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,688,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param <T>,689,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*            the type of the object, it is passed through to prevent casts.",690,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,691,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,692,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,693,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,694,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,695,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,696,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static <T> T and(T first, T second) {",697,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportAnd().<T>returnNull();,698,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},699,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,700,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,701,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* boolean argument that matches any of the given argument matchers.,702,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,703,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,704,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,705,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,706,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,707,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,708,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,709,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>false</code>.,710,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,711,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static boolean or(boolean first, boolean second) {",712,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnFalse();,713,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},714,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,715,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,716,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Object argument that matches any of the given argument matchers.,717,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,718,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,719,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,720,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param <T>,721,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*            the type of the object, it is passed through to prevent casts.",722,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,723,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,724,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,725,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,726,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,727,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,728,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static <T> T or(T first, T second) {",729,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().<T>returnNull();,730,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},731,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,732,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,733,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument that matches any of the given argument matchers.,734,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,735,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,736,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,737,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,738,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,739,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,740,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,741,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,742,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,743,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static short or(short first, short second) {",744,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,745,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},746,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,747,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,748,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument that matches any of the given argument matchers.,749,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,750,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,751,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,752,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,753,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,754,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,755,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,756,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,757,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,758,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static long or(long first, long second) {",759,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,760,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},761,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,762,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,763,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument that matches any of the given argument matchers.,764,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,765,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,766,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,767,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,768,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,769,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,770,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,771,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,772,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,773,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static int or(int first, int second) {",774,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,775,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},776,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,777,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,778,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument that matches any of the given argument matchers.,779,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,780,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,781,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,782,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,783,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,784,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,785,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,786,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,787,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,788,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static float or(float first, float second) {",789,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,790,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},791,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,792,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,793,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument that matches any of the given argument matchers.,794,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,795,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,796,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,797,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,798,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,799,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,800,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,801,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,802,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,803,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static double or(double first, double second) {",804,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,805,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},806,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,807,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,808,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* char argument that matches any of the given argument matchers.,809,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,810,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,811,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,812,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,813,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,814,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,815,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,816,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,817,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,818,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static char or(char first, char second) {",819,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnChar();,820,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},821,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,822,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,823,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument that matches any of the given argument matchers.,824,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,825,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,826,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,827,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,828,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the first argument matcher.,829,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param second,830,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the second argument matcher.,831,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,832,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,833,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static byte or(byte first, byte second) {",834,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportOr().returnZero();,835,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},836,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,837,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,838,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* Object argument that does not match the given argument matcher.,839,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,840,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,841,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,842,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param <T>,843,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"*            the type of the object, it is passed through to prevent casts.",844,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,845,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,846,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>null</code>.,847,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,848,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static <T> T not(T first) {,849,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().<T>returnNull();,850,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},851,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,852,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,853,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* short argument that does not match the given argument matcher.,854,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,855,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,856,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,857,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,858,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,859,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,860,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,861,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static short not(short first) {,862,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,863,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},864,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,865,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,866,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* int argument that does not match the given argument matcher.,867,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,868,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,869,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,870,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,871,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,872,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,873,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,874,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static int not(int first) {,875,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,876,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},877,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,878,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,879,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* long argument that does not match the given argument matcher.,880,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,881,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,882,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,883,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,884,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,885,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,886,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,887,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static long not(long first) {,888,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,889,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},890,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,891,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,892,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument that does not match the given argument matcher.,893,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,894,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,895,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,896,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,897,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,898,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,899,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,900,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static float not(float first) {,901,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,902,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},903,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,904,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,905,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument that does not match the given argument matcher.,906,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,907,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,908,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,909,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,910,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,911,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,912,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,913,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static double not(double first) {,914,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,915,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},916,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,917,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,918,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* char argument that does not match the given argument matcher.,919,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,920,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,921,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,922,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,923,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,924,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,925,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,926,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static char not(char first) {,927,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnChar();,928,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},929,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,930,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,931,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* boolean argument that does not match the given argument matcher.,932,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,933,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,934,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,935,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,936,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,937,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>false</code>.,938,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,939,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static boolean not(boolean first) {,940,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnFalse();,941,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},942,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,943,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,944,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* byte argument that does not match the given argument matcher.,945,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,946,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,947,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,948,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param first,949,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            placeholder for the argument matcher.,950,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,951,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,952,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,public static byte not(byte first) {,953,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportNot().returnZero();,954,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},955,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,956,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,957,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* double argument that has an absolute difference to the given value that,958,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* is less than the given delta details.,959,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,960,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,961,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,962,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,963,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,964,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param delta,965,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given delta.,966,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,967,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,968,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static double eq(double value, double delta) {",969,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"return reportMatcher(new EqualsWithDelta(value, delta)).returnZero();",970,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},971,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,972,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,/**,973,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* float argument that has an absolute difference to the given value that is,974,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* less than the given delta details.,975,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* <p>,976,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* See examples in javadoc for {@link AdditionalMatchers} class,977,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*,978,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param value,979,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given value.,980,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @param delta,981,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*            the given delta.,982,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,* @return <code>0</code>.,983,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,*/,984,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"public static float eq(float value, float delta) {",985,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,"return reportMatcher(new EqualsWithDelta(value, delta)).returnZero();",986,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},987,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,,988,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,private static HandyReturnValues reportMatcher(ArgumentMatcher<?> matcher) {,989,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportMatcher(matcher);,990,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},991,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\AdditionalMatchers.java,},992,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.internal.stubbing.answers.CallsRealMethods;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsMocks;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.invocation.InvocationOnMock;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,import org.mockito.stubbing.Answer;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* Enumeration of pre-configured mock answers,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"* You can use it to pass extra parameters to &#064;Mock annotation, see more info here: {@link Mock}",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* Example:,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"* <pre class=""code""><code class=""java"">",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*   &#064;Mock(answer = RETURNS_DEEP_STUBS) UserProvider userProvider;,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* </code></pre>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <b>This is not the full list</b> of Answers available in Mockito. Some interesting answers can be found in org.mockito.stubbing.answers package.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,public enum Answers implements Answer<Object>{,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* The default configured answer of every mock.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>Please see the {@link org.mockito.Mockito#RETURNS_DEFAULTS} documentation for more details.</p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* @see org.mockito.Mockito#RETURNS_DEFAULTS,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"RETURNS_DEFAULTS(new GloballyConfiguredAnswer()),",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* An answer that returns smart-nulls.,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>Please see the {@link org.mockito.Mockito#RETURNS_SMART_NULLS} documentation for more details.</p>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* @see org.mockito.Mockito#RETURNS_SMART_NULLS,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"RETURNS_SMART_NULLS(new ReturnsSmartNulls()),",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* An answer that returns <strong>mocks</strong> (not stubs).,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>Please see the {@link org.mockito.Mockito#RETURNS_MOCKS} documentation for more details.</p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* @see org.mockito.Mockito#RETURNS_MOCKS,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"RETURNS_MOCKS(new ReturnsMocks()),",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* An answer that returns <strong>deep stubs</strong> (not mocks).,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>Please see the {@link org.mockito.Mockito#RETURNS_DEEP_STUBS} documentation for more details.</p>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* @see org.mockito.Mockito#RETURNS_DEEP_STUBS,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"RETURNS_DEEP_STUBS(new ReturnsDeepStubs()),",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* An answer that calls the real methods (used for partial mocks).,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* <p>Please see the {@link org.mockito.Mockito#CALLS_REAL_METHODS} documentation for more details.</p>,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* @see org.mockito.Mockito#CALLS_REAL_METHODS,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,CALLS_REAL_METHODS(new CallsRealMethods()),71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,73,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,private final Answer<Object> implementation;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,private Answers(Answer<Object> implementation) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,this.implementation = implementation;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,/**,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,"* @deprecated Use the enum-constant directly, instead of this getter. This method will be removed in a future release<br>",81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,* E.g. instead of <code>Answers.CALLS_REAL_METHODS.get()</code> use <code>Answers.CALLS_REAL_METHODS</code> .,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,*/,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,@Deprecated,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,public Answer<Object> get() {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,return this;,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,88,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,public Object answer(InvocationOnMock invocation) throws Throwable {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,return implementation.answer(invocation);,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Answers.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,import org.mockito.internal.matchers.CapturingMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,import org.mockito.internal.progress.HandyReturnValues;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Use it to capture argument values for further assertions.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Mockito verifies argument values in natural java style: by using an equals() method.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* This is also the recommended way of matching arguments because it makes tests clean & simple.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* In some situations though, it is helpful to assert on certain arguments after the actual verification.",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* For example:,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* <pre class=""code""><code class=""java"">",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   ArgumentCaptor&lt;Person&gt; argument = ArgumentCaptor.forClass(Person.class);,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   verify(mock).doSomething(argument.capture());,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(""John"", argument.getValue().getName());",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </code></pre>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Example of capturing varargs:,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* <pre class=""code""><code class=""java"">",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   //capturing varargs:,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   ArgumentCaptor&lt;Person&gt; varArgs = ArgumentCaptor.forClass(Person.class);,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   verify(mock).varArgMethod(varArgs.capture());,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   List expected = asList(new Person(""John""), new Person(""Jane""));",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(expected, varArgs.getAllValues());",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </code></pre>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <strong>Warning:</strong> it is recommended to use ArgumentCaptor with verification <strong>but not</strong> with stubbing.,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Using ArgumentCaptor with stubbing may decrease test readability because captor is created outside of assert (aka verify or 'then') block.,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Also it may reduce defect localization because if stubbed method was not called then no argument is captured.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* In a way ArgumentCaptor is related to custom argument matchers (see javadoc for {@link ArgumentMatcher} class).,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Both techniques can be used for making sure certain arguments where passed to mocks.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* However, ArgumentCaptor may be a better fit if:",43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <ul>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <li>custom argument matcher is not likely to be reused</li>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <li>you just need it to assert on argument values to complete verification</li>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </ul>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Custom argument matchers via {@link ArgumentMatcher} are usually better for stubbing.,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* This utility class <strong>*don't do any type checks*</strong>, the generic signatures are only there to avoid casting",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* in your code. If you want specific types, then you should do that the captured values.",52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* This behavior might change (type checks could be added) in a,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* future major release.,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* There is an <strong>annotation</strong> that you might find useful: &#64;{@link Captor},56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* See the full documentation on Mockito in javadoc for {@link Mockito} class.,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @see Captor,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @since 1.8.0,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,public class ArgumentCaptor<T> {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,HandyReturnValues handyReturnValues = new HandyReturnValues();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,private final CapturingMatcher<T> capturingMatcher = new CapturingMatcher<T>();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,private final Class<? extends T> clazz;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @deprecated,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <b>Please use factory method {@link ArgumentCaptor#forClass(Class)} to create captors</b>,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* This is required to avoid NullPointerExceptions when autoUnboxing primitive types.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* See issue 99.,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Example:,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* <pre class=""code""><code class=""java"">",79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   ArgumentCaptor&lt;Person&gt; argument = ArgumentCaptor.forClass(Person.class);,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   verify(mock).doSomething(argument.capture());,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(""John"", argument.getValue().getName());",82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </code></pre>,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,@Deprecated,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,public ArgumentCaptor() {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,this.clazz = null;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,private ArgumentCaptor(Class<? extends T> clazz) {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,this.clazz = clazz;,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Use it to capture the argument. This method <b>must be used inside of verification</b>.,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* Internally, this method registers a special implementation of an {@link ArgumentMatcher}.",97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* This argument matcher stores the argument value so that you can use it later to perform assertions.,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* See examples in javadoc for {@link ArgumentCaptor} class.,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @return null or default values,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,public T capture() {,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,Mockito.argThat(capturingMatcher);,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,return handyReturnValues.returnFor(clazz);,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,108,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Returns the captured value of the argument. When capturing varargs use {@link #getAllValues()}.,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* If verified method was called multiple times then this method it returns the latest captured value.,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* See examples in javadoc for {@link ArgumentCaptor} class.,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @return captured argument value,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,public T getValue() {,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,return this.capturingMatcher.getLastValue();,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,121,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Returns all captured values. Use it when capturing varargs or when the verified method was called multiple times.,123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* When varargs method was called multiple times, this method returns merged list of all values from all invocations.",124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Example:,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* <pre class=""code""><code class=""java"">",127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   mock.doSomething(new Person(""John"");",128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   mock.doSomething(new Person(""Jane"");",129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class);,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   verify(mock, times(2)).doSomething(peopleCaptor.capture());",132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   List&lt;Person&gt; capturedPeople = peopleCaptor.getAllValues();,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(""John"", capturedPeople.get(0).getName());",135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(""Jane"", capturedPeople.get(1).getName());",136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </pre>,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Example of capturing varargs:,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* <pre class=""code""><code class=""java"">",140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   mock.countPeople(new Person(""John""), new Person(""Jane""); //vararg method",141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class);,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*   verify(mock).countPeople(peopleCaptor.capture());,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   List expected = asList(new Person(""John""), new Person(""Jane""));",147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"*   assertEquals(expected, peopleCaptor.getAllValues());",148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* </code></pre>,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* See more examples in javadoc for {@link ArgumentCaptor} class.,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @return captured argument value,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,public List<T> getAllValues() {,154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,return this.capturingMatcher.getAllValues();,155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,,157,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,/**,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* Build a new <code>ArgumentCaptor</code>.,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* <p>,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"* Note that an <code>ArgumentCaptor</code> <b>*don't do any type checks*</b>, it is only there to avoid casting",161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* in your code. This might however change (type checks could be added) in a,162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* future major release.,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @param clazz Type matching the parameter to be captured.,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @param <S> Type of clazz,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @param <U> Type of object captured by the newly built ArgumentCaptor,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,* @return A new ArgumentCaptor,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,*/,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,"public static <U,S extends U> ArgumentCaptor<U> forClass(Class<S> clazz) {",170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,return new ArgumentCaptor<U>(clazz);,171,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},172,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentCaptor.java,},173,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,import org.hamcrest.BaseMatcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,import org.hamcrest.Description;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,import org.hamcrest.Matcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,import org.mockito.internal.util.Decamelizer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* Allows creating customized argument matchers.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* ArgumentMatcher is an hamcrest {@link Matcher} with predefined describeTo() method.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* In case of failure, ArgumentMatcher generates description based on <b>decamelized class name</b> - to promote meaningful class names.",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* For example <b>StringWithStrongLanguage</b> matcher will generate 'String with strong language' description.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* You can always override describeTo() method and provide detailed description.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* Use {@link Matchers#argThat} method and pass an instance of hamcrest {@link Matcher}, e.g:",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* <pre class=""code""><code class=""java"">",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* class IsListOfTwoElements extends ArgumentMatcher&lt;List&gt; {,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*     public boolean matches(Object list) {,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*         return ((List) list).size() == 2;,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*     },27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* },28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* List mock = mock(List.class);,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* when(mock.addAll(argThat(new IsListOfTwoElements()))).thenReturn(true);,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* mock.addAll(Arrays.asList(&quot;one&quot;, &quot;two&quot;));",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* verify(mock).addAll(argThat(new IsListOfTwoElements()));,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* </code></pre>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* To keep it readable you may want to extract method, e.g:",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* <pre class=""code""><code class=""java"">",41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*   verify(mock).addAll(<b>argThat(new IsListOfTwoElements())</b>);,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*   //becomes,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*   verify(mock).addAll(<b>listOfTwoElements()</b>);,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* </code></pre>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* <b>Warning:</b> Be reasonable with using complicated argument matching, especially custom argument matchers, as it can make the test less readable.",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* Sometimes it's better to implement equals() for arguments that are passed to mocks,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* (Mockito naturally uses equals() for argument matching).,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* This can make the test cleaner.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* Also, <b>sometimes {@link ArgumentCaptor} may be a better fit</b> than custom matcher.",52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,"* For example, if custom argument matcher is not likely to be reused",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* or you just need it to assert on argument values to complete verification of behavior.,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* Read more about other matchers in javadoc for {@link Matchers} class,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* @param <T> type of argument,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*/,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,public abstract class ArgumentMatcher<T> extends BaseMatcher<T> {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,private static final long serialVersionUID = -2145234737829370369L;,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,/**,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* Returns whether this matcher accepts the given argument.,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* The method should <b>never</b> assert if the argument doesn't match. It,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* should only return false.,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* @param argument,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*            the argument,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* @return whether this matcher accepts the given argument.,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*/,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,public abstract boolean matches(Object argument);,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,/**,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* By default this method decamelizes matchers name to promote meaningful names for matchers.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* For example <b>StringWithStrongLanguage</b> matcher will generate 'String with strong language' description in case of failure.,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* <p>,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* You might want to override this method to,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* provide more specific description of the matcher (useful when,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* verification failures are reported).,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* @param description the description to which the matcher description is,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,* appended.,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,*/,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,public void describeTo(Description description) {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,String className = getClass().getSimpleName();,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,description.appendText(Decamelizer.decamelizeMatcher(className));,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ArgumentMatcher.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,import org.mockito.stubbing.Answer;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,import org.mockito.stubbing.OngoingStubbing;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,import org.mockito.stubbing.Stubber;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,import org.mockito.verification.VerificationMode;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Behavior Driven Development style of writing tests uses <b>//given //when //then</b> comments as fundamental parts of your test methods.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* This is exactly how we write our tests and we warmly encourage you to do so!,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* Start learning about BDD here: <a href=""http://en.wikipedia.org/wiki/Behavior_Driven_Development"">http://en.wikipedia.org/wiki/Behavior_Driven_Development</a>",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* The problem is that current stubbing api with canonical role of <b>when</b> word does not integrate nicely with <b>//given //when //then</b> comments.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* It's because stubbing belongs to <b>given</b> component of the test and not to the <b>when</b> component of the test.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Hence {@link BDDMockito} class introduces an alias so that you stub method calls with {@link BDDMockito#given(Object)} method.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Now it really nicely integrates with the <b>given</b> component of a BDD style test!,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* <p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Here is how the test might look like:,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* <pre class=""code""><code class=""java"">",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* import static org.mockito.BDDMockito.*;,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Seller seller = mock(Seller.class);,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Shop shop = new Shop(seller);,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* public void shouldBuyBread() throws Exception {,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //given,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   given(seller.askForBread()).willReturn(new Bread());,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //when,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   Goods goods = shop.buyBread();,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //then,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"*   assertThat(goods, containBread());",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* },39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* </code></pre>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Stubbing voids with throwables:,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* <pre class=""code""><code class=""java"">",43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //given,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"*   willThrow(new RuntimeException(""boo"")).given(mock).foo();",45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //when,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   Result result = systemUnderTest.perform();,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   //then,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"*   assertEquals(failure, result);",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* </code></pre>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* <p>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* For BDD style mock verification take a look at {@link Then} in action:,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* <pre class=""code""><code class=""java"">",55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   person.ride(bike);,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   person.ride(bike);,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   then(person).should(times(2)).ride(bike);,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* </code></pre>,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* One of the purposes of BDDMockito is also to show how to tailor the mocking syntax to a different programming style.,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"@SuppressWarnings(""unchecked"")",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public class BDDMockito extends Mockito {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing},70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public interface BDDMyOngoingStubbing<T> {,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#thenAnswer(Answer)},76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> willAnswer(Answer<?> answer);,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,80,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#then(Answer)},82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> will(Answer<?> answer);,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#thenReturn(Object)},88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> willReturn(T value);,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* See original {@link OngoingStubbing#thenReturn(Object, Object[])}",94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"BDDMyOngoingStubbing<T> willReturn(T value, T... values);",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,98,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#thenThrow(Throwable...)},100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> willThrow(Throwable... throwables);,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,104,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#thenThrow(Class[])},106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> willThrow(Class<? extends Throwable>... throwableClasses);,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#thenCallRealMethod()},112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDMyOngoingStubbing<T> willCallRealMethod();,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,116,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link OngoingStubbing#getMock()},118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,<M> M getMock();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @deprecated not part of the public API, use {@link BDDMyOngoingStubbing} instead.",125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,@Deprecated,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static class BDDOngoingStubbingImpl<T> implements BDDMyOngoingStubbing<T> {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,129,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,private final OngoingStubbing<T> mockitoOngoingStubbing;,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,131,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDOngoingStubbingImpl(OngoingStubbing<T> ongoingStubbing) {,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,this.mockitoOngoingStubbing = ongoingStubbing;,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,135,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDMyOngoingStubbing#willAnswer(Answer),137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> willAnswer(Answer<?> answer) {,139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenAnswer(answer));,140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,142,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDMyOngoingStubbing#will(Answer),144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> will(Answer<?> answer) {,146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.then(answer));,147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,149,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDMyOngoingStubbing#willReturn(java.lang.Object),151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> willReturn(T value) {,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenReturn(value));,154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,156,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @see BDDMockito.BDDMyOngoingStubbing#willReturn(java.lang.Object, T[])",158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"public BDDMyOngoingStubbing<T> willReturn(T value, T... values) {",160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenReturn(value, values));",161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,163,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDMyOngoingStubbing#willThrow(java.lang.Throwable[]),165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> willThrow(Throwable... throwables) {,167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenThrow(throwables));,168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},169,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDMyOngoingStubbing#willThrow(java.lang.Class[]),171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> willThrow(Class<? extends Throwable>... throwableClasses) {,173,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenThrow(throwableClasses));,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,176,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDMyOngoingStubbing<T> willCallRealMethod() {,177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(mockitoOngoingStubbing.thenCallRealMethod());,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,180,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public <M> M getMock() {,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return (M) mockitoOngoingStubbing.getMock();,182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},184,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,185,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#when(Object)},187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static <T> BDDMyOngoingStubbing<T> given(T methodCall) {,190,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDOngoingStubbingImpl<T>(Mockito.when(methodCall));,191,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},192,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,193,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Bdd style verification of mock behavior.,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* <pre class=""code""><code class=""java"">",197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   person.ride(bike);,198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   person.ride(bike);,199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*   then(person).should(times(2)).ride(bike);,201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* </code></pre>,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see #verify(Object),204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @see #verify(Object, VerificationMode)",205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.0,206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static <T> Then<T> then(T mock) {,208,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new ThenImpl<T>(mock);,209,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},210,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,211,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* Provides fluent way of mock verification.,213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @param <T> type of the mock,215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.5,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static interface Then<T> {,219,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,220,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see #verify(Object),222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.5,223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,T should();,225,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,226,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @see #verify(Object, VerificationMode)",228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.5,229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,T should(VerificationMode mode);,231,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},232,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,233,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,static class ThenImpl<T> implements Then<T> {,234,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,235,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,private final T mock;,236,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,237,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,ThenImpl(T mock) {,238,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,this.mock = mock;,239,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},240,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,241,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see #verify(Object),243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.5,244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public T should() {,246,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return verify(mock);,247,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},248,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,249,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @see #verify(Object, VerificationMode)",251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.10.5,252,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,253,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public T should(VerificationMode mode) {,254,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"return verify(mock, mode);",255,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},256,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,258,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,259,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber},260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public interface BDDStubber {,263,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doAnswer(Answer)},265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willAnswer(Answer answer);,268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,269,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doNothing()},271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willNothing();,274,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,275,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,276,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doReturn(Object)},277,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,278,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,279,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willReturn(Object toBeReturned);,280,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,281,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,282,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doThrow(Throwable)},283,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willThrow(Throwable toBeThrown);,286,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,287,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doThrow(Class)},289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willThrow(Class<? extends Throwable> toBeThrown);,292,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,293,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#doCallRealMethod()},295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,BDDStubber willCallRealMethod();,298,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,299,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* See original {@link Stubber#when(Object)},301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,302,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,303,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,<T> T given(T mock);,304,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},305,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,306,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,"* @deprecated not part of the public API, use {@link BDDStubber} instead.",308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,@Deprecated,310,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static class BDDStubberImpl implements BDDStubber {,311,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,312,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,private final Stubber mockitoStubber;,313,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,314,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubberImpl(Stubber mockitoStubber) {,315,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,this.mockitoStubber = mockitoStubber;,316,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},317,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,318,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#given(java.lang.Object),320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public <T> T given(T mock) {,322,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return mockitoStubber.when(mock);,323,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},324,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,325,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willAnswer(Answer),327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,328,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willAnswer(Answer answer) {,329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doAnswer(answer));,330,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},331,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,332,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willNothing(),334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willNothing() {,336,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doNothing());,337,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},338,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,339,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),340,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willReturn(java.lang.Object),341,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,342,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willReturn(Object toBeReturned) {,343,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doReturn(toBeReturned));,344,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},345,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,346,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),347,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willThrow(java.lang.Throwable),348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willThrow(Throwable toBeThrown) {,350,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doThrow(toBeThrown));,351,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},352,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,353,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willThrow(Class),355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willThrow(Class<? extends Throwable> toBeThrown) {,357,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doThrow(toBeThrown));,358,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},359,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,360,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/* (non-Javadoc),361,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @see BDDMockito.BDDStubber#willCallRealMethod(),362,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,363,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public BDDStubber willCallRealMethod() {,364,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(mockitoStubber.doCallRealMethod());,365,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},366,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},367,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,368,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,369,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doThrow(Throwable)},370,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,371,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,372,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willThrow(Throwable toBeThrown) {,373,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doThrow(toBeThrown));,374,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},375,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,376,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,377,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doThrow(Throwable)},378,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.9.0,379,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,380,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willThrow(Class<? extends Throwable> toBeThrown) {,381,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doThrow(toBeThrown));,382,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},383,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,384,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doAnswer(Answer)},386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willAnswer(Answer answer) {,389,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doAnswer(answer));,390,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},391,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,392,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,393,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doNothing()},394,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,395,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,396,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willDoNothing() {,397,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doNothing());,398,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},399,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,400,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doReturn(Object)},402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willReturn(Object toBeReturned) {,405,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doReturn(toBeReturned));,406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},407,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,,408,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,/**,409,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* see original {@link Mockito#doCallRealMethod()},410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,* @since 1.8.0,411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,*/,412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,public static BDDStubber willCallRealMethod() {,413,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,return new BDDStubberImpl(Mockito.doCallRealMethod());,414,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},415,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\BDDMockito.java,},416,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,import java.lang.annotation.*;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* Allows shorthand {@link org.mockito.ArgumentCaptor} creation on fields.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* <p>Example:,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* public class Test{,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    &#64;Captor ArgumentCaptor&lt;AsyncCallback&lt;Foo&gt;&gt; captor;,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    &#64;Before,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    public void init(){,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*       MockitoAnnotations.initMocks(this);,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    },21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    &#64;Test public void shouldDoSomethingUseful() {,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*       //...,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*       verify(mock.doStuff(captor.capture()));,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,"*       assertEquals(""foo"", captor.getValue());",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*    },27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* },28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* </code></pre>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* <p>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* One of the advantages of using &#64;Captor annotation is that you can avoid warnings related capturing complex generic types.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* @see ArgumentCaptor,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,* @since 1.8.3,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,*/,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,@Retention(RetentionPolicy.RUNTIME),37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,@Target(ElementType.FIELD),38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,@Documented,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Captor.java,public @interface Captor {},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,import org.mockito.verification.VerificationMode;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Allows verification in order. E.g:,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* InOrder inOrder = inOrder(firstMock, secondMock);",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(firstMock).add(""was called first"");",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(secondMock).add(""was called second"");",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* </code></pre>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* As of Mockito 1.8.4 you can verifyNoMoreInvocations() in order-sensitive way. Read more: {@link InOrder#verifyNoMoreInteractions()},20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* See examples in javadoc for {@link Mockito} class,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,public interface InOrder {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,/**,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Verifies interaction <b>happened once</b> in order.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* <p>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* Alias to <code>inOrder.verify(mock, times(1))</code>",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* <p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Example:,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* <pre class=""code""><code class=""java"">",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* InOrder inOrder = inOrder(firstMock, secondMock);",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(firstMock).someMethod(""was called first"");",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(secondMock).someMethod(""was called second"");",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* </code></pre>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* See examples in javadoc for {@link Mockito} class,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* @param mock to be verified,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* @return mock object itself,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,<T> T verify(T mock);,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,/**,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Verifies interaction in order. E.g:,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* <pre class=""code""><code class=""java"">",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* InOrder inOrder = inOrder(firstMock, secondMock);",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(firstMock, times(2)).someMethod(""was called first two times"");",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* inOrder.verify(secondMock, atLeastOnce()).someMethod(""was called second at least once"");",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* </code></pre>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* See examples in javadoc for {@link Mockito} class,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* @param mock to be verified,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* @param mode for example times(x) or atLeastOnce(),60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* @return mock object itself,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*/,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"<T> T verify(T mock, VerificationMode mode);",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,/**,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Verifies that no more interactions happened <b>in order</b>.,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Different from {@link Mockito#verifyNoMoreInteractions(Object...)} because the order of verification matters.,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* <p>,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Example:,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,"* <pre class=""code""><code class=""java"">",72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* mock.foo(); //1st,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* mock.bar(); //2nd,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* mock.baz(); //3rd,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* InOrder inOrder = inOrder(mock);,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* inOrder.verify(mock).bar(); //2n,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* inOrder.verify(mock).baz(); //3rd (last method),80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* //passes because there are no more interactions after last method:,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* inOrder.verifyNoMoreInteractions();,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* //however this fails because 1st method was not verified:,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* Mockito.verifyNoMoreInteractions(mock);,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,* </code></pre>,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,*/,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,void verifyNoMoreInteractions();,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InOrder.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,import java.lang.annotation.Documented;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,import java.lang.annotation.Retention;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,import java.lang.annotation.RetentionPolicy;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* The annotation conveys following information:,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* <ul>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,"* <li>The API is fairly new and we would appreciate your feedback. For example, what are you missing from the API",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* to solve your use case.</li>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* <li>The API might change.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* The chance for that is small because we care great deal for the initial design.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* The incubating API might change based on the feedback from the community in order to make the API most useful for the users.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* </li>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* <li>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* For types or methods that are not yet released it means the API is <strong>work in progress</strong>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* and can change before release.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* </li>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,* </ul>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,@Retention(RetentionPolicy.RUNTIME),27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,@Documented,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,public @interface Incubating {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Incubating.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,import java.lang.annotation.Documented;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,import java.lang.annotation.Retention;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,import java.lang.annotation.Target;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,import static java.lang.annotation.ElementType.FIELD;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,import static java.lang.annotation.RetentionPolicy.RUNTIME;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* Mark a field on which injection should be performed.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <ul>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <li>Allows shorthand mock and spy injection.</li>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <li>Minimizes repetitive mock and spy injection.</li>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </ul>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* Mockito will try to inject mocks only either by constructor injection,",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* setter injection, or property injection in order and as described below.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* If any of the following strategy fail, then Mockito <strong>won't report failure</strong>;",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* i.e. you will have to provide dependencies yourself.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <ol>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <li><strong>Constructor injection</strong>; the biggest constructor is chosen,",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     then arguments are resolved with mocks declared in the test only. If the object is successfully created,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     with the constructor, then <strong>Mockito won't try the other strategies</strong>. Mockito has decided to no",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     corrupt an object if it has a parametered constructor.,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <p><u>Note:</u> If arguments can not be found, then null is passed.",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     If non-mockable types are wanted, then constructor injection won't happen.",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     In these cases, you will have to satisfy dependencies yourself.</p></li>",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     <li><strong>Property setter injection</strong>; mocks will first be resolved by type (if a single type match,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     injection will happen regardless of the name),",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     then, if there is several property of the same type, by the match of the property name and the mock name.",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <p><u>Note 1:</u> If you have properties with the same type (or same erasure), it's better to name all &#064;Mock",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     annotated fields with the matching properties, otherwise Mockito might get confused and injection won't happen.</p>",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <p><u>Note 2:</u> If &#064;InjectMocks instance wasn't initialized before and have a no-arg constructor,",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     then it will be initialized with this constructor.</p></li>,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     <li><strong>Field injection</strong>; mocks will first be resolved by type (if a single type match,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     injection will happen regardless of the name),",44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     then, if there is several property of the same type, by the match of the field name and the mock name.",45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <p><u>Note 1:</u> If you have fields with the same type (or same erasure), it's better to name all &#064;Mock",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     annotated fields with the matching fields, otherwise Mockito might get confused and injection won't happen.</p>",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*     <p><u>Note 2:</u> If &#064;InjectMocks instance wasn't initialized before and have a no-arg constructor,",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*     then it will be initialized with this constructor.</p></li>,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </ol>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* Example:,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <pre class=""code""><code class=""java"">",55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class ArticleManagerTest extends SampleBaseTestCase {,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       &#064;Mock private ArticleCalculator calculator;,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*       &#064;Mock(name = ""database"") private ArticleDatabase dbMock; // note the mock name attribute",59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       &#064;Spy private UserProvider userProvider = new ConsumerUserProvider();,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       &#064;InjectMocks private ArticleManager manager;,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       &#064;Test public void shouldDoSomething() {,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           manager.initiateArticle();,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           verify(database).addListener(any(ArticleListener.class));,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       },67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class SampleBaseTestCase {,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       &#064;Before public void initMocks() {,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           MockitoAnnotations.initMocks(this);,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       },74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </code></pre>,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* In the above example the field <code>ArticleManager</code> annotated with <code>&#064;InjectMocks</code> can have,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* a parameterized constructor only or a no-arg constructor only, or both.",81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* All these constructors can be package protected, protected or private, however",82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <u>Mockito cannot instantiate inner classes, local classes, abstract classes and of course interfaces.</u>",83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <u>Beware of private nest static classes too.</u>,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <p>The same stands for setters or fields, they can be declared with private",86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* visibility, Mockito will see them through reflection.",87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* However fields that are static or final will be ignored.</p>,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <p>So on the field that needs injection, for example constructor injection will happen here :</p>",90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <pre class=""code""><code class=""java"">",91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class ArticleManager {,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*       ArticleManager(ArticleCalculator calculator, ArticleDatabase database) {",93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           // parameterized constructor,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       },95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </code></pre>,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>Property setter injection will happen here :</p>,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <pre class=""code""><code class=""java"">",100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class ArticleManager {,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       // no-arg constructor,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       ArticleManager() {  },103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       // setter,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       void setDatabase(ArticleDatabase database) { },106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       // setter,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       void setCalculator(ArticleCalculator calculator) { },109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </code></pre>,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>Field injection will be used here :</p>,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <pre class=""code""><code class=""java"">",114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class ArticleManager {,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       private ArticleDatabase database;,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       private ArticleCalculator calculator;,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </code></pre>,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <p>And finally, no injection will happen on the type in this case:</p>",122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* <pre class=""code""><code class=""java"">",123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   public class ArticleManager {,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       private ArticleDatabase database;,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       private ArticleCalculator calculator;,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"*       ArticleManager(ArticleObserver observer, boolean flag) {",128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           // observer is not declared in the test above.,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*           // flag is not mockable anyway,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*       },131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*   },132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </code></pre>,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* Again, note that &#064;InjectMocks will only inject mocks/spies created using the &#64;Spy or &#64;Mock annotation.",138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <strong><code>MockitoAnnotations.initMocks(this)</code></strong> method has to be called to initialize annotated objects.,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class.",143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* For JUnit3 <code>initMocks()</code> can go to <code>setup()</code> method of a base class.,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <strong>Instead</strong> you can also put initMocks() in your JUnit runner (&#064;RunWith) or use the built-in,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* {@link org.mockito.runners.MockitoJUnitRunner}.,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* <p>,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,"* Mockito is not an dependency injection framework, don't expect this shorthand utility to inject a complex graph of objects",150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* be it mocks/spies or real objects.,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* </p>,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* @see Mock,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* @see Spy,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* @see MockitoAnnotations#initMocks(Object),156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* @see org.mockito.runners.MockitoJUnitRunner,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,* @since 1.8.3,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,*/,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,@Documented,160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,@Target(FIELD),161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,@Retention(RUNTIME),162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\InjectMocks.java,public @interface InjectMocks {},163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.hamcrest.Matcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.mockito.internal.matchers.*;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.mockito.internal.matchers.apachecommons.ReflectionEquals;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.mockito.internal.progress.HandyReturnValues;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.mockito.internal.progress.MockingProgress;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import org.mockito.internal.progress.ThreadSafeMockingProgress;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import java.util.Collection;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import java.util.Map;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,import java.util.Set;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allow flexible verification or stubbing. See also {@link AdditionalMatchers}.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* {@link Mockito} extends Matchers so to get access to all matchers just import Mockito class statically.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <pre class=""code""><code class=""java"">",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*  //stubbing using anyInt() argument matcher,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*  when(mockedList.get(anyInt())).thenReturn(""element"");",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*  //following prints ""element""",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*  System.out.println(mockedList.get(999));,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*  //you can also verify using argument matcher,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*  verify(mockedList).get(anyInt());,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* </code></pre>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Scroll down to see all methods - full list of matchers.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <b>Warning:</b>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* If you are using argument matchers, <b>all arguments</b> have to be provided by matchers.",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* E.g: (example shows verification but the same applies to stubbing):,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <pre class=""code""><code class=""java"">",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   verify(mock).someMethod(anyInt(), anyString(), <b>eq(""third argument"")</b>);",41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //above is correct - eq() is also an argument matcher,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   verify(mock).someMethod(anyInt(), anyString(), <b>""third argument""</b>);",44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //above is incorrect - exception will be thrown because third argument is given without argument matcher.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* </code></pre>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Matcher methods like <code>anyObject()</code>, <code>eq()</code> <b>do not</b> return matchers.",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Internally, they record a matcher on a stack and return a dummy value (usually null).",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This implementation is due static type safety imposed by java compiler.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* The consequence is that you cannot use <code>anyObject()</code>, <code>eq()</code> methods outside of verified/stubbed method.",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <h1>Custom Argument Matchers</h1>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Use {@link Matchers#argThat} method and pass an instance of hamcrest {@link Matcher}.,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Before you start implementing your own custom argument matcher, make sure you check out {@link ArgumentCaptor} api.",57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* So, how to implement your own argument matcher?",59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* First, you might want to subclass {@link ArgumentMatcher} which is an hamcrest matcher with predefined describeTo() method.",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Default description generated by describeTo() uses <b>decamelized class name</b> - to promote meaningful class names.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Example:,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <pre class=""code""><code class=""java"">",65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   class IsListOfTwoElements extends ArgumentMatcher&lt;List&gt; {,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*      public boolean matches(Object list) {,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*          return ((List) list).size() == 2;,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*      },69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   },70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   List mock = mock(List.class);,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   when(mock.addAll(argThat(new IsListOfTwoElements()))).thenReturn(true);,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   mock.addAll(Arrays.asList(""one"", ""two""));",76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   verify(mock).addAll(argThat(new IsListOfTwoElements()));,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* </code></pre>,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* To keep it readable you may want to extract method, e.g:",81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <pre class=""code""><code class=""java"">",82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   verify(mock).addAll(<b>argThat(new IsListOfTwoElements())</b>);,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //becomes,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   verify(mock).addAll(<b>listOfTwoElements()</b>);,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* </code></pre>,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <b>Warning:</b> Be reasonable with using complicated argument matching, especially custom argument matchers, as it can make the test less readable.",88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Sometimes it's better to implement equals() for arguments that are passed to mocks,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* (Mockito naturally uses equals() for argument matching).,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This can make the test cleaner.,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Also, <b>sometimes {@link ArgumentCaptor} may be a better fit</b> than custom matcher.",93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* For example, if custom argument matcher is not likely to be reused",94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* or you just need it to assert on argument values to complete verification of behavior.,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"@SuppressWarnings(""unchecked"")",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public class Matchers {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,private static final MockingProgress MOCKING_PROGRESS = new ThreadSafeMockingProgress();,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>boolean</code> or non-null <code>Boolean</code>,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>false</code>.,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static boolean anyBoolean() {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Boolean.class)).returnFalse();,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,112,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>byte</code> or non-null <code>Byte</code>.,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static byte anyByte() {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Byte.class)).returnZero();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>char</code> or non-null <code>Character</code>.,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static char anyChar() {,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Character.class)).returnChar();,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,134,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any int or non-null Integer.,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static int anyInt() {,142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Integer.class)).returnZero();,143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,145,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>long</code> or non-null <code>Long</code>.,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static long anyLong() {,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Long.class)).returnZero();,154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,156,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>float</code> or non-null <code>Float</code>.,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static float anyFloat() {,164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Float.class)).returnZero();,165,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},166,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,167,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>double</code> or non-null <code>Double</code>.,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static double anyDouble() {,175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Double.class)).returnZero();,176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,178,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any <code>short</code> or non-null <code>Short</code>.,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static short anyShort() {,186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Short.class)).returnZero();,187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,189,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Matches anything, including null.",191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This is an alias of: {@link #any()} and {@link #any(java.lang.Class)},193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T anyObject() {,199,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(Any.ANY).returnNull();,200,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},201,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,202,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Any vararg, meaning any number and values of arguments.",204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Example:,206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* <pre class=""code""><code class=""java"">",207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //verification:,208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   mock.foo(1, 2);",209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   mock.foo(1, 2, 3, 4);",210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   verify(mock, times(2)).foo(anyVararg());",212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //stubbing:,214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   when(mock.foo(anyVararg()).thenReturn(100);,215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //prints 100,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   System.out.println(mock.foo(1, 2));",218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*   //also prints 100,219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*   System.out.println(mock.foo(1, 2, 3, 4));",220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* </code></pre>,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T anyVararg() {,226,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(AnyVararg.ANY_VARARG).returnNull();,227,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},228,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,229,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Matches any object, including nulls",231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* This method doesn't do type checks with the given parameter, it is only there",233,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* to avoid casting in your code. This might however change (type checks could,234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* be added) in a future major release.,235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,237,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,238,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This is an alias of: {@link #any()} and {@link #anyObject()},239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T any(Class<T> clazz) {,243,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(Any.ANY).returnFor(clazz);,244,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},245,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,246,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Matches anything, including nulls",248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Shorter alias to {@link Matchers#anyObject()},250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,252,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,253,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This is an alias of: {@link #anyObject()} and {@link #any(java.lang.Class)},254,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,255,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,256,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,257,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T any() {,258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return anyObject();,259,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},260,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,261,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>String</code>,263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* @return empty String ("""")",267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,268,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static String anyString() {,269,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(String.class)).returnString();,270,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},271,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,272,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>List</code>.,274,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,275,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,276,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,277,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty List.,278,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,279,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static List anyList() {,280,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(List.class)).returnList();,281,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},282,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,283,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Generic friendly alias to {@link Matchers#anyList()}.,285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* It's an alternative to &#064;SuppressWarnings(""unchecked"") to keep code clean of compiler warnings.",286,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,287,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>List</code>.,288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* This method doesn't do type checks with the given parameter, it is only there",290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* to avoid casting in your code. This might however change (type checks could,291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* be added) in a future major release.,292,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,293,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type owned by the list to avoid casting,296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty List.,297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,298,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> List<T> anyListOf(Class<T> clazz) {,299,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return anyList();,300,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},301,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,302,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,303,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Set</code>.,304,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,305,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,306,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Set,308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Set anySet() {,310,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Set.class)).returnSet();,311,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},312,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,313,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Generic friendly alias to {@link Matchers#anySet()}.,315,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* It's an alternative to &#064;SuppressWarnings(""unchecked"") to keep code clean of compiler warnings.",316,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,317,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Set</code>.,318,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* This method doesn't do type checks with the given parameter, it is only there",320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* to avoid casting in your code. This might however change (type checks could,321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* be added) in a future major release.,322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,323,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type owned by the Set to avoid casting,326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Set,327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,328,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> Set<T> anySetOf(Class<T> clazz) {,329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return anySet();,330,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},331,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,332,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Map</code>.,334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,336,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,337,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Map.,338,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,339,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Map anyMap() {,340,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Map.class)).returnMap();,341,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},342,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,343,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,344,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Generic friendly alias to {@link Matchers#anyMap()}.,345,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* It's an alternative to &#064;SuppressWarnings(""unchecked"") to keep code clean of compiler warnings.",346,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,347,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Map</code>.,348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* This method doesn't do type checks with the given parameter, it is only there",350,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* to avoid casting in your code. This might however change (type checks could,351,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* be added) in a future major release.,352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,353,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param keyClazz Type of the map key to avoid casting,356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param valueClazz Type of the value to avoid casting,357,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Map.,358,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,359,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"public static <K, V>  Map<K, V> anyMapOf(Class<K> keyClazz, Class<V> valueClazz) {",360,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return anyMap();,361,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},362,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,363,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,364,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Collection</code>.,365,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,366,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,367,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,368,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Collection.,369,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,370,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Collection anyCollection() {,371,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(Collection.class)).returnList();,372,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},373,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,374,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,375,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Generic friendly alias to {@link Matchers#anyCollection()}.,376,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* It's an alternative to &#064;SuppressWarnings(""unchecked"") to keep code clean of compiler warnings.",377,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,378,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Any non-null <code>Collection</code>.,379,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,380,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* This method doesn't do type checks with the given parameter, it is only there",381,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* to avoid casting in your code. This might however change (type checks could,382,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* be added) in a future major release.,383,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type owned by the collection to avoid casting,387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return empty Collection.,388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,389,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> Collection<T> anyCollectionOf(Class<T> clazz) {,390,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return anyCollection();,391,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},392,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,393,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,394,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>Object</code> argument that implements the given class.,395,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,396,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,397,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,398,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param <T>,399,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the accepted type.,400,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz,401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the class of the accepted type.,402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T isA(Class<T> clazz) {,405,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new InstanceOf(clazz)).<T>returnFor(clazz);,406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},407,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,408,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,409,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>boolean</code> argument that is equal to the given value.,410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,413,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,414,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,415,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,416,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,417,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static boolean eq(boolean value) {,418,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnFalse();,419,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},420,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,421,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,422,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>byte</code> argument that is equal to the given value.,423,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,424,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,425,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,427,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,428,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,429,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,430,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static byte eq(byte value) {,431,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,432,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},433,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,434,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,435,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>char</code> argument that is equal to the given value.,436,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,437,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,438,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,439,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,440,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,441,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,442,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,443,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static char eq(char value) {,444,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnChar();,445,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},446,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,447,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,448,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>double</code> argument that is equal to the given value.,449,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,450,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,451,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,452,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,453,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,454,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,455,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,456,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static double eq(double value) {,457,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,458,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},459,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,460,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,461,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>float</code> argument that is equal to the given value.,462,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,463,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,464,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,465,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,467,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,468,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,469,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static float eq(float value) {,470,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,471,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},472,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,473,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,474,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>int</code> argument that is equal to the given value.,475,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,476,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,477,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,478,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,479,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,480,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,481,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,482,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static int eq(int value) {,483,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,484,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},485,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,486,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>long</code> argument that is equal to the given value.,488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,490,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,491,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,492,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,493,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,494,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,495,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static long eq(long value) {,496,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,497,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},498,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,499,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>short</code> argument that is equal to the given value.,501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,504,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,505,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,506,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,507,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,508,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static short eq(short value) {,509,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Equals(value)).returnZero();,510,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},511,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,512,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,513,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Object argument that is equal to the given value.,514,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,515,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,516,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,517,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,518,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,519,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,520,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,521,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T eq(T value) {,522,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(new Equals(value)).<T>returnFor(value);,523,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},524,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,525,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,526,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Object argument that is reflection-equal to the given value with support for excluding,527,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* selected fields from a class.,528,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,529,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This matcher can be used when equals() is not implemented on compared objects.,530,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Matcher uses java reflection API to compare fields of wanted and actual object.,531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,532,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Works similarly to EqualsBuilder.reflectionEquals(this, other, exlucdeFields) from",533,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* apache commons library.,534,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,535,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <b>Warning</b> The equality check is shallow!,536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,537,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,538,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,539,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,540,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,541,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param excludeFields,542,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*            fields to exclude, if field does not exist it is ignored.",543,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,544,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,545,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"public static <T> T refEq(T value, String... excludeFields) {",546,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"return reportMatcher(new ReflectionEquals(value, excludeFields)).<T>returnNull();",547,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},548,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,549,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,550,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Object argument that is the same as the given value.,551,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,552,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,553,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,554,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param <T>,555,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"*            the type of the object, it is passed through to prevent casts.",556,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param value,557,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the given value.,558,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,559,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,560,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T same(T value) {,561,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(new Same(value)).<T>returnFor(value);,562,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},563,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,564,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,565,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>null</code> argument.,566,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,567,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,568,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,569,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,570,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,571,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Object isNull() {,572,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(Null.NULL).returnNull();,573,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},574,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,575,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,576,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>null</code> argument.,577,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* The class argument is provided to avoid casting.,578,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,579,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,580,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,581,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type to avoid casting,582,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,583,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,584,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T isNull(Class<T> clazz) {,585,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(Null.NULL).returnNull();,586,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},587,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,588,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,589,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Not <code>null</code> argument.,590,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,591,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* alias to {@link Matchers#isNotNull()},592,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,593,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,597,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Object notNull() {,598,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(NotNull.NOT_NULL).returnNull();,599,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},600,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,601,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,602,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Not <code>null</code> argument, not necessary of the given class.",603,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* The class argument is provided to avoid casting.,604,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,605,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* alias to {@link Matchers#isNotNull(Class)},606,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,607,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,608,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,609,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type to avoid casting,610,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,611,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,612,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T notNull(Class<T> clazz) {,613,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return (T) reportMatcher(NotNull.NOT_NULL).returnNull();,614,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},615,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,616,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,617,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Not <code>null</code> argument.,618,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,619,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* alias to {@link Matchers#notNull()},620,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,621,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,622,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,623,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,624,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,625,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static Object isNotNull() {,626,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return notNull();,627,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},628,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,629,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,630,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* Not <code>null</code> argument, not necessary of the given class.",631,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* The class argument is provided to avoid casting.,632,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,633,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* alias to {@link Matchers#notNull(Class)},634,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,635,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,636,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,637,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param clazz Type to avoid casting,638,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,639,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,640,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T isNotNull(Class<T> clazz) {,641,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return notNull(clazz);,642,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},643,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,644,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,645,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>String</code> argument that contains the given substring.,646,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,647,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,648,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,649,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param substring,650,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the substring.,651,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* @return empty String ("""").",652,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,653,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static String contains(String substring) {,654,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Contains(substring)).returnString();,655,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},656,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,657,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,658,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>String</code> argument that matches the given regular expression.,659,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,660,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,661,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,662,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param regex,663,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the regular expression.,664,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* @return empty String ("""").",665,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,666,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static String matches(String regex) {,667,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new Matches(regex)).returnString();,668,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},669,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,670,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,671,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>String</code> argument that ends with the given suffix.,672,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,673,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,674,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,675,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param suffix,676,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the suffix.,677,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* @return empty String ("""").",678,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,679,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static String endsWith(String suffix) {,680,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new EndsWith(suffix)).returnString();,681,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},682,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,683,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,684,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <code>String</code> argument that starts with the given prefix.,685,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,686,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,687,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,688,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param prefix,689,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*            the prefix.,690,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* @return empty String ("""").",691,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,692,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static String startsWith(String prefix) {,693,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(new StartsWith(prefix)).returnString();,694,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},695,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,696,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,697,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom argument matchers.,698,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,699,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,"* In rare cases when the parameter is a primitive then you <b>*must*</b> use relevant intThat(), floatThat(), etc. method.",700,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* This way you will avoid <code>NullPointerException</code> during auto-unboxing.,701,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,702,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link ArgumentMatcher} class,703,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,704,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,705,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>null</code>.,706,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,707,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static <T> T argThat(Matcher<T> matcher) {,708,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).<T>returnNull();,709,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},710,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,711,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,712,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Character</code> argument matchers.,713,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,714,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,715,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,716,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,717,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,718,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,719,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static char charThat(Matcher<Character> matcher) {,720,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnChar();,721,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},722,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,723,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,724,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Boolean</code> argument matchers.,725,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,726,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,727,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,728,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,729,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>false</code>.,730,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,731,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static boolean booleanThat(Matcher<Boolean> matcher) {,732,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnFalse();,733,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},734,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,735,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,736,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Byte</code> argument matchers.,737,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,738,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,739,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,740,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,741,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,742,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,743,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static byte byteThat(Matcher<Byte> matcher) {,744,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,745,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},746,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,747,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,748,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Short</code> argument matchers.,749,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,750,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,751,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,752,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,753,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,754,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,755,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static short shortThat(Matcher<Short> matcher) {,756,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,757,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},758,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,759,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,760,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Integer</code> argument matchers.,761,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,762,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,763,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,764,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,765,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,766,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,767,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static int intThat(Matcher<Integer> matcher) {,768,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,769,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},770,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,771,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,772,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Long</code> argument matchers.,773,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,774,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,775,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,776,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,777,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,778,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,779,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static long longThat(Matcher<Long> matcher) {,780,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,781,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},782,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,783,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,784,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Float</code> argument matchers.,785,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,786,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,787,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,788,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,789,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,790,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,791,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static float floatThat(Matcher<Float> matcher) {,792,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,793,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},794,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,795,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,/**,796,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* Allows creating custom <code>Double</code> argument matchers.,797,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* <p>,798,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* See examples in javadoc for {@link Matchers} class,799,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*,800,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @param matcher decides whether argument matches,801,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,* @return <code>0</code>.,802,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,*/,803,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,public static double doubleThat(Matcher<Double> matcher) {,804,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return reportMatcher(matcher).returnZero();,805,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},806,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,,807,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,private static HandyReturnValues reportMatcher(Matcher<?> matcher) {,808,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,return MOCKING_PROGRESS.getArgumentMatcherStorage().reportMatcher(matcher);,809,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},810,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Matchers.java,},811,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,import java.lang.annotation.Documented;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,import java.lang.annotation.Retention;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,import java.lang.annotation.Target;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,import static java.lang.annotation.ElementType.FIELD;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,import static java.lang.annotation.RetentionPolicy.RUNTIME;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* Mark a field as a mock.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <ul>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <li>Allows shorthand mock creation.</li>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <li>Minimizes repetitive mock creation code.</li>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <li>Makes the test class more readable.</li>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <li>Makes the verification error easier to read because the <b>field name</b> is used to identify the mock.</li>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* </ul>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"* <pre class=""code""><code class=""java"">",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*   public class ArticleManagerTest extends SampleBaseTestCase {,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       &#064;Mock private ArticleCalculator calculator;,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"*       &#064;Mock(name = ""database"") private ArticleDatabase dbMock;",28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       &#064;Mock(answer = RETURNS_MOCKS) private UserProvider userProvider;,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"*       &#064;Mock(extraInterfaces = {Queue.class, Observer.class}) private  articleMonitor;",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       private ArticleManager manager;,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       &#064;Before public void setup() {,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"*           manager = new ArticleManager(userProvider, database, calculator, articleMonitor);",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       },36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*   },37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*   public class SampleBaseTestCase {,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       &#064;Before public void initMocks() {,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*           MockitoAnnotations.initMocks(this);,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*       },43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*   },44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* </code></pre>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <p>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <strong><code>MockitoAnnotations.initMocks(this)</code></strong> method has to be called to initialize annotated objects.,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"* In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class.",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* For JUnit3 <code>initMocks()</code> can go to <code>setup()</code> method of a base class.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* <strong>Instead</strong> you can also put initMocks() in your JUnit runner (&#064;RunWith) or use the built-in,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* {@link org.mockito.runners.MockitoJUnitRunner}.,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* </p>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* @see Mockito#mock(Class),55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* @see Spy,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* @see InjectMocks,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* @see MockitoAnnotations#initMocks(Object),58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,* @see org.mockito.runners.MockitoJUnitRunner,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,*/,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,@Target(FIELD),61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,@Retention(RUNTIME),62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,@Documented,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,public @interface Mock {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,Answers answer() default Answers.RETURNS_DEFAULTS;,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,"String name() default """";",68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,Class<?>[] extraInterfaces() default {};,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,boolean serializable() default false;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mock.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,import org.mockito.listeners.InvocationListener;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,import org.mockito.mock.SerializableMode;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Allows mock creation with additional mock settings.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p/>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Don't use it too often.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Consider writing simple tests that use simple mocks.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Repeat after me: simple tests push simple, KISSy, readable & maintainable code.",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* If you cannot write a test in a simple way - refactor the code under test.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p/>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Examples of mock settings:,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //Creates mock with different default answer & name,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo mock = mock(Foo.class, withSettings()",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*                                .defaultAnswer(RETURNS_SMART_NULLS),25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*                                .name(""cool mockie"")",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*                                );,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   //Creates mock with different default answer, descriptive name and extra interfaces",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo mock = mock(Foo.class, withSettings()",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*                                .defaultAnswer(RETURNS_SMART_NULLS),31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*                                .name(""cool mockie"")",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*                                .extraInterfaces(Bar.class));,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* {@link MockSettings} has been introduced for two reasons.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Firstly, to make it easy to add another mock setting when the demand comes.",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Secondly, to enable combining together different mock settings without introducing zillions of overloaded mock() methods.",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,public interface MockSettings extends Serializable {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Specifies extra interfaces the mock should implement. Might be useful for legacy code or some corner cases.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* For background, see issue 51 <a href=""http://code.google.com/p/mockito/issues/detail?id=51"">here</a>",43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* This mysterious feature should be used very occasionally.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* The object under test should know exactly its collaborators & dependencies.,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* If you happen to use it often than please make sure you are really producing simple, clean & readable code.",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Examples:,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo foo = mock(Foo.class, withSettings().extraInterfaces(Bar.class, Baz.class));",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   //now, the mock implements extra interfaces, so following casting is possible:",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   Bar bar = (Bar) foo;,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   Baz baz = (Baz) foo;,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @param interfaces extra interfaces the should implement.,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings extraInterfaces(Class<?>... interfaces);,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Specifies mock name. Naming mocks can be helpful for debugging - the name is used in all verification errors.,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Beware that naming mocks is not a solution for complex code which uses too many mocks or collaborators.,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <b>If you have too many mocks then refactor the code</b> so that it's easy to test/debug without necessity of naming mocks.,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <b>If you use &#064;Mock annotation then you've got naming mocks for free!</b> &#064;Mock uses field name as mock name. {@link Mock Read more.},69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Examples:,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo foo = mock(Foo.class, withSettings().name(""foo""));",73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //Below does exactly the same:,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo foo = mock(Foo.class, ""foo"");",76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* @param name the name of the mock, later used in all verification errors",78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings name(String name);,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Specifies the instance to spy on. Makes sense only for spies/partial mocks.,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Sets the instance that will be spied. Actually copies the internal fields of the passed instance to the mock.,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* As usual you are going to read <b>the partial mock warning</b>:,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Object oriented programming is more or less about tackling complexity by dividing the complexity into separate, specific, SRPy objects.",89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* In most cases, this is not the way you want to design your application.",92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* However, there are rare cases when partial mocks come handy:",94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Enough warnings about partial mocks, see an example how spiedInstance() works:",98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo foo = mock(Foo.class, withSettings().spiedInstance(fooInstance));",100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //Below does exactly the same:,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   Foo foo = spy(fooInstance);,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* About stubbing for a partial mock, as it is a spy it will always call the real method, unless you use the",106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <code>doReturn</code>|<code>Throw</code>|<code>Answer</code>|<code>CallRealMethod</code> stubbing style. Example:,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   List list = new LinkedList();,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   List spy = spy(list);,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty),113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   when(spy.get(0)).thenReturn(""foo"");",114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //You have to use doReturn() for stubbing,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   doReturn(""foo"").when(spy).get(0);",117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code>,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @param instance to spy on,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings spiedInstance(Object instance);,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,124,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Specifies default answers to interactions.,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* It's quite advanced feature and typically you don't need it to write decent tests.,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* However it can be helpful when working with legacy systems.,128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo mock = mock(Foo.class, withSettings().defaultAnswer(RETURNS_SMART_NULLS));",133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo mockTwo = mock(Foo.class, withSettings().defaultAnswer(new YourOwnAnswer()));",134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   //Below does exactly the same:,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   Foo mockTwo = mock(Foo.class, new YourOwnAnswer());",137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @param defaultAnswer default answer to be used by mock when not stubbed,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"@SuppressWarnings(""unchecked"")",143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings defaultAnswer(Answer defaultAnswer);,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,145,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Configures the mock to be serializable. With this feature you can use a mock in a place that requires dependencies to be serializable.,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* WARNING: This should be rarely used in unit testing.,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* The behaviour was implemented for a specific use case of a BDD spec that had an unreliable external dependency.  This,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* was in a web environment and the objects from the external dependency were being serialized to pass between layers.,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   List serializableMock = mock(List.class, withSettings().serializable());",156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @since 1.8.1,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings serializable();,162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,163,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Configures the mock to be serializable with a specific serializable mode.,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* With this feature you can use a mock in a place that requires dependencies to be serializable.,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* WARNING: This should be rarely used in unit testing.,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* The behaviour was implemented for a specific use case of a BDD spec that had an unreliable external dependency.  This,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* was in a web environment and the objects from the external dependency were being serialized to pass between layers.,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*   List serializableMock = mock(List.class, withSettings().serializable(SerializableMode.ACROSS_CLASSLOADERS));",174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @param mode serialization mode,177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @since 1.10.0,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings serializable(SerializableMode mode);,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,182,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Enables real-time logging of method invocations on this mock. Can be used,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* during test debugging in order to find wrong interactions with this mock.,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Invocations are logged as they happen to the standard output stream.,187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Calling this method multiple times makes no difference.,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* List mockWithLogger = mock(List.class, withSettings().verboseLogging());",193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings verboseLogging();,198,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,199,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Registers a listener for method invocations on this mock. The listener is,201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* notified every time a method on this mock is called.,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* Multiple listeners may be added, but the same object is only added once.",204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* The order, in which the listeners are added, is not guaranteed to be the",205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* order in which the listeners are notified.,206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"*  List mockWithListener = mock(List.class, withSettings().invocationListeners(new YourInvocationListener()));",210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* See the {@link InvocationListener listener interface} for more details.,213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @param listeners The invocation listeners to add. May not be null.,215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings invocationListeners(InvocationListener... listeners);,218,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,219,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* A stub-only mock does not record method,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* invocations, thus saving memory but",222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* disallowing verification of invocations.,223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",226,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* List stubOnly = mock(List.class, withSettings().stubOnly());",227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings stubOnly();,232,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,233,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Mockito attempts to use constructor when creating instance of the mock.,235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* This is particularly useful for spying on abstract classes. See also {@link Mockito#spy(Class)}.,236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,237,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,238,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* //Robust API, via settings builder:",240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* OtherAbstract spy = mock(OtherAbstract.class, withSettings()",241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   .useConstructor().defaultAnswer(CALLS_REAL_METHODS));,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* //Mocking a non-static inner abstract class:,244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* InnerAbstract spy = mock(InnerAbstract.class, withSettings()",245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   .useConstructor().outerInstance(outerInstance).defaultAnswer(CALLS_REAL_METHODS));,246,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @since 1.10.12,250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,@Incubating,252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings useConstructor();,253,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,,254,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,/**,255,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Makes it possible to mock non-static inner classes in conjunction with {@link #useConstructor()}.,256,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* <p>,257,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* Example:,258,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* <pre class=""code""><code class=""java"">",259,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,"* InnerClass mock = mock(InnerClass.class, withSettings()",260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*   .useConstructor().outerInstance(outerInstance).defaultAnswer(CALLS_REAL_METHODS));,261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* </code></pre>,262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*,263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @return settings instance so that you can fluently specify other settings,264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,* @since 1.10.12,265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,*/,266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,@Incubating,267,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,MockSettings outerInstance(Object outerClassInstance);,268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockSettings.java,},269,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,import org.mockito.invocation.Invocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,import java.util.Collection;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* Provides mocking information.,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,"* For example, you can identify whether a particular object is either a mock or a spy.",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @since 1.9.5,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,public interface MockingDetails {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* Informs if the object is a mock. isMock() for null input returns false.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @return true if the object is a mock or a spy.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @since 1.9.5,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,boolean isMock();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,/**,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* Informs if the object is a spy. isSpy() for null input returns false.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @return true if the object is a spy.,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @since 1.9.5,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*/,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,boolean isSpy();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* Provides a collection of methods indicating the invocations of the object,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @return collection of Invocation representing the invocations,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* for the object.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,* @since 1.10.0,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,Collection<Invocation> getInvocations();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockingDetails.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.MockitoCore;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.creation.MockSettingsImpl;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.debugging.MockitoDebuggerImpl;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.stubbing.answers.*;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.internal.verification.VerificationModeFactory;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.mock.SerializableMode;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.runners.MockitoJUnitRunner;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.stubbing.*;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.verification.*;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,import org.mockito.junit.*;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <p align=""left""><img src=""logo.jpg""/></p>",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Mockito library enables mocks creation, verification and stubbing.",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* This javadoc content is also available on the <a href=""http://mockito.org"">http://mockito.org</a> web page.",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* All documentation is kept in javadocs because it guarantees consistency between what's on the web and what's in the source code.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Also, it makes possible to access documentation straight from the IDE even if you work offline.",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <h1>Contents</h1>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#1"">1. Let's verify some behaviour! </a><br/>",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#2"">2. How about some stubbing? </a><br/>",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#3"">3. Argument matchers </a><br/>",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#4"">4. Verifying exact number of invocations / at least once / never </a><br/>",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#5"">5. Stubbing void methods with exceptions </a><br/>",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#6"">6. Verification in order </a><br/>",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#7"">7. Making sure interaction(s) never happened on mock </a><br/>",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#8"">8. Finding redundant invocations </a><br/>",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#9"">9. Shorthand for mocks creation - <code>&#064;Mock</code> annotation </a><br/>",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#10"">10. Stubbing consecutive calls (iterator-style stubbing) </a><br/>",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#11"">11. Stubbing with callbacks </a><br/>",41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#12"">12. <code>doReturn()</code>|<code>doThrow()</code>|<code>doAnswer()</code>|<code>doNothing()</code>|<code>doCallRealMethod()</code> family of methods</a><br/>",42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#13"">13. Spying on real objects </a><br/>",43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#14"">14. Changing default return values of unstubbed invocations (Since 1.7) </a><br/>",44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#15"">15. Capturing arguments for further assertions (Since 1.8.0) </a><br/>",45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#16"">16. Real partial mocks (Since 1.8.0) </a><br/>",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#17"">17. Resetting mocks (Since 1.8.0) </a><br/>",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#18"">18. Troubleshooting & validating framework usage (Since 1.8.0) </a><br/>",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#19"">19. Aliases for behavior driven development (Since 1.8.0) </a><br/>",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#20"">20. Serializable mocks (Since 1.8.1) </a><br/>",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#21"">21. New annotations: <code>&#064;Captor</code>, <code>&#064;Spy</code>, <code>&#064;InjectMocks</code> (Since 1.8.3) </a><br/>",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#22"">22. Verification with timeout (Since 1.8.5) </a><br/>",52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#23"">23. Automatic instantiation of <code>&#064;Spies</code>, <code>&#064;InjectMocks</code> and constructor injection goodness (Since 1.9.0)</a><br/>",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#24"">24. One-liner stubs (Since 1.9.0)</a><br/>",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#25"">25. Verification ignoring stubs (Since 1.9.0)</a><br/>",55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#26"">26. Mocking details (Since 1.9.5)</a><br/>",56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#27"">27. Delegate calls to real instance (Since 1.9.5)</a><br/>",57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#28"">28. <code>MockMaker</code> API (Since 1.9.5)</a><br/>",58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#29"">29. (new) BDD style verification (Since 1.10.0)</a><br/>",59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#30"">30. (new) Spying or mocking abstract classes (Since 1.10.12)</a><br/>",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#31"">31. (new) Mockito mocks can be <em>serialized</em> / <em>deserialized</em> across classloaders (Since 1.10.0)</a></h3>",61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#32"">32. (new) Better generic support with deep stubs (Since 1.10.0)</a></h3>",62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#32"">33. (new) Mockito JUnit rule (Since 1.10.17)</a><br/>",63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*      <a href=""#34"">34. (new) Switch <em>on</em> or <em>off</em> plugins (Since 1.10.15)</a><br/>",64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </b>,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Following examples mock a List, because everyone knows its interface (methods",68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* like <code>add()</code>, <code>get()</code>, <code>clear()</code> will be used). <br>",69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* You probably wouldn't mock List class 'in real'.,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""1"">1. <a class=""meaningful_link"" href=""#verification"">Let's verify some behaviour!</a></h3>",75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //Let's import Mockito statically so that the code looks clearer,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* import static org.mockito.Mockito.*;,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //mock creation,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* List mockedList = mock(List.class);,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using mock object,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""one"");",85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* mockedList.clear();,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verification,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList).add(""one"");",89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mockedList).clear();,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Once created, mock will remember all interactions. Then you can selectively",94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify whatever interaction you are interested in.,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""2"">2. <a class=""meaningful_link"" href=""#stubbing"">How about some stubbing?</a></h3>",100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //You can mock concrete classes, not only interfaces",103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* LinkedList mockedList = mock(LinkedList.class);,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //stubbing,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mockedList.get(0)).thenReturn(""first"");",107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* when(mockedList.get(1)).thenThrow(new RuntimeException());,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //following prints ""first""",110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* System.out.println(mockedList.get(0));,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //following throws runtime exception,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* System.out.println(mockedList.get(1));,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //following prints ""null"" because get(999) was not stubbed",116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* System.out.println(mockedList.get(999));,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>",119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //If your code cares what get(0) returns then something else breaks (often before even verify() gets executed).,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //If your code doesn't care what get(0) returns then it should not be stubbed. Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>.",121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mockedList).get(0);,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li> By default, for all methods that return value, mock returns null, an",126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* empty collection or appropriate primitive/primitive wrapper value (e.g: 0,",127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* false, ... for int/Integer, boolean/Boolean, ...). </li>",128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li> Stubbing can be overridden: for example common stubbing can go to,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* fixture setup but the test methods can override it.,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please note that overridding stubbing is a potential code smell that points out too much stubbing</li>,132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li> Once stubbed, the method will always return stubbed value regardless",134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* of how many times it is called. </li>,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li> Last stubbing is more important - when you stubbed the same method with,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* the same arguments many times.,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Other words: <b>the order of stubbing matters</b> but it is only meaningful rarely,",139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* e.g. when stubbing exactly the same method calls or sometimes when argument matchers are used, etc.</li>",140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""3"">3. <a class=""meaningful_link"" href=""#argument_matchers"">Argument matchers</a></h3>",146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito verifies argument values in natural java style: by using an <code>equals()</code> method.,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Sometimes, when extra flexibility is required then you might use argument matchers:",149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //stubbing using built-in anyInt() argument matcher,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mockedList.get(anyInt())).thenReturn(""element"");",153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //stubbing using hamcrest (let's say isValid() returns your own hamcrest matcher):,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mockedList.contains(argThat(isValid()))).thenReturn(""element"");",156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //following prints ""element""",158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* System.out.println(mockedList.get(999));,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //<b>you can also verify using an argument matcher</b>,161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mockedList).get(anyInt());,162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Argument matchers allow flexible verification or stubbing.,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Matchers Click here to see} more built-in matchers,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* and examples of <b>custom argument matchers / hamcrest matchers</b>.,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For information solely on <b>custom argument matchers</b> check out javadoc for {@link ArgumentMatcher} class.,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Be reasonable with using complicated argument matching.,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The natural matching style using <code>equals()</code> with occasional <code>anyX()</code> matchers tend to give clean & simple tests.,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Sometimes it's just better to refactor the code to allow <code>equals()</code> matching or even implement <code>equals()</code> method to help out with testing.,174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Also, read <a href=""#15"">section 15</a> or javadoc for {@link ArgumentCaptor} class.",176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link ArgumentCaptor} is a special implementation of an argument matcher that captures argument values for further assertions.,177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Warning on argument matchers:</b>,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* If you are using argument matchers, <b>all arguments</b> have to be provided",181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* by matchers.,182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* E.g: (example shows verification but the same applies to stubbing):,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock).someMethod(anyInt(), anyString(), <b>eq(""third argument"")</b>);",187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is correct - eq() is also an argument matcher,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock).someMethod(anyInt(), anyString(), <b>""third argument""</b>);",190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is incorrect - exception will be thrown because third argument is given without an argument matcher.,191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Matcher methods like <code>anyObject()</code>, <code>eq()</code> <b>do not</b> return matchers.",195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Internally, they record a matcher on a stack and return a dummy value (usually null).",196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation is due static type safety imposed by java compiler.,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* The consequence is that you cannot use <code>anyObject()</code>, <code>eq()</code> methods outside of verified/stubbed method.",198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""4"">4. <a class=""meaningful_link"" href=""#exact_verification"">Verifying exact number of invocations</a> /",203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a class=""meaningful_link"" href=""#at_least_verification"">at least x</a> / never</h3>",204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using mock,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""once"");",208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""twice"");",210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""twice"");",211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""three times"");",213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""three times"");",214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""three times"");",215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //following two verifications work exactly the same - times(1) is used by default,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList).add(""once"");",218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, times(1)).add(""once"");",219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //exact number of invocations verification,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, times(2)).add(""twice"");",222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, times(3)).add(""three times"");",223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verification using never(). never() is an alias to times(0),225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, never()).add(""never happened"");",226,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verification using atLeast()/atMost(),228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, atLeastOnce()).add(""three times"");",229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, atLeast(2)).add(""five times"");",230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList, atMost(5)).add(""three times"");",231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,233,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>times(1) is the default.</b> Therefore using times(1) explicitly can be,236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* omitted.,237,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,238,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""5"">5. <a class=""meaningful_link"" href=""#stubbing_with_exceptions"">Stubbing void methods with exceptions</a></h3>",242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(new RuntimeException()).when(mockedList).clear();,245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,246,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //following throws RuntimeException:,247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mockedList.clear();,248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read more about doThrow|doAnswer family of methods in paragraph 12.,251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,252,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Initially, {@link Mockito#stubVoid(Object)} was used for stubbing voids.",253,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Currently <code>stubVoid()</code> is deprecated in favor of {@link Mockito#doThrow(Throwable)}.,254,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is because of improved readability and consistency with the family of {@link Mockito#doAnswer(Answer)} methods.,255,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,256,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,257,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,258,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,259,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""6"">6. <a class=""meaningful_link"" href=""#in_order_verification"">Verification in order</a></h3>",260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // A. Single mock whose methods must be invoked in a particular order,263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* List singleMock = mock(List.class);,264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using a single mock,266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* singleMock.add(""was added first"");",267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* singleMock.add(""was added second"");",268,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,269,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //create an inOrder verifier for a single mock,270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* InOrder inOrder = inOrder(singleMock);,271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //following will make sure that add is first called with ""was added first, then with ""was added second""",273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* inOrder.verify(singleMock).add(""was added first"");",274,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* inOrder.verify(singleMock).add(""was added second"");",275,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,276,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // B. Multiple mocks that must be used in a particular order,277,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* List firstMock = mock(List.class);,278,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* List secondMock = mock(List.class);,279,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,280,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using mocks,281,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* firstMock.add(""was called first"");",282,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* secondMock.add(""was called second"");",283,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //create inOrder object passing any mocks that need to be verified in order,285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* InOrder inOrder = inOrder(firstMock, secondMock);",286,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,287,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //following will make sure that firstMock was called before secondMock,288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* inOrder.verify(firstMock).add(""was called first"");",289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* inOrder.verify(secondMock).add(""was called second"");",290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* // Oh, and A + B can be mixed together at will",292,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,293,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verification in order is flexible - <b>you don't have to verify all,295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* interactions</b> one-by-one but only those that you are interested in,296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* testing in order.,297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,298,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Also, you can create InOrder object passing only mocks that are relevant for",299,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* in-order verification.,300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,302,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,303,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,304,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""7"">7. <a class=""meaningful_link"" href=""#never_verification"">Making sure interaction(s) never happened on mock</a></h3>",305,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,306,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using mocks - only mockOne is interacted,308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockOne.add(""one"");",309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,310,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //ordinary verification,311,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockOne).add(""one"");",312,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,313,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verify that method was never called on a mock,314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockOne, never()).add(""two"");",315,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,316,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verify that other mocks were not interacted,317,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verifyZeroInteractions(mockTwo, mockThree);",318,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,323,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""8"">8. <a class=""meaningful_link"" href=""#finding_redundant_invocations"">Finding redundant invocations</a></h3>",325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //using mocks,328,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""one"");",329,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mockedList.add(""two"");",330,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,331,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verify(mockedList).add(""one"");",332,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //following verification will fail,334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verifyNoMoreInteractions(mockedList);,335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,336,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,337,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* A word of <b>warning</b>:,338,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Some users who did a lot of classic, expect-run-verify mocking tend to use <code>verifyNoMoreInteractions()</code> very often, even in every test method.",339,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>verifyNoMoreInteractions()</code> is not recommended to use in every test method.,340,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>verifyNoMoreInteractions()</code> is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.,341,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Abusing it leads to <strong>overspecified</strong>, <strong>less maintainable</strong> tests. You can find further reading",342,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>.",343,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,344,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,345,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link Mockito#never()} - it is more explicit and,346,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* communicates the intent well.,347,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,350,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,351,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""9"">9. <a class=""meaningful_link"" href=""#mock_annotation"">Shorthand for mocks creation - <code>&#064;Mock</code> annotation</a></h3>",353,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Minimizes repetitive mock creation code.</li>,356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Makes the test class more readable.</li>,357,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Makes the verification error easier to read because the <b>field name</b>,358,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* is used to identify the mock.</li>,359,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,360,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,361,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",362,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   public class ArticleManagerTest {,363,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,364,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       &#064;Mock private ArticleCalculator calculator;,365,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       &#064;Mock private ArticleDatabase database;,366,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       &#064;Mock private UserProvider userProvider;,367,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,368,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       private ArticleManager manager;,369,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,370,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,371,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Important!</b> This needs to be somewhere in the base class or a test,372,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* runner:,373,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,374,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",375,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* MockitoAnnotations.initMocks(testClass);,376,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,377,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,378,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* You can use built-in runner: {@link MockitoJUnitRunner} or a rule: {@link MockitoRule}.,379,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,380,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read more here: {@link MockitoAnnotations},381,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,382,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,383,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""10"">10. <a class=""meaningful_link"" href=""#stubbing_consecutive_calls"">Stubbing consecutive calls</a> (iterator-style stubbing)</h3>",386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Sometimes we need to stub with different return value/exception for the same,388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* method call. Typical use case could be mocking iterators.,389,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Original version of Mockito did not have this feature to promote simple mocking.,390,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* For example, instead of iterators one could use {@link Iterable} or simply",391,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* collections. Those offer natural ways of stubbing (e.g. using real,392,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* collections). In rare scenarios stubbing consecutive calls could be useful,",393,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* though:,394,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,395,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,396,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",397,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",398,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   .thenThrow(new RuntimeException()),399,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   .thenReturn(""foo"");",400,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //First call: throws runtime exception:,402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mock.someMethod(""some arg"");",403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Second call: prints ""foo""",405,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* System.out.println(mock.someMethod(""some arg""));",406,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,407,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Any consecutive call: prints ""foo"" as well (last stubbing wins).",408,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* System.out.println(mock.someMethod(""some arg""));",409,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Alternative, shorter version of consecutive stubbing:",412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,413,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",414,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",415,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   .thenReturn(""one"", ""two"", ""three"");",416,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,417,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,418,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,419,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,420,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,421,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""11"">11. <a class=""meaningful_link"" href=""#answer_stubs"">Stubbing with callbacks</a></h3>",422,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,423,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows stubbing with generic {@link Answer} interface.,424,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,425,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Yet another controversial feature which was not included in Mockito,426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* originally. We recommend using simple stubbing with <code>thenReturn()</code> or,427,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>thenThrow()</code> only. Those two should be <b>just enough</b> to test/test-drive,428,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* any clean & simple code.,429,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,430,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",431,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* when(mock.someMethod(anyString())).thenAnswer(new Answer() {,432,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     Object answer(InvocationOnMock invocation) {,433,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*         Object[] args = invocation.getArguments();,434,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*         Object mock = invocation.getMock();,435,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*         return ""called with arguments: "" + args;",436,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     },437,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* });,438,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,439,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Following prints ""called with arguments: foo""",440,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* System.out.println(mock.someMethod(""foo""));",441,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,442,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,443,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,444,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,445,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,446,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""12"">12. <a class=""meaningful_link"" href=""#do_family_methods_stubs""><code>doReturn()</code>|<code>doThrow()</code>|",447,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>doAnswer()</code>|<code>doNothing()</code>|<code>doCallRealMethod()</code> family of methods</a></h3>,448,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,449,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not,450,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* like void methods inside brackets...,451,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,452,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doThrow(Throwable)} replaces the {@link Mockito#stubVoid(Object)} method for stubbing voids.,453,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The main reason is improved readability and consistency with the family of <code>doAnswer()</code> methods.,454,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,455,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doThrow()</code> when you want to stub a void method with an exception:,456,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",457,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(new RuntimeException()).when(mockedList).clear();,458,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,459,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //following throws RuntimeException:,460,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mockedList.clear();,461,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,462,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,463,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,464,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* You can use <code>doThrow()</code>, <code>doAnswer()</code>, <code>doNothing()</code>, <code>doReturn()</code>",465,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* and <code>doCallRealMethod()</code> in place of the corresponding call with <code>when()</code>, for any method.",466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It is necessary when you,467,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,468,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>stub void methods</li>,469,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>stub methods on spy objects (see below)</li>,470,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     <li>stub the same method more than once, to change the behaviour of a mock in the middle of a test.</li>",471,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,472,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* but you may prefer to use these methods in place of the alternative with <code>when()</code>, for all of your stubbing calls.",473,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,474,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read more about these methods:,475,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,476,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doReturn(Object)},477,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,478,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doThrow(Throwable)},479,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,480,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doThrow(Class)},481,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,482,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doAnswer(Answer)},483,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,484,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doNothing()},485,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,486,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Mockito#doCallRealMethod()},487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,490,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,491,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""13"">13. <a class=""meaningful_link"" href=""#spy"">Spying on real objects</a></h3>",492,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,493,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* You can create spies of real objects. When you use the spy then the <b>real</b> methods are called,494,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* (unless a method was stubbed).,495,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,496,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code.",497,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,498,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,499,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Spying on real objects can be associated with ""partial mocking"" concept.",500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <b>Before the release 1.8</b>, Mockito spies were not real partial mocks.",501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The reason was we thought partial mock is a code smell.,502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* At some point we found legitimate use cases for partial mocks,503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* (3rd party interfaces, interim refactoring of legacy code, the full article is <a href=",504,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* ""http://monkeyisland.pl/2009/01/13/subclass-and-override-vs-partial-mocking-vs-refactoring""",505,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* >here</a>),506,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,507,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,508,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",509,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,510,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,511,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,512,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //optionally, you can stub out some methods:",513,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(spy.size()).thenReturn(100);,514,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,515,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //using the spy calls <b>*real*</b> methods,516,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   spy.add(""one"");",517,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   spy.add(""two"");",518,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,519,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //prints ""one"" - the first element of a list",520,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   System.out.println(spy.get(0));,521,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,522,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //size() method was stubbed - 100 is printed,523,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   System.out.println(spy.size());,524,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,525,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //optionally, you can verify",526,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(spy).add(""one"");",527,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(spy).add(""two"");",528,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,529,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,530,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <h4>Important gotcha on spying real objects!</h4>,531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ol>,532,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Sometimes it's impossible or impractical to use {@link Mockito#when(Object)} for stubbing spies.,533,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Therefore when using spies please consider <code>doReturn</code>|<code>Answer</code>|<code>Throw()</code> family of,534,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* methods for stubbing. Example:,535,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",537,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,538,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,539,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,540,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty),541,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(spy.get(0)).thenReturn(""foo"");",542,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,543,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //You have to use doReturn() for stubbing,544,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   doReturn(""foo"").when(spy).get(0);",545,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,546,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,547,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,548,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li>Mockito <b>*does not*</b> delegate calls to the passed real instance, instead it actually creates a copy of it.",549,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* So if you keep the real instance and interact with it, don't expect the spied to be aware of those interaction",550,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* and their effect on real instance state.,551,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* The corollary is that when an <b>*unstubbed*</b> method is called <b>*on the spy*</b> but <b>*not on the real instance*</b>,",552,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* you won't see any effects on the real instance.,553,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,554,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,555,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Watch out for final methods.,556,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.,557,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Also you won't be able to verify those method as well.,558,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,559,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ol>,560,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,561,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,562,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,563,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,564,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""14"">14. Changing <a class=""meaningful_link"" href=""#defaultreturn"">default return values of unstubbed invocations</a> (Since 1.7)</h3>",565,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,566,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* You can create a mock with specified strategy for its return values.,567,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It's quite advanced feature and typically you don't need it to write decent tests.,568,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, it can be helpful for working with <b>legacy systems</b>.",569,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,570,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.,571,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,572,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",573,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);",574,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mockTwo = mock(Foo.class, new YourOwnAnswer());",575,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,576,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,577,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,578,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read more about this interesting implementation of <i>Answer</i>: {@link Mockito#RETURNS_SMART_NULLS},579,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,580,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,581,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,582,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,583,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""15"">15. <a class=""meaningful_link"" href=""#captors"">Capturing arguments</a> for further assertions (Since 1.8.0)</h3>",584,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,585,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito verifies argument values in natural java style: by using an <code>equals()</code> method.,586,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is also the recommended way of matching arguments because it makes tests clean & simple.,587,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In some situations though, it is helpful to assert on certain arguments after the actual verification.",588,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For example:,589,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",590,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   ArgumentCaptor&lt;Person&gt; argument = ArgumentCaptor.forClass(Person.class);,591,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   verify(mock).doSomething(argument.capture());,592,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   assertEquals(""John"", argument.getValue().getName());",593,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Warning:</b> it is recommended to use ArgumentCaptor with verification <b>but not</b> with stubbing.,596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Using ArgumentCaptor with stubbing may decrease test readability because captor is created outside of assert (aka verify or 'then') block.,597,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Also it may reduce defect localization because if stubbed method was not called then no argument is captured.,598,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,599,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* In a way ArgumentCaptor is related to custom argument matchers (see javadoc for {@link ArgumentMatcher} class).,600,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Both techniques can be used for making sure certain arguments where passed to mocks.,601,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, ArgumentCaptor may be a better fit if:",602,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,603,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>custom argument matcher is not likely to be reused</li>,604,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>you just need it to assert on argument values to complete verification</li>,605,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,606,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Custom argument matchers via {@link ArgumentMatcher} are usually better for stubbing.,607,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,608,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,609,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,610,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,611,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""16"">16. <a class=""meaningful_link"" href=""#partial_mocks"">Real partial mocks</a> (Since 1.8.0)</h3>",612,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,613,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  Finally, after many internal debates & discussions on the mailing list, partial mock support was added to Mockito.",614,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  Previously we considered partial mocks as code smells. However, we found a legitimate use case for partial mocks - more reading:",615,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  <a href=""http://monkeyisland.pl/2009/01/13/subclass-and-override-vs-partial-mocking-vs-refactoring"">here</a>",616,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  <p>,617,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  <b>Before release 1.8</b> <code>spy()</code> was not producing real partial mocks and it was confusing for some users.,618,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  Read more about spying: <a href=""#13"">here</a> or in javadoc for {@link Mockito#spy(Object)} method.",619,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  <p>,620,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  <pre class=""code""><code class=""java"">",621,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    //you can create partial mock with spy() method:,622,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    List list = spy(new LinkedList());,623,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,624,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    //you can enable partial mock capabilities selectively on mocks:,625,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    Foo mock = mock(Foo.class);,626,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    //Be sure the real implementation is 'safe'.,627,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    //If real implementation throws exceptions or depends on specific state of the object then you're in trouble.,628,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    when(mock.someMethod()).thenCallRealMethod();,629,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  </code></pre>,630,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,631,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* As usual you are going to read <b>the partial mock warning</b>:,632,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",633,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",634,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,635,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In most cases, this is not the way you want to design your application.",636,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,637,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there are rare cases when partial mocks come handy:",638,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",639,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",640,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,641,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,642,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,643,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,644,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""17"">17. <a class=""meaningful_link"" href=""#resetting_mocks"">Resetting mocks</a> (Since 1.8.0)</h3>",645,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,646,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Smart Mockito users hardly use this feature because they know it could be a sign of poor tests.,647,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Normally, you don't need to reset your mocks, just create new mocks for each test method.",648,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,649,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Instead of <code>reset()</code> please consider writing simple, small and focused test methods over lengthy, over-specified tests.",650,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>First potential code smell is <code>reset()</code> in the middle of the test method.</b> This probably means you're testing too much.,651,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Follow the whisper of your test methods: ""Please keep us small & focused on single behavior"".",652,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* There are several threads about it on mockito mailing list.,653,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,654,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The only reason we added <code>reset()</code> method is to,655,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* make it possible to work with container-injected mocks.,656,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* See issue 55 (<a href=""http://code.google.com/p/mockito/issues/detail?id=55"">here</a>)",657,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* or FAQ (<a href=""http://code.google.com/p/mockito/wiki/FAQ"">here</a>).",658,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,659,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Don't harm yourself.</b> <code>reset()</code> in the middle of the test method is a code smell (you're probably testing too much).,660,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",661,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List mock = mock(List.class);,662,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(mock.size()).thenReturn(10);,663,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mock.add(1);,664,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,665,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   reset(mock);,666,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //at this point the mock forgot any interactions & stubbing,667,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,668,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,669,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,670,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,671,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,672,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""18"">18. <a class=""meaningful_link"" href=""#framework_validation"">Troubleshooting & validating framework usage</a> (Since 1.8.0)</h3>",673,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,674,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* First of all, in case of any trouble, I encourage you to read the Mockito FAQ:",675,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a href=""http://code.google.com/p/mockito/wiki/FAQ"">http://code.google.com/p/mockito/wiki/FAQ</a>",676,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,677,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* In case of questions you may also post to mockito mailing list:,678,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a href=""http://groups.google.com/group/mockito"">http://groups.google.com/group/mockito</a>",679,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,680,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Next, you should know that Mockito validates if you use it correctly <b>all the time</b>.",681,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there's a gotcha so please read the javadoc for {@link Mockito#validateMockitoUsage()}",682,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,683,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,684,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,685,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,686,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""19"">19. <a class=""meaningful_link"" href=""#bdd_mockito"">Aliases for behavior driven development</a> (Since 1.8.0)</h3>",687,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,688,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Behavior Driven Development style of writing tests uses <b>//given //when //then</b> comments as fundamental parts of your test methods.,689,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is exactly how we write our tests and we warmly encourage you to do so!,690,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,691,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Start learning about BDD here: <a href=""http://en.wikipedia.org/wiki/Behavior_Driven_Development"">http://en.wikipedia.org/wiki/Behavior_Driven_Development</a>",692,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,693,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The problem is that current stubbing api with canonical role of <b>when</b> word does not integrate nicely with <b>//given //when //then</b> comments.,694,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It's because stubbing belongs to <b>given</b> component of the test and not to the <b>when</b> component of the test.,695,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Hence {@link BDDMockito} class introduces an alias so that you stub method calls with {@link BDDMockito#given(Object)} method.,696,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Now it really nicely integrates with the <b>given</b> component of a BDD style test!,697,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,698,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Here is how the test might look like:,699,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",700,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* import static org.mockito.BDDMockito.*;,701,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,702,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Seller seller = mock(Seller.class);,703,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Shop shop = new Shop(seller);,704,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,705,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* public void shouldBuyBread() throws Exception {,706,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //given,707,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   given(seller.askForBread()).willReturn(new Bread());,708,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,709,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //when,710,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Goods goods = shop.buyBread();,711,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,712,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //then,713,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   assertThat(goods, containBread());",714,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* },715,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,716,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,717,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,718,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,719,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,720,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""20"">20. <a class=""meaningful_link"" href=""#serializable_mocks"">Serializable mocks</a> (Since 1.8.1)</h3>",721,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,722,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mocks can be made serializable. With this feature you can use a mock in a place that requires dependencies to be serializable.,723,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,724,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* WARNING: This should be rarely used in unit testing.,725,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,726,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The behaviour was implemented for a specific use case of a BDD spec that had an unreliable external dependency.  This,727,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* was in a web environment and the objects from the external dependency were being serialized to pass between layers.,728,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,729,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* To create serializable mock use {@link MockSettings#serializable()}:,730,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",731,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   List serializableMock = mock(List.class, withSettings().serializable());",732,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,733,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,734,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The mock can be serialized assuming all the normal <a href='http://java.sun.com/j2se/1.5.0/docs/api/java/io/Serializable.html'>,735,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* serialization requirements</a> are met by the class.,736,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,737,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Making a real object spy serializable is a bit more effort as the spy(...) method does not have an overloaded version,738,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* which accepts MockSettings. No worries, you will hardly ever use it.",739,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,740,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",741,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();,742,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* List&lt;Object&gt; spy = mock(ArrayList.class, withSettings()",743,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*                 .spiedInstance(list),744,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*                 .defaultAnswer(CALLS_REAL_METHODS),745,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*                 .serializable());,746,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,747,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,748,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,749,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,750,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,751,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""21"">21. New annotations: <a class=""meaningful_link"" href=""#captor_annotation""><code>&#064;Captor</code></a>,",752,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a class=""meaningful_link"" href=""#spy_annotation""><code>&#064;Spy</code></a>,",753,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a class=""meaningful_link"" href=""#injectmocks_annotation""><code>&#064;InjectMocks</code></a> (Since 1.8.3)</h3>",754,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,755,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,756,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Release 1.8.3 brings new annotations that may be helpful on occasion:,757,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,758,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,759,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>&#064;{@link Captor} simplifies creation of {@link ArgumentCaptor},760,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* - useful when the argument to capture is a nasty generic class and you want to avoid compiler warnings,761,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>&#064;{@link Spy} - you can use it instead {@link Mockito#spy(Object)}.,762,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>&#064;{@link InjectMocks} - injects mock or spy fields into tested object automatically.,763,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,764,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,765,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,766,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Note that &#064;{@link InjectMocks} can also be used in combination with the &#064;{@link Spy} annotation, it means",767,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* that Mockito will inject mocks into the partial mock under test. This complexity is another good reason why you,768,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* should only use partial mocks as a last resort. See point 16 about partial mocks.,769,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,770,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,771,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* All new annotations are <b>*only*</b> processed on {@link MockitoAnnotations#initMocks(Object)}.,772,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Just like for &#064;{@link Mock} annotation you can use the built-in runner: {@link MockitoJUnitRunner} or rule:,773,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link MockitoRule}.,774,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,775,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,776,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,777,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,778,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,779,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""22"">22. <a class=""meaningful_link"" href=""#verification_timeout"">Verification with timeout</a> (Since 1.8.5)</h3>",780,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,781,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows verifying with timeout. It causes a verify to wait for a specified period of time for a desired,782,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* interaction rather than fails immediately if had not already happened. May be useful for testing in concurrent,783,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* conditions.,784,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,785,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system.,786,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,787,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Not yet implemented to work with InOrder verification.,788,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,789,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Examples:,790,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,791,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",792,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes when someMethod() is called within given time span,793,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100)).someMethod();",794,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is an alias to:,795,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).times(1)).someMethod();",796,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,797,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes when someMethod() is called <b>*exactly*</b> 2 times within given time span,798,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).times(2)).someMethod();",799,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,800,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes when someMethod() is called <b>*at least*</b> 2 times within given time span,801,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).atLeast(2)).someMethod();",802,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,803,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //verifies someMethod() within given time span using given verification mode,804,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //useful only if you have your own custom verification modes.,805,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, new Timeout(100, yourOwnVerificationMode)).someMethod();",806,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,807,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,808,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,809,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,810,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,811,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""23"">23. <a class=""meaningful_link"" href=""#automatic_instantiation"">Automatic instantiation of <code>&#064;Spies</code>,",812,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <code>&#064;InjectMocks</code></a> and <a class=""meaningful_link"" href=""#constructor_injection"">constructor injection goodness</a> (Since 1.9.0)</h3>",813,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,814,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,815,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito will now try to instantiate &#064;{@link Spy} and will instantiate &#064;{@link InjectMocks} fields,816,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* using <b>constructor</b> injection, <b>setter</b> injection, or <b>field</b> injection.",817,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,818,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* To take advantage of this feature you need to use {@link MockitoAnnotations#initMocks(Object)}, {@link MockitoJUnitRunner}",819,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* or {@link MockitoRule}.,820,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,821,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read more about available tricks and the rules of injection in the javadoc for {@link InjectMocks},822,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",823,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //instead:,824,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* &#064;Spy BeerDrinker drinker = new BeerDrinker();,825,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //you can write:,826,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* &#064;Spy BeerDrinker drinker;,827,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,828,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //same applies to &#064;InjectMocks annotation:,829,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* &#064;InjectMocks LocalPub;,830,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,831,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,832,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,833,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,834,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,835,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""24"">24. <a class=""meaningful_link"" href=""#one_liner_stub"">One-liner stubs</a> (Since 1.9.0)</h3>",836,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,837,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito will now allow you to create mocks when stubbing.,838,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Basically, it allows to create a stub in one line of code.",839,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This can be helpful to keep test code clean.,840,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* For example, some boring stub can be created & stubbed at field initialization in a test:",841,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",842,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* public class CarTest {,843,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Car boringStubbedCar = when(mock(Car.class).shiftGear()).thenThrow(EngineNotStarted.class).getMock();,844,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,845,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   &#064;Test public void should... {},846,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,847,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,848,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,849,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,850,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,851,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""25"">25. <a class=""meaningful_link"" href=""#ignore_stubs_verification"">Verification ignoring stubs</a> (Since 1.9.0)</h3>",852,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,853,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito will now allow to ignore stubbing for the sake of verification.,854,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Sometimes useful when coupled with <code>verifyNoMoreInteractions()</code> or verification <code>inOrder()</code>.,855,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Helps avoiding redundant verification of stubbed calls - typically we're not interested in verifying stubs.,856,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,857,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <b>Warning</b>, <code>ignoreStubs()</code> might lead to overuse of verifyNoMoreInteractions(ignoreStubs(...));",858,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Bear in mind that Mockito does not recommend bombarding every test with <code>verifyNoMoreInteractions()</code>,859,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* for the reasons outlined in javadoc for {@link Mockito#verifyNoMoreInteractions(Object...)},860,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>Some examples:,861,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",862,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mock).foo();,863,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mockTwo).bar();,864,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,865,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //ignores all stubbed methods:,866,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* verifyNoMoreInvocations(ignoreStubs(mock, mockTwo));",867,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,868,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //creates InOrder that will ignore stubbed,869,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* InOrder inOrder = inOrder(ignoreStubs(mock, mockTwo));",870,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* inOrder.verify(mock).foo();,871,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* inOrder.verify(mockTwo).bar();,872,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* inOrder.verifyNoMoreInteractions();,873,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,874,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,875,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Advanced examples and more details can be found in javadoc for {@link Mockito#ignoreStubs(Object...)},876,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,877,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,878,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,879,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,880,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""26"">26. <a class=""meaningful_link"" href=""#mocking_details"">Mocking details</a> (Since 1.9.5)</h3>",881,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,882,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* To identify whether a particular object is a mock or a spy:,883,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",884,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     Mockito.mockingDetails(someObject).isMock();,885,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     Mockito.mockingDetails(someObject).isSpy();,886,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,887,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Both the {@link MockingDetails#isMock} and {@link MockingDetails#isSpy()} methods return <code>boolean</code>.,888,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* As a spy is just a different kind of mock, <code>isMock()</code> returns true if the object is a spy.",889,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In future Mockito versions MockingDetails may grow and provide other useful information about the mock,",890,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* e.g. invocations, stubbing info, etc.",891,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,892,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,893,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,894,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,895,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""27"">27. <a class=""meaningful_link"" href=""#delegating_call_to_real_instance"">Delegate calls to real instance</a> (Since 1.9.5)</h3>",896,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,897,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>Useful for spies or partial mocks of objects <strong>that are difficult to mock or spy</strong> using the usual spy API.,898,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Since Mockito 1.10.11, the delegate may or may not be of the same type as the mock.",899,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* If the type is different, a matching method needs to be found on delegate type otherwise an exception is thrown.",900,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,901,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Possible use cases for this feature:,902,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,903,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>Final classes but with an interface</li>,904,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>Already custom proxied object</li>,905,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     <li>Special objects with a finalize method, i.e. to avoid executing it 2 times</li>",906,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,907,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,908,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>The difference with the regular spy:,909,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,910,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   <li>,911,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     The regular spy ({@link #spy(Object)}) contains <strong>all</strong> state from the spied instance,912,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     and the methods are invoked on the spy. The spied instance is only used at mock creation to copy the state from.,913,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     If you call a method on a regular spy and it internally calls other methods on this spy, those calls are remembered",914,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     for verifications, and they can be effectively stubbed.",915,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   </li>,916,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   <li>,917,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     The mock that delegates simply delegates all methods to the delegate.,918,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     The delegate is used all the time as methods are delegated onto it.,919,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     If you call a method on a mock that delegates and it internally calls other methods on this mock,",920,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     those calls are <strong>not</strong> remembered for verifications, stubbing does not have effect on them, too.",921,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     Mock that delegates is less powerful than the regular spy but it is useful when the regular spy cannot be created.,922,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   </li>,923,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,924,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,925,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,926,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See more information in docs for {@link AdditionalAnswers#delegatesTo(Object)}.,927,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,928,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,929,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,930,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,931,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""28"">28. <a class=""meaningful_link"" href=""#mock_maker_plugin""><code>MockMaker</code> API</a> (Since 1.9.5)</h3>",932,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>Driven by requirements and patches from Google Android guys Mockito now offers an extension point,933,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   that allows replacing the proxy generation engine. By default, Mockito uses cglib to create dynamic proxies.",934,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <p>The extension point is for advanced users that want to extend Mockito. For example, it is now possible",935,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   to use Mockito for Android testing with a help of dexmaker.,936,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <p>For more details, motivations and examples please refer to",937,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* the docs for {@link org.mockito.plugins.MockMaker}.,938,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,939,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,940,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,941,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,942,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""29"">29. <a class=""meaningful_link"" href=""#BDD_behavior_verification"">(new) BDD style verification</a> (Since 1.10.0)</h3>",943,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,944,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Enables Behavior Driven Development (BDD) style verification by starting verification with the BDD <b>then</b> keyword.,945,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,946,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",947,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* given(dog.bark()).willReturn(2);,948,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,949,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // when,950,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* ...,951,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,952,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* then(person).should(times(2)).ride(bike);,953,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,954,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,955,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For more information and an example see {@link BDDMockito#then(Object)}},956,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,957,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,958,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,959,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,960,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""30"">30. <a class=""meaningful_link"" href=""#spying_abstract_classes"">(new) Spying or mocking abstract classes (Since 1.10.12)</a></h3>",961,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,962,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It is now possible to conveniently spy on abstract classes. Note that overusing spies hints at code design smells (see {@link #spy(Object)}).,963,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,964,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Previously, spying was only possible on instances of objects.",965,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* New API makes it possible to use constructor when creating an instance of the mock.,966,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is particularly useful for mocking abstract classes because the user is no longer required to provide an instance of the abstract class.,967,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* At the moment, only parameter-less constructor is supported, let us know if it is not enough.",968,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,969,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",970,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //convenience API, new overloaded spy() method:",971,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* SomeAbstract spy = spy(SomeAbstract.class);,972,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,973,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Robust API, via settings builder:",974,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* OtherAbstract spy = mock(OtherAbstract.class, withSettings()",975,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    .useConstructor().defaultAnswer(CALLS_REAL_METHODS));,976,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,977,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //Mocking a non-static inner abstract class:,978,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* InnerAbstract spy = mock(InnerAbstract.class, withSettings()",979,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*    .useConstructor().outerInstance(outerInstance).defaultAnswer(CALLS_REAL_METHODS));,980,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,981,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,982,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For more information please see {@link MockSettings#useConstructor()}.,983,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,984,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,985,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,986,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,987,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""31"">31. <a class=""meaningful_link"" href=""#serilization_across_classloader"">(new) Mockito mocks can be <em>serialized</em> / <em>deserialized</em> across classloaders (Since 1.10.0)</a></h3>",988,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,989,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito introduces serialization across classloader.,990,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,991,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Like with any other form of serialization, all types in the mock hierarchy have to serializable, inclusing answers.",992,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* As this serialization mode require considerably more work, this is an opt-in setting.",993,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,994,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",995,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // use regular serialization,996,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mock(Book.class, withSettings().serializable());",997,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,998,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // use serialization across classloaders,999,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* mock(Book.class, withSettings().serializable(ACROSS_CLASSLOADERS));",1000,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1001,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1002,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For more details see {@link MockSettings#serializable(SerializableMode)}.,1003,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1004,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1005,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1006,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1007,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""32"">32. <a class=""meaningful_link"" href=""#better_generic_support_with_deep_stubs"">(new) Better generic support with deep stubs (Since 1.10.0)</a></h3>",1008,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1009,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Deep stubbing has been improved to find generic information if available in the class.,1010,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* That means that classes like this can be used without having to mock the behavior.,1011,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1012,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1013,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* class Lines extends List&lt;Line&gt; {,1014,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     // ...,1015,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* },1016,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1017,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* lines = mock(Lines.class, RETURNS_DEEP_STUBS);",1018,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1019,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // Now Mockito understand this is not an Object but a Line,1020,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Line line = lines.iterator().next();,1021,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1022,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1023,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please note that in most scenarios a mock returning a mock is wrong.,1024,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1025,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1026,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1027,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1028,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""33"">33. <a class=""meaningful_link"" href=""#mockito_junit_rule"">(new) Mockito JUnit rule (Since 1.10.17)</a></h3>",1029,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1030,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito now offers a JUnit rule. Until now in JUnit there was two wasy to initialize fields annotated by Mockito annotations,1031,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* such as <code>&#064;{@link Mock}</code>, <code>&#064;{@link Spy}</code>, <code>&#064;{@link InjectMocks}</code>, etc.",1032,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1033,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,1034,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>Annotating the JUnit test class with a <code>&#064;{@link org.junit.runner.RunWith}(&#064;{@link MockitoJUnitRunner}.class)</code></li>,1035,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     <li>Invoking <code>{@link MockitoAnnotations#initMocks(Object)}</code> in the <code>&#064;{@link org.junit.Before}</code> method</li>,1036,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,1037,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1038,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Now you can choose to use a rule :,1039,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1040,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1041,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* &#064;RunWith(YetAnotherRunner.class),1042,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* public class TheTest {,1043,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     &#064;Rule public MockitoRule mockito = MockitoJUnit.rule();,1044,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*     // ...,1045,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* },1046,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1047,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1048,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For more information see {@link MockitoJUnit#rule()}.,1049,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1050,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1051,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1052,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1053,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <h3 id=""34"">34. <a class=""meaningful_link"" href=""#plugin_switch"">(new) Switch <em>on</em> or <em>off</em> plugins (Since 1.10.15)</a></h3>",1054,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1055,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* An incubating feature made it's way in mockito that will allow to toggle a mockito-plugin.,1056,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1057,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* More information here {@link org.mockito.plugins.PluginSwitch}.,1058,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1059,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1060,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1061,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1062,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1063,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1064,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1065,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"@SuppressWarnings(""unchecked"")",1066,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public class Mockito extends Matchers {,1067,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1068,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,static final MockitoCore MOCKITO_CORE = new MockitoCore();,1069,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1070,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1071,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The default <code>Answer</code> of every mock <b>if</b> the mock was not stubbed.,1072,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Typically it just returns some empty value.,1073,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1074,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Answer} can be used to define the return values of unstubbed invocations.,1075,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1076,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation first tries the global configuration.,1077,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* If there is no global configuration then it uses {@link ReturnsEmptyValues} (returns zeros, empty collections, nulls, etc.)",1078,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1079,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static final Answer<Object> RETURNS_DEFAULTS = Answers.RETURNS_DEFAULTS;,1080,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1081,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1082,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Optional <code>Answer</code> to be used with {@link Mockito#mock(Class, Answer)}.",1083,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1084,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Answer} can be used to define the return values of unstubbed invocations.,1085,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1086,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation can be helpful when working with legacy code.,1087,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException.,1088,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation of Answer <b>returns SmartNull instead of null</b>.,1089,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>SmartNull</code> gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace.,1090,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1091,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>ReturnsSmartNulls</code> first tries to return ordinary return values (see {@link ReturnsMoreEmptyValues}),1092,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* then it tries to return SmartNull. If the return type is final then plain null is returned.,1093,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1094,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>ReturnsSmartNulls</code> will be probably the default return values strategy in Mockito 2.0.,1095,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1096,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1097,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1098,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = (Foo.class, RETURNS_SMART_NULLS);",1099,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //calling unstubbed method here:,1101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Stuff stuff = mock.getStuff();,1102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //using object returned by unstubbed call:,1104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   stuff.doSomething();,1105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Above doesn't yield NullPointerException this time!,1107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //Instead, SmartNullPointerException is thrown.",1108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Exception's cause links to unstubbed <i>mock.getStuff()</i> - just click on the stack trace.,1109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static final Answer<Object> RETURNS_SMART_NULLS = Answers.RETURNS_SMART_NULLS;,1112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Optional <code>Answer</code> to be used with {@link Mockito#mock(Class, Answer)}",1115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Answer} can be used to define the return values of unstubbed invocations.,1117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation can be helpful when working with legacy code.,1119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* ReturnsMocks first tries to return ordinary return values (see {@link ReturnsMoreEmptyValues}),1121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* then it tries to return mocks. If the return type cannot be mocked (e.g. is final) then plain null is returned.,1122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static final Answer<Object> RETURNS_MOCKS = Answers.RETURNS_MOCKS;,1125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Optional <code>Answer</code> to be used with {@link Mockito#mock(Class, Answer)}.",1128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example that shows how deep stub works:,1130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, RETURNS_DEEP_STUBS);",1132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   // note that we're stubbing a chain of methods here: getBar().getName(),1134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(mock.getBar().getName()).thenReturn(""deep"");",1135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   // note that we're chaining method calls: getBar().getName(),1137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   assertEquals(""deep"", mock.getBar().getName());",1138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <strong>WARNING: </strong>,1143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This feature should rarely be required for regular clean code! Leave it for legacy code.,1144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Mocking a mock to return a mock, to return a mock, (...), to return something meaningful",1145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* hints at violation of Law of Demeter or mocking a value object (a well known anti-pattern).,1146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Good quote I've seen one day on the web: <strong>every time a mock returns a mock a fairy dies</strong>.,1150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please note that this answer will return existing mocks that matches the stub. This,1154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* behavior is ok with deep stubs and allows verification to work on the last mock of the chain.,1155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(mock.getBar(anyString()).getThingy().getName()).thenReturn(""deep"");",1157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   mock.getBar(""candy bar"").getThingy().getName();",1159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   assertSame(mock.getBar(anyString()).getThingy().getName(), mock.getBar(anyString()).getThingy().getName());",1161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock.getBar(""candy bar"").getThingy()).getName();",1162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   verify(mock.getBar(anyString()).getThingy()).getName();,1163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verification only works with the last mock in the chain. You can use verification modes.,1168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(person.getAddress(anyString()).getStreet().getName()).thenReturn(""deep"");",1170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(person.getAddress(anyString()).getStreet(Locale.ITALIAN).getName()).thenReturn(""deep"");",1171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(person.getAddress(anyString()).getStreet(Locale.CHINESE).getName()).thenReturn(""deep"");",1172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   person.getAddress(""the docks"").getStreet().getName();",1174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   person.getAddress(""the docks"").getStreet().getLongName();",1175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   person.getAddress(""the docks"").getStreet(Locale.ITALIAN).getName();",1176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   person.getAddress(""the docks"").getStreet(Locale.CHINESE).getName();",1177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   // note that we are actually referring to the very last mock in the stubbing chain.,1179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   InOrder inOrder = inOrder(,1180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*       person.getAddress(""the docks"").getStreet(),",1181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*       person.getAddress(""the docks"").getStreet(Locale.CHINESE),",1182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*       person.getAddress(""the docks"").getStreet(Locale.ITALIAN)",1183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   );,1184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(), times(1)).getName();",1185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(person.getAddress(""the docks"").getStreet()).getLongName();",1186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.ITALIAN), atLeast(1)).getName();",1187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.CHINESE)).getName();",1188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* How deep stub work internally?,1193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //this:,1195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, RETURNS_DEEP_STUBS);",1196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(mock.getBar().getName(), ""deep"");",1197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //is equivalent of,1199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Foo foo = mock(Foo.class);,1200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Bar bar = mock(Bar.class);,1201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(foo.getBar()).thenReturn(bar);,1202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(bar.getName()).thenReturn(""deep"");",1203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This feature will not work when any return type of methods included in the chain cannot be mocked,1208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* (for example: is a primitive or a final class). This is because of java type system.,1209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </p>,1210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static final Answer<Object> RETURNS_DEEP_STUBS = Answers.RETURNS_DEEP_STUBS;,1212,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1213,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Optional <code>Answer</code> to be used with {@link Mockito#mock(Class, Answer)}",1215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link Answer} can be used to define the return values of unstubbed invocations.,1217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This implementation can be helpful when working with legacy code.,1219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* When this implementation is used, unstubbed methods will delegate to the real implementation.",1220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is a way to create a partial mock object that calls real methods by default.,1221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* As usual you are going to read <b>the partial mock warning</b>:,1223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",1224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",1225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,1226,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In most cases, this is not the way you want to design your application.",1227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there are rare cases when partial mocks come handy:",1229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",1230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",1231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1233,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Foo mock = mock(Foo.class, CALLS_REAL_METHODS);",1235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // this calls the real implementation of Foo.getSomething(),1237,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* value = mock.getSomething();,1238,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* when(mock.getSomething()).thenReturn(fakeValue);,1240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* // now fakeValue is returned,1242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* value = mock.getSomething();,1243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static final Answer<Object> CALLS_REAL_METHODS = Answers.CALLS_REAL_METHODS;,1246,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates mock object of given class or interface.,1248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToMock class or interface to mock,1252,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object,1253,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1254,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> T mock(Class<T> classToMock) {,1255,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return mock(classToMock, withSettings().defaultAnswer(RETURNS_DEFAULTS));",1256,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1258,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1259,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Specifies mock name. Naming mocks can be helpful for debugging - the name is used in all verification errors.,1260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Beware that naming mocks is not a solution for complex code which uses too many mocks or collaborators.,1262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>If you have too many mocks then refactor the code</b> so that it's easy to test/debug without necessity of naming mocks.,1263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>If you use <code>&#064;Mock</code> annotation then you've got naming mocks for free!</b> <code>&#064;Mock</code> uses field name as mock name. {@link Mock Read more.},1265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1268,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1269,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToMock class or interface to mock,1270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param name of the mock,1271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object,1272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"public static <T> T mock(Class<T> classToMock, String name) {",1274,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return mock(classToMock, withSettings()",1275,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.name(name),1276,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.defaultAnswer(RETURNS_DEFAULTS));,1277,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1278,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1279,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1280,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Returns a MockingDetails instance that enables inspecting a particular object for Mockito related information.,1281,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Can be used to find out if given object is a Mockito mock,1282,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* or to find out if a given mock is a spy or mock.,1283,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In future Mockito versions MockingDetails may grow and provide other useful information about the mock,",1285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* e.g. invocations, stubbing info, etc.",1286,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1287,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param toInspect - object to inspect. null input is allowed.,1288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return A {@link org.mockito.MockingDetails} instance.,1289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @since 1.9.5,1290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static MockingDetails mockingDetails(Object toInspect) {,1292,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.mockingDetails(toInspect);,1293,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1294,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1295,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <b>Deprecated : Please use mock(Foo.class, defaultAnswer);</b>",1297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1298,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* See {@link Mockito#mock(Class, Answer)}",1299,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Why it is deprecated? ReturnValues is being replaced by Answer,1301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* for better consistency & interoperability of the framework.,1302,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Answer interface has been in Mockito for a while and it has the same responsibility as ReturnValues.,1303,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* There's no point in mainting exactly the same interfaces.,1304,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1305,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates mock with a specified strategy for its return values.,1306,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It's quite advanced feature and typically you don't need it to write decent tests.,1307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* However it can be helpful when working with legacy systems.,1308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Obviously return values are used only when you don't stub the method call.,1310,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1311,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1312,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);",1313,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());",1314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1315,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1316,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>See examples in javadoc for {@link Mockito} class</p>,1317,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1318,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToMock class or interface to mock,1319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param returnValues default return values for unstubbed methods,1320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object,1322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1323,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* @deprecated <b>Please use mock(Foo.class, defaultAnswer);</b>",1324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,@Deprecated,1326,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"public static <T> T mock(Class<T> classToMock, ReturnValues returnValues) {",1327,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return mock(classToMock, withSettings().defaultAnswer(new AnswerReturnValuesAdapter(returnValues)));",1328,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1330,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1331,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates mock with a specified strategy for its answers to interactions.,1332,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It's quite advanced feature and typically you don't need it to write decent tests.,1333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* However it can be helpful when working with legacy systems.,1334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.,1336,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1337,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1338,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, RETURNS_SMART_NULLS);",1339,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mockTwo = mock(Foo.class, new YourOwnAnswer());",1340,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1341,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1342,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>See examples in javadoc for {@link Mockito} class</p>,1343,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1344,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToMock class or interface to mock,1345,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param defaultAnswer default answer for unstubbed methods,1346,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1347,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object,1348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"public static <T> T mock(Class<T> classToMock, Answer defaultAnswer) {",1350,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return mock(classToMock, withSettings().defaultAnswer(defaultAnswer));",1351,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1352,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1353,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates a mock with some non-standard settings.,1355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The number of configuration points for a mock grows,1357,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* so we need a fluent way to introduce new configuration without adding more and more overloaded Mockito.mock() methods.,1358,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Hence {@link MockSettings}.,1359,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1360,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Listener mock = mock(Listener.class, withSettings()",1361,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*     .name(""firstListner"").defaultBehavior(RETURNS_SMART_NULLS));",1362,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   );,1363,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1364,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Use it carefully and occasionally</b>. What might be reason your test needs non-standard mocks?,1365,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Is the code under test so complicated that it requires non-standard mocks?,1366,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Wouldn't you prefer to refactor the code under test so it is testable in a simple way?,1367,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1368,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link Mockito#withSettings()},1369,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1370,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1371,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1372,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToMock class or interface to mock,1373,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mockSettings additional mock settings,1374,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object,1375,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1376,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"public static <T> T mock(Class<T> classToMock, MockSettings mockSettings) {",1377,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return MOCKITO_CORE.mock(classToMock, mockSettings);",1378,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1379,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1380,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1381,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates a spy of the real object. The spy calls <b>real</b> methods unless they are stubbed.,1382,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1383,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code.",1384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* As usual you are going to read <b>the partial mock warning</b>:,1386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",1387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",1388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,1389,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In most cases, this is not the way you want to design your application.",1390,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1391,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there are rare cases when partial mocks come handy:",1392,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",1393,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",1394,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1395,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1396,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1397,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1398,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,1399,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,1400,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //optionally, you can stub out some methods:",1402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(spy.size()).thenReturn(100);,1403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //using the spy calls <b>real</b> methods,1405,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   spy.add(""one"");",1406,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   spy.add(""two"");",1407,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1408,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //prints ""one"" - the first element of a list",1409,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   System.out.println(spy.get(0));,1410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //size() method was stubbed - 100 is printed,1412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   System.out.println(spy.size());,1413,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1414,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //optionally, you can verify",1415,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(spy).add(""one"");",1416,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(spy).add(""two"");",1417,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1418,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1419,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <h4>Important gotcha on spying real objects!</h4>,1420,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ol>,1421,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Sometimes it's impossible or impractical to use {@link Mockito#when(Object)} for stubbing spies.,1422,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Therefore for spies it is recommended to always use <code>doReturn</code>|<code>Answer</code>|<code>Throw()</code>|<code>CallRealMethod</code>,1423,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* family of methods for stubbing. Example:,1424,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1425,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,1427,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,1428,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1429,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty),1430,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(spy.get(0)).thenReturn(""foo"");",1431,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1432,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //You have to use doReturn() for stubbing,1433,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   doReturn(""foo"").when(spy).get(0);",1434,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1435,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1436,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1437,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li>Mockito <b>*does not*</b> delegate calls to the passed real instance, instead it actually creates a copy of it.",1438,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* So if you keep the real instance and interact with it, don't expect the spied to be aware of those interaction",1439,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* and their effect on real instance state.,1440,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* The corollary is that when an <b>*unstubbed*</b> method is called <b>*on the spy*</b> but <b>*not on the real instance*</b>,",1441,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* you won't see any effects on the real instance.</li>,1442,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1443,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Watch out for final methods.,1444,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.,1445,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Also you won't be able to verify those method as well.,1446,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1447,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ol>,1448,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1449,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1450,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1451,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <p>Note that the spy won't have any annotations of the spied type, because CGLIB won't rewrite them.",1452,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It may troublesome for code that rely on the spy to have these annotations.</p>,1453,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1454,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1455,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param object,1456,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*            to spy on,1457,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return a spy of the real object,1458,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1459,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> T spy(T object) {,1460,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()",1461,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.spiedInstance(object),1462,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.defaultAnswer(CALLS_REAL_METHODS));,1463,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1464,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1465,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please refer to the documentation of {@link #spy(Object)}.,1467,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Overusing spies hints at code design smells.,1468,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1469,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* This method, in contrast to the original {@link #spy(Object)}, creates a spy based on class instead of an object.",1470,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Sometimes it is more convenient to create spy based on the class and avoid providing an instance of a spied object.,1471,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This is particularly useful for spying on abstract classes because they cannot be instantiated.,1472,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link MockSettings#useConstructor()}.,1473,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1474,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Examples:,1475,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1476,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   SomeAbstract spy = spy(SomeAbstract.class);,1477,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1478,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //Robust API, via settings builder:",1479,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   OtherAbstract spy = mock(OtherAbstract.class, withSettings()",1480,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*      .useConstructor().defaultAnswer(CALLS_REAL_METHODS));,1481,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1482,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Mocking a non-static inner abstract class:,1483,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   InnerAbstract spy = mock(InnerAbstract.class, withSettings()",1484,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*      .useConstructor().outerInstance(outerInstance).defaultAnswer(CALLS_REAL_METHODS));,1485,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1486,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param classToSpy the class to spy,1488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param <T> type of the spy,1489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return a spy of the provided class,1490,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @since 1.10.12,1491,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1492,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,@Incubating,1493,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> T spy(Class<T> classToSpy) {,1494,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return MOCKITO_CORE.mock(classToSpy, withSettings()",1495,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.useConstructor(),1496,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,.defaultAnswer(CALLS_REAL_METHODS));,1497,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1498,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1499,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubs a method call with return value or an exception. E.g:,1501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* stub(mock.someMethod()).toReturn(10);,1504,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1505,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //you can use flexible argument matchers, e.g:",1506,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);,1507,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1508,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //setting exception to be thrown:,1509,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());",1510,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1511,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //you can stub with different behavior for consecutive method calls.,1512,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Last stubbing (e.g: toReturn(""foo"")) determines the behavior for further consecutive calls.",1513,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* stub(mock.someMethod(""some arg""))",1514,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  .toThrow(new RuntimeException()),1515,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .toReturn(""foo"");",1516,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1517,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1518,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Some users find stub() confusing therefore {@link Mockito#when(Object)} is recommended over stub(),1519,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1520,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Instead of:,1521,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   stub(mock.count()).toReturn(10);,1522,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1523,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //You can do:,1524,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(mock.count()).thenReturn(10);,1525,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1526,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)},1527,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1528,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing can be overridden: for example common stubbing can go to fixture,1529,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* setup but the test methods can override it.,1530,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please note that overridding stubbing is a potential code smell that points out too much stubbing.,1531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1532,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Once stubbed, the method will always return stubbed value regardless",1533,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* of how many times it is called.,1534,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1535,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Last stubbing is more important - when you stubbed the same method with,1536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* the same arguments many times.,1537,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1538,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>.",1539,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Let's say you've stubbed foo.bar().,1540,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).,1541,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code doesn't care what get(0) returns then it should not be stubbed.,1542,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>.",1543,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1544,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param methodCall,1545,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*            method call,1546,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return DeprecatedOngoingStubbing object to set stubbed value/exception,1547,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1548,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> DeprecatedOngoingStubbing<T> stub(T methodCall) {,1549,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.stub(methodCall);,1550,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1551,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1552,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1553,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called.,1554,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1555,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Simply put: ""<b>When</b> the x method is called <b>then</b> return y"".",1556,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1557,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>when() is a successor of deprecated {@link Mockito#stub(Object)}</b>,1558,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1559,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Examples:,1560,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1561,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1562,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>when</b>(mock.someMethod()).<b>thenReturn</b>(10);,1563,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1564,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //you can use flexible argument matchers, e.g:",1565,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);,1566,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1567,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //setting exception to be thrown:,1568,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());",1569,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1570,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //you can set different behavior for consecutive method calls.,1571,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls.",1572,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",1573,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  .thenThrow(new RuntimeException()),1574,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .thenReturn(""foo"");",1575,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1576,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Alternative, shorter version for consecutive stubbing:",1577,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",1578,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .thenReturn(""one"", ""two"");",1579,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //is the same as:,1580,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",1581,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .thenReturn(""one"")",1582,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .thenReturn(""two"");",1583,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1584,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //shorter version for consecutive method calls throwing exceptions:,1585,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* when(mock.someMethod(""some arg""))",1586,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  .thenThrow(new RuntimeException(), new NullPointerException();",1587,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1588,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1589,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1590,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)},1591,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1592,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing can be overridden: for example common stubbing can go to fixture,1593,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* setup but the test methods can override it.,1594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Please note that overridding stubbing is a potential code smell that points out too much stubbing.,1595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Once stubbed, the method will always return stubbed value regardless",1597,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* of how many times it is called.,1598,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1599,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Last stubbing is more important - when you stubbed the same method with,1600,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* the same arguments many times.,1601,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1602,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>.",1603,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Let's say you've stubbed <code>foo.bar()</code>.,1604,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code cares what <code>foo.bar()</code> returns then something else breaks(often before even <code>verify()</code> gets executed).,1605,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code doesn't care what <code>get(0)</code> returns then it should not be stubbed.,1606,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>.",1607,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1608,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1609,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1610,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param methodCall method to be stubbed,1611,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return OngoingStubbing object used to stub fluently.,1612,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*         <strong>Do not</strong> create a reference to this returned object.,1613,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1614,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> OngoingStubbing<T> when(T methodCall) {,1615,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.when(methodCall);,1616,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1617,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1618,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1619,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verifies certain behavior <b>happened once</b>.,1620,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1621,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Alias to <code>verify(mock, times(1))</code> E.g:",1622,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1623,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock).someMethod(""some arg"");",1624,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1625,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Above is equivalent to:,1626,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1627,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, times(1)).someMethod(""some arg"");",1628,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1629,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1630,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Arguments passed are compared using <code>equals()</code> method.,1631,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read about {@link ArgumentCaptor} or {@link ArgumentMatcher} to find out other ways of matching / asserting arguments passed.,1632,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1633,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>.",1634,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Let's say you've stubbed <code>foo.bar()</code>.,1635,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code cares what <code>foo.bar()</code> returns then something else breaks(often before even <code>verify()</code> gets executed).,1636,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If your code doesn't care what <code>get(0)</code> returns then it should not be stubbed.,1637,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>.",1638,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1639,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1640,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1641,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1642,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mock to be verified,1643,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object itself,1644,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1645,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> T verify(T mock) {,1646,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return MOCKITO_CORE.verify(mock, times(1));",1647,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1648,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1649,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1650,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verifies certain behavior happened at least once / exact number of times / never. E.g:,1651,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1652,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, times(5)).someMethod(""was called five times"");",1653,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1654,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, atLeast(2)).someMethod(""was called at least two times"");",1655,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1656,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //you can use flexible argument matchers, e.g:",1657,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, atLeastOnce()).someMethod(<b>anyString()</b>);",1658,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1659,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1660,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>times(1) is the default</b> and can be omitted,1661,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1662,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Arguments passed are compared using <code>equals()</code> method.,1663,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Read about {@link ArgumentCaptor} or {@link ArgumentMatcher} to find out other ways of matching / asserting arguments passed.,1664,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1665,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1666,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mock to be verified,1667,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* @param mode times(x), atLeastOnce() or never()",1668,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1669,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock object itself,1670,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1671,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"public static <T> T verify(T mock, VerificationMode mode) {",1672,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return MOCKITO_CORE.verify(mock, mode);",1673,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1674,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1675,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1676,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Smart Mockito users hardly use this feature because they know it could be a sign of poor tests.,1677,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Normally, you don't need to reset your mocks, just create new mocks for each test method.",1678,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1679,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Instead of <code>#reset()</code> please consider writing simple, small and focused test methods over lengthy, over-specified tests.",1680,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>First potential code smell is <code>reset()</code> in the middle of the test method.</b> This probably means you're testing too much.,1681,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Follow the whisper of your test methods: ""Please keep us small & focused on single behavior"".",1682,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* There are several threads about it on mockito mailing list.,1683,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1684,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The only reason we added <code>reset()</code> method is to,1685,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* make it possible to work with container-injected mocks.,1686,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* See issue 55 (<a href=""http://code.google.com/p/mockito/issues/detail?id=55"">here</a>)",1687,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* or FAQ (<a href=""http://code.google.com/p/mockito/wiki/FAQ"">here</a>).",1688,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1689,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Don't harm yourself.</b> <code>reset()</code> in the middle of the test method is a code smell (you're probably testing too much).,1690,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1691,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List mock = mock(List.class);,1692,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(mock.size()).thenReturn(10);,1693,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mock.add(1);,1694,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1695,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   reset(mock);,1696,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //at this point the mock forgot any interactions & stubbing,1697,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1698,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1699,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param <T> The Type of the mocks,1700,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mocks to be reset,1701,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1702,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> void reset(T ... mocks) {,1703,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,MOCKITO_CORE.reset(mocks);,1704,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1705,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1706,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1707,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Checks if any of given mocks has any unverified interaction.,1708,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1709,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* You can use this method after you verified your mocks - to make sure that nothing,1710,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* else was invoked on your mocks.,1711,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1712,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link Mockito#never()} - it is more explicit and communicates the intent well.,1713,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1714,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbed invocations (if called) are also treated as interactions.,1715,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1716,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* A word of <b>warning</b>:,1717,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Some users who did a lot of classic, expect-run-verify mocking tend to use <code>verifyNoMoreInteractions()</code> very often, even in every test method.",1718,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>verifyNoMoreInteractions()</code> is not recommended to use in every test method.,1719,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>verifyNoMoreInteractions()</code> is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.,1720,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Abusing it leads to overspecified, less maintainable tests. You can find further reading",1721,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>.",1722,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1723,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* This method will also detect unverified invocations that occurred before the test method,",1724,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* for example: in <code>setUp()</code>, <code>&#064;Before</code> method or in constructor.",1725,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Consider writing nice code that makes interactions only in test methods.,1726,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1727,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1728,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1729,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1730,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1731,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //interactions,1732,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* mock.doSomething();,1733,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* mock.doSomethingUnexpected();,1734,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1735,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //verification,1736,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mock).doSomething();,1737,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1738,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //following will fail because 'doSomethingUnexpected()' is unexpected,1739,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verifyNoMoreInteractions(mock);,1740,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1741,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1742,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1743,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1744,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1745,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mocks to be verified,1746,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1747,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static void verifyNoMoreInteractions(Object... mocks) {,1748,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,MOCKITO_CORE.verifyNoMoreInteractions(mocks);,1749,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1750,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1751,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1752,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verifies that no interactions happened on given mocks.,1753,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1754,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verifyZeroInteractions(mockOne, mockTwo);",1755,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1756,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This method will also detect invocations,1757,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* that occurred before the test method, for example: in <code>setUp()</code>, <code>&#064;Before</code> method or in constructor.",1758,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Consider writing nice code that makes interactions only in test methods.,1759,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1760,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link Mockito#never()} - it is more explicit and communicates the intent well.,1761,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1762,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1763,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1764,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mocks to be verified,1765,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1766,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static void verifyZeroInteractions(Object... mocks) {,1767,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,MOCKITO_CORE.verifyNoMoreInteractions(mocks);,1768,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1769,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1770,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1771,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1772,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Instead of:,1773,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   stubVoid(mock).toThrow(e).on().someVoidMethod();,1774,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1775,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Please do:,1776,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(e).when(mock).someVoidMethod();,1777,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1778,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1779,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* doThrow() replaces stubVoid() because of improved readability and consistency with the family of doAnswer() methods.,1780,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1781,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Originally, <code>stubVoid()</code> was used for stubbing void methods with exceptions. E.g:",1782,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1783,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1784,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();,1785,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1786,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //you can stub with different behavior for consecutive calls.,1787,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* //Last stubbing (e.g. toReturn()) determines the behavior for further consecutive calls.,1788,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* stubVoid(mock),1789,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   .toThrow(new RuntimeException()),1790,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   .toReturn(),1791,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   .on().someMethod();,1792,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1793,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1794,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1795,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1796,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @deprecated Use {@link Mockito#doThrow(Throwable)} method for stubbing voids,1797,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1798,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mock,1799,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*            to stub,1800,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubbable object that allows stubbing with throwable,1801,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1802,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static <T> VoidMethodStubbable<T> stubVoid(T mock) {,1803,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.stubVoid(mock);,1804,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1805,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1806,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1807,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doThrow()</code> when you want to stub the void method with an exception.,1808,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1809,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...,1810,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1811,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1812,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1813,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1814,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(new RuntimeException()).when(mock).someVoidMethod();,1815,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1816,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1817,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param toBeThrown to be thrown when the stubbed method is called,1818,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1819,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1820,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doThrow(Throwable toBeThrown) {,1821,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(new ThrowsException(toBeThrown));,1822,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1823,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1824,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1825,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doThrow()</code> when you want to stub the void method to throw exception of specified class.,1826,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1827,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* A new exception instance will be created for each method invocation.,1828,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1829,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...,1830,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1831,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1832,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1833,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1834,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(RuntimeException.class).when(mock).someVoidMethod();,1835,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1836,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1837,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param toBeThrown to be thrown when the stubbed method is called,1838,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1839,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @since 1.9.0,1840,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1841,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doThrow(Class<? extends Throwable> toBeThrown) {,1842,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(new ThrowsExceptionClass(toBeThrown));,1843,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1844,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1845,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1846,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1847,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doCallRealMethod()</code> when you want to call the real implementation of a method.,1848,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1849,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* As usual you are going to read <b>the partial mock warning</b>:,1850,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",1851,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",1852,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,1853,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In most cases, this is not the way you want to design your application.",1854,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1855,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there are rare cases when partial mocks come handy:",1856,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",1857,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",1858,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1859,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also javadoc {@link Mockito#spy(Object)} to find out more about partial mocks.,1860,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Mockito.spy() is a recommended way of creating partial mocks.</b>,1861,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* The reason is it guarantees real methods are called against correctly constructed object because you're responsible for constructing the object passed to spy() method.,1862,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1863,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1864,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1865,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   Foo mock = mock(Foo.class);,1866,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doCallRealMethod().when(mock).someVoidMethod();,1867,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1868,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   // this will call the real implementation of Foo.someVoidMethod(),1869,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mock.someVoidMethod();,1870,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1871,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1872,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1873,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1874,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1875,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @since 1.9.5,1876,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1877,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doCallRealMethod() {,1878,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(new CallsRealMethods());,1879,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1880,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1881,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1882,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doAnswer()</code> when you want to stub a void method with generic {@link Answer}.,1883,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1884,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...,1885,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1886,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,1887,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1888,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1889,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  doAnswer(new Answer() {,1890,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*      public Object answer(InvocationOnMock invocation) {,1891,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*          Object[] args = invocation.getArguments();,1892,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*          Mock mock = invocation.getMock();,1893,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*          return null;,1894,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*      }}),1895,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  .when(mock).someMethod();,1896,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1897,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1898,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1899,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1900,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param answer to answer when the stubbed method is called,1901,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1902,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1903,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doAnswer(Answer answer) {,1904,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(answer);,1905,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1906,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1907,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1908,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doNothing()</code> for setting void methods to do nothing. <b>Beware that void methods on mocks do nothing by default!</b>,1909,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, there are rare situations when doNothing() comes handy:",1910,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1911,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ol>,1912,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Stubbing consecutive calls on a void method:,1913,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1914,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doNothing().,1915,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doThrow(new RuntimeException()),1916,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   .when(mock).someVoidMethod();,1917,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1918,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //does nothing the first time:,1919,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mock.someVoidMethod();,1920,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1921,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //throws RuntimeException the next time:,1922,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   mock.someVoidMethod();,1923,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1924,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1925,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>When you spy real objects and you want the void method to do nothing:,1926,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1927,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,1928,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,1929,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1930,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //let's make clear() do nothing,1931,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   doNothing().when(spy).clear();,1932,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1933,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   spy.add(""one"");",1934,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1935,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //clear() does nothing, so the list still contains ""one""",1936,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   spy.clear();,1937,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1938,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1939,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ol>,1940,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1941,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1942,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1943,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1944,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1945,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doNothing() {,1946,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(new DoesNothing());,1947,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1948,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1949,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,1950,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Use <code>doReturn()</code> in those rare occasions when you cannot use {@link Mockito#when(Object)}.,1951,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1952,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Beware that {@link Mockito#when(Object)} is always recommended for stubbing because it is argument type-safe,1953,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* and more readable</b> (especially when stubbing consecutive calls).,1954,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1955,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Here are those rare occasions when doReturn() comes handy:,1956,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1957,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1958,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ol>,1959,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>When spying real objects and calling real methods on a spy brings side effects,1960,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1961,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1962,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List list = new LinkedList();,1963,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   List spy = spy(list);,1964,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1965,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty),1966,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(spy.get(0)).thenReturn(""foo"");",1967,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1968,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //You have to use doReturn() for stubbing:,1969,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   doReturn(""foo"").when(spy).get(0);",1970,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1971,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1972,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1973,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <li>Overriding a previous exception-stubbing:,1974,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",1975,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   when(mock.foo()).thenThrow(new RuntimeException());,1976,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1977,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Impossible: the exception-stubbed foo() method is called so RuntimeException is thrown.,1978,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   when(mock.foo()).thenReturn(""bar"");",1979,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1980,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //You have to use doReturn() for stubbing:,1981,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   doReturn(""bar"").when(mock).foo();",1982,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,1983,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </li>,1984,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ol>,1985,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1986,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Above scenarios shows a tradeoff of Mockito's elegant syntax. Note that the scenarios are very rare, though.",1987,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Spying should be sporadic and overriding exception-stubbing is very rare. Not to mention that in general,1988,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* overridding stubbing is a potential code smell that points out too much stubbing.,1989,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,1990,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,1991,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,1992,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param toBeReturned to be returned when the stubbed method is called,1993,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return stubber - to select a method for stubbing,1994,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,1995,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Stubber doReturn(Object toBeReturned) {,1996,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.doAnswer(new Returns(toBeReturned));,1997,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},1998,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,1999,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2000,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Creates {@link org.mockito.InOrder} object that allows verifying mocks in order.,2001,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2002,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2003,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   InOrder inOrder = inOrder(firstMock, secondMock);",2004,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2005,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(firstMock).add(""was called first"");",2006,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify(secondMock).add(""was called second"");",2007,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2008,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2009,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verification in order is flexible - <b>you don't have to verify all interactions</b> one-by-one,2010,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* but only those that you are interested in testing in order.,2011,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2012,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Also, you can create InOrder object passing only mocks that are relevant for in-order verification.",2013,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2014,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>InOrder</code> verification is 'greedy'. You will hardly every notice it but,2015,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* if you want to find out more search for 'greedy' on the Mockito,2016,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <a href=""http://code.google.com/p/mockito/w/list"">wiki pages</a>.",2017,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2018,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* As of Mockito 1.8.4 you can verifyNoMoreInvocations() in order-sensitive way. Read more: {@link InOrder#verifyNoMoreInteractions()},2019,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2020,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2021,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2022,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mocks to be verified in order,2023,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2024,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return InOrder object to be used to verify in order,2025,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2026,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static InOrder inOrder(Object... mocks) {,2027,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.inOrder(mocks);,2028,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2029,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2030,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2031,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Ignores stubbed methods of given mocks for the sake of verification.,2032,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Sometimes useful when coupled with <code>verifyNoMoreInteractions()</code> or verification <code>inOrder()</code>.,2033,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Helps avoiding redundant verification of stubbed calls - typically we're not interested in verifying stubs.,2034,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2035,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <b>Warning</b>, <code>ignoreStubs()</code> might lead to overuse of <code>verifyNoMoreInteractions(ignoreStubs(...));</code>",2036,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Bear in mind that Mockito does not recommend bombarding every test with <code>verifyNoMoreInteractions()</code>,2037,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* for the reasons outlined in javadoc for {@link Mockito#verifyNoMoreInteractions(Object...)},2038,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Other words: all <b>*stubbed*</b> methods of given mocks are marked <b>*verified*</b> so that they don't get in a way during verifyNoMoreInteractions().,2039,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2040,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This method <b>changes the input mocks</b>! This method returns input mocks just for convenience.,2041,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2042,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Ignored stubs will also be ignored for verification inOrder, including {@link org.mockito.InOrder#verifyNoMoreInteractions()}.",2043,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See the second example.,2044,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2045,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Example:,2046,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2047,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //mocking lists for the sake of the example (if you mock List in real you will burn in hell),2048,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  List mock1 = mock(List.class), mock2 = mock(List.class);",2049,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2050,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //stubbing mocks:,2051,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  when(mock1.get(0)).thenReturn(10);,2052,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  when(mock2.get(0)).thenReturn(20);,2053,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2054,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //using mocks by calling stubbed get(0) methods:,2055,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  System.out.println(mock1.get(0)); //prints 10,2056,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  System.out.println(mock2.get(0)); //prints 20,2057,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2058,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //using mocks by calling clear() methods:,2059,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  mock1.clear();,2060,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  mock2.clear();,2061,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2062,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //verification:,2063,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  verify(mock1).clear();,2064,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  verify(mock2).clear();,2065,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2066,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //verifyNoMoreInteractions() fails because get() methods were not accounted for.,2067,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  try { verifyNoMoreInteractions(mock1, mock2); } catch (NoInteractionsWanted e);",2068,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2069,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  //However, if we ignore stubbed methods then we can verifyNoMoreInteractions()",2070,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  verifyNoMoreInteractions(ignoreStubs(mock1, mock2));",2071,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2072,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  //Remember that ignoreStubs() <b>*changes*</b> the input mocks and returns them for convenience.,2073,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2074,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Ignoring stubs can be used with <b>verification in order</b>:,2075,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2076,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  List list = mock(List.class);,2077,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*  when(mock.get(0)).thenReturn(""foo"");",2078,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2079,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  list.add(0);,2080,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  System.out.println(list.get(0)); //we don't want to verify this,2081,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  list.clear();,2082,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2083,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  InOrder inOrder = inOrder(ignoreStubs(list));,2084,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  inOrder.verify(list).add(0);,2085,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  inOrder.verify(list).clear();,2086,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*  inOrder.verifyNoMoreInteractions();,2087,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2088,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2089,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @since 1.9.0,2090,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param mocks input mocks that will be changed,2091,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return the same mocks that were passed in as parameters,2092,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2093,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static Object[] ignoreStubs(Object... mocks) {,2094,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return MOCKITO_CORE.ignoreStubs(mocks);,2095,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2096,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2097,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2098,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows verifying exact number of invocations. E.g:,2099,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, times(2)).someMethod(""some arg"");",2101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param wantedNumberOfInvocations wanted number of invocations,2106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode times(int wantedNumberOfInvocations) {,2110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.times(wantedNumberOfInvocations);,2111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Alias to <code>times(0)</code>, see {@link Mockito#times(int)}",2115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Verifies that interaction did not happen. E.g:,2117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, never()).someMethod();",2119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If you want to verify there were NO interactions with the mock,2123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* check out {@link Mockito#verifyZeroInteractions(Object...)},2124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* or {@link Mockito#verifyNoMoreInteractions(Object...)},2125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode never() {,2131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return times(0);,2132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2134,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows at-least-once verification. E.g:,2136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, atLeastOnce()).someMethod(""some arg"");",2138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Alias to <code>atLeast(1)</code>.,2140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode atLeastOnce() {,2146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.atLeastOnce();,2147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2149,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows at-least-x verification. E.g:,2151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, atLeast(3)).someMethod(""some arg"");",2153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param minNumberOfInvocations minimum number of invocations,2158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode atLeast(int minNumberOfInvocations) {,2162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.atLeast(minNumberOfInvocations);,2163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2165,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows at-most-x verification. E.g:,2167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, atMost(3)).someMethod(""some arg"");",2169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param maxNumberOfInvocations max number of invocations,2174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode atMost(int maxNumberOfInvocations) {,2178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.atMost(maxNumberOfInvocations);,2179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2180,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2181,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows non-greedy verification in order.  For example,2183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   inOrder.verify( mock, calls( 2 )).someMethod( ""some arg"" );",2185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <ul>,2187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li>will not fail if the method is called 3 times, unlike times( 2 )</li>",2188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <li>will not mark the third invocation as verified, unlike atLeast( 2 )</li>",2189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </ul>,2190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* This verification mode can only be used with in order verification.,2191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param wantedNumberOfInvocations number of invocations to verify,2192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return  verification mode,2193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode calls( int wantedNumberOfInvocations ){,2195,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.calls( wantedNumberOfInvocations );,2196,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2197,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2198,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows checking if given method was the only one invoked. E.g:,2200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, only()).someMethod();",2202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is a shorthand for following 2 lines of code:,2203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   verify(mock).someMethod();,2204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   verifyNoMoreInvocations(mock);,2205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See also {@link Mockito#verifyNoMoreInteractions(Object...)},2209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationMode only() {,2215,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return VerificationModeFactory.only();,2216,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2217,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2218,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows verifying with timeout. It causes a verify to wait for a specified period of time for a desired,2220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* interaction rather than fails immediately if has not already happened. May be useful for testing in concurrent,2221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* conditions.,2222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* This differs from {@link Mockito#after after()} in that after() will wait the full period, unless",2224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* the final test result is known early (e.g. if a never() fails), whereas timeout() will stop early as soon",2225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* as verification passes, producing different behaviour when used with times(2), for example, which can pass",2226,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* and then later fail. In that case, timeout would pass as soon as times(2) passes, whereas after would run until",2227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* times(2) failed, and then fail.",2228,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system,2230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Not yet implemented to work with InOrder verification.,2232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2233,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes when someMethod() is called within given time span,2234,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100)).someMethod();",2235,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is an alias to:,2236,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).times(1)).someMethod();",2237,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2238,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes as soon as someMethod() has been called 2 times before the given timeout,2239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).times(2)).someMethod();",2240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //equivalent: this also passes as soon as someMethod() has been called 2 times before the given timeout,2242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, timeout(100).atLeast(2)).someMethod();",2243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2244,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //verifies someMethod() within given time span using given verification mode,2245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //useful only if you have your own custom verification modes.,2246,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, new Timeout(100, yourOwnVerificationMode)).someMethod();",2247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2251,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param millis - time span in milliseconds,2252,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2253,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2254,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2255,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationWithTimeout timeout(long millis) {,2256,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return new Timeout(millis, VerificationModeFactory.times(1));",2257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2259,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows verifying over a given period. It causes a verify to wait for a specified period of time for a desired,2261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* interaction rather than failing immediately if has not already happened. May be useful for testing in concurrent,2262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* conditions.,2263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* This differs from {@link Mockito#timeout timeout()} in that after() will wait the full period, whereas timeout()",2265,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* will stop early as soon as verification passes, producing different behaviour when used with times(2), for example,",2266,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* which can pass and then later fail. In that case, timeout would pass as soon as times(2) passes, whereas after would",2267,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* run the full time, which point it will fail, as times(2) has failed.",2268,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2269,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system,2270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Not yet implemented to work with InOrder verification.,2272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //passes after 100ms, if someMethod() has only been called once at that time.",2274,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, after(100)).someMethod();",2275,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //above is an alias to:,2276,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, after(100).times(1)).someMethod();",2277,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2278,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes if someMethod() is called <b>*exactly*</b> 2 times after the given timespan,2279,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, after(100).times(2)).someMethod();",2280,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2281,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //passes if someMethod() has not been called after the given timespan,2282,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, after(100).never()).someMethod();",2283,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2284,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //verifies someMethod() after a given time span using given verification mode,2285,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //useful only if you have your own custom verification modes.,2286,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   verify(mock, new After(100, yourOwnVerificationMode)).someMethod();",2287,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2288,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @param millis - time span in milliseconds,2292,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2293,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return verification mode,2294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static VerificationAfterDelay after(long millis) {,2296,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"return new After(millis, VerificationModeFactory.times(1));",2297,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2298,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2299,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* First of all, in case of any trouble, I encourage you to read the Mockito FAQ: <a href=""http://code.google.com/p/mockito/wiki/FAQ"">http://code.google.com/p/mockito/wiki/FAQ</a>",2301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2302,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* In case of questions you may also post to mockito mailing list: <a href=""http://groups.google.com/group/mockito"">http://groups.google.com/group/mockito</a>",2303,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2304,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <code>validateMockitoUsage()</code> <b>explicitly validates</b> the framework state to detect invalid use of Mockito.,2305,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, this feature is optional <b>because Mockito validates the usage all the time...</b> but there is a gotcha so read on.",2306,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2307,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Examples of incorrect use:,2308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2309,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Oops, thenReturn() part is missing:",2310,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* when(mock.get());,2311,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2312,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Oops, verified method call is inside verify() where it should be on the outside:",2313,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mock.execute());,2314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2315,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* //Oops, missing method to verify:",2316,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* verify(mock);,2317,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2318,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2319,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Mockito throws exceptions if you misuse it so that you know if your tests are written correctly.,2320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* The gotcha is that Mockito does the validation <b>next time</b> you use the framework (e.g. next time you verify, stub, call mock etc.).",2321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* But even though the exception might be thrown in the next test,",2322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* the exception <b>message contains a navigable stack trace element</b> with location of the defect.,2323,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Hence you can click and find the place where Mockito was misused.,2324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Sometimes though, you might want to validate the framework usage explicitly.",2326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* For example, one of the users wanted to put <code>validateMockitoUsage()</code> in his <code>&#064;After</code> method",2327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* so that he knows immediately when he misused Mockito.,2328,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Without it, he would have known about it not sooner than <b>next time</b> he used the framework.",2329,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* One more benefit of having <code>validateMockitoUsage()</code> in <code>&#064;After</code> is that jUnit runner and rule will always fail in the test method with defect,2330,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* whereas ordinary 'next-time' validation might fail the <b>next</b> test method.,2331,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* But even though JUnit might report next test as red, don't worry about it",2332,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* and just click at navigable stack trace element in the exception message to instantly locate the place where you misused mockito.,2333,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2334,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <b>Both built-in runner: {@link MockitoJUnitRunner} and rule: {@link MockitoRule}</b> do validateMockitoUsage() after each test method.,2335,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2336,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Bear in mind that <b>usually you don't have to <code>validateMockitoUsage()</code></b>,2337,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* and framework validation triggered on next-time basis should be just enough,",2338,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* mainly because of enhanced exception message with clickable location of defect.,2339,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* However, I would recommend validateMockitoUsage() if you already have sufficient test infrastructure",2340,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* (like your own runner or base class for all tests) because adding a special action to <code>&#064;After</code> has zero cost.,2341,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2342,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See examples in javadoc for {@link Mockito} class,2343,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2344,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static void validateMockitoUsage() {,2345,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,MOCKITO_CORE.validateMockitoUsage();,2346,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2347,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2348,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2349,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Allows mock creation with additional mock settings.,2350,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2351,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Don't use it too often.,2352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Consider writing simple tests that use simple mocks.,2353,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Repeat after me: simple tests push simple, KISSy, readable & maintainable code.",2354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* If you cannot write a test in a simple way - refactor the code under test.,2355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Examples of mock settings:,2357,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* <pre class=""code""><code class=""java"">",2358,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*   //Creates mock with different default answer & name,2359,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, withSettings()",2360,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       .defaultAnswer(RETURNS_SMART_NULLS),2361,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*       .name(""cool mockie""));",2362,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2363,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   //Creates mock with different default answer, descriptive name and extra interfaces",2364,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*   Foo mock = mock(Foo.class, withSettings()",2365,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       .defaultAnswer(RETURNS_SMART_NULLS),2366,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"*       .name(""cool mockie"")",2367,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*       .extraInterfaces(Bar.class));,2368,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* </code></pre>,2369,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* {@link MockSettings} has been introduced for two reasons.,2370,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Firstly, to make it easy to add another mock settings when the demand comes.",2371,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,"* Secondly, to enable combining different mock settings without introducing zillions of overloaded mock() methods.",2372,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2373,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* See javadoc for {@link MockSettings} to learn about possible mock settings.,2374,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* <p>,2375,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*,2376,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* @return mock settings instance with defaults.,2377,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2378,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,public static MockSettings withSettings() {,2379,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return new MockSettingsImpl().defaultAnswer(RETURNS_DEFAULTS);,2380,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2381,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,,2382,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,/**,2383,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,* Helps debugging failing tests. Experimental - use at your own risk. We're not sure if this method will stay in public api.,2384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,*/,2385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,@Deprecated,2386,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,static MockitoDebugger debug() {,2387,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,return new MockitoDebuggerImpl();,2388,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2389,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Mockito.java,},2390,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.configuration.AnnotationEngine;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.configuration.DefaultMockitoConfiguration;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.exceptions.base.MockitoException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.internal.configuration.GlobalConfiguration;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.internal.util.reflection.FieldSetter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import org.mockito.runners.MockitoJUnitRunner;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import java.lang.annotation.Annotation;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import java.lang.annotation.Retention;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import java.lang.annotation.RetentionPolicy;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import java.lang.annotation.Target;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import java.lang.reflect.Field;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,import static java.lang.annotation.ElementType.FIELD;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* MockitoAnnotations.initMocks(this); initializes fields annotated with Mockito annotations.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <ul>,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <li>Allows shorthand creation of objects required for testing.</li>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <li>Minimizes repetitive mock creation code.</li>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <li>Makes the test class more readable.</li>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <li>Makes the verification error easier to read because <b>field name</b> is used to identify the mock.</li>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* </ul>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"* <pre class=""code""><code class=""java"">",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*   public class ArticleManagerTest extends SampleBaseTestCase {,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       &#064;Mock private ArticleCalculator calculator;,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       &#064;Mock private ArticleDatabase database;,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       &#064;Mock private UserProvider userProvider;,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       private ArticleManager manager;,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       &#064;Before public void setup() {,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"*           manager = new ArticleManager(userProvider, database, calculator);",44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       },45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*   },46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*   public class SampleBaseTestCase {,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       &#064;Before public void initMocks() {,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*           MockitoAnnotations.initMocks(this);,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*       },52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*   },53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* </code></pre>,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"* Read also about other annotations &#064;{@link Spy}, &#064;{@link Captor}, &#064;{@link InjectMocks}",56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <b><code>MockitoAnnotations.initMocks(this)</code></b> method has to called to initialize annotated fields.,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"* In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class.",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* For JUnit3 <code>initMocks()</code> can go to <code>setup()</code> method of a base class.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* You can also put initMocks() in your JUnit runner (&#064;RunWith) or use built-in runner: {@link MockitoJUnitRunner},62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*/,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,public class MockitoAnnotations {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,/**,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* Use top-level {@link org.mockito.Mock} annotation instead,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* When &#064;Mock annotation was implemented as an inner class then users experienced problems with autocomplete features in IDEs.,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* Hence &#064;Mock was made a top-level class.,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* How to fix deprecation warnings?,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"* Typically, you can just <b>search:</b> import org.mockito.MockitoAnnotations.Mock; <b>and replace with:</b> import org.mockito.Mock;",73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* If you're an existing user then sorry for making your code littered with deprecation warnings.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* This change was required to make Mockito better.,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*/,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,@Target( { FIELD }),78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,@Retention(RetentionPolicy.RUNTIME),79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,@Deprecated,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,public @interface Mock {},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,/**,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* Initializes objects annotated with Mockito annotations for given testClass:,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"*  &#064;{@link org.mockito.Mock}, &#064;{@link Spy}, &#064;{@link Captor}, &#064;{@link InjectMocks}",85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* <p>,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,* See examples in javadoc for {@link MockitoAnnotations} class.,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,*/,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,public static void initMocks(Object testClass) {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,if (testClass == null) {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"throw new MockitoException(""testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class"");",91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,AnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,Class<?> clazz = testClass.getClass();,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,96,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"//below can be removed later, when we get read rid of deprecated stuff",97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,if (annotationEngine.getClass() != new DefaultMockitoConfiguration().getAnnotationEngine().getClass()) {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,//this means user has his own annotation engine and we have to respect that.,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,//we will do annotation processing the old way so that we are backwards compatible,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,while (clazz != Object.class) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"scanDeprecatedWay(annotationEngine, testClass, clazz);",102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,clazz = clazz.getSuperclass();,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,106,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,//anyway act 'the new' way,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"annotationEngine.process(testClass.getClass(), testClass);",108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"static void scanDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Class<?> clazz) {",111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,Field[] fields = clazz.getDeclaredFields();,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,for (Field field : fields) {,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"processAnnotationDeprecatedWay(annotationEngine, testClass, field);",115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"@SuppressWarnings(""deprecation"")",119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"static void processAnnotationDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Field field) {",120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,boolean alreadyAssigned = false;,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,for(Annotation annotation : field.getAnnotations()) {,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"Object mock = annotationEngine.createMockFor(annotation, field);",123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,if (mock != null) {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"throwIfAlreadyAssigned(field, alreadyAssigned);",125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,alreadyAssigned = true;,126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,try {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"new FieldSetter(testClass, field).set(mock);",128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,} catch (Exception e) {,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"+ annotation, e);",131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,,136,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,"static void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {",137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,if (alreadyAssigned) {,138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoAnnotations.java,},142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,public interface MockitoDebugger {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,//Prints all interactions with mock. Also prints stubbing information.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,//You can put it in your 'tearDown' method,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,String printInvocations(Object ... mocks);,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\MockitoDebugger.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,package org.mockito;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,import org.mockito.invocation.InvocationOnMock;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* @deprecated,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,"* <b>Instead, please use {@link Answer} interface</b>",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* <p>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* In rare cases your code might not compile with recent deprecation & changes.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* Very sorry for inconvenience but it had to be done in order to keep framework consistent.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* Why it is deprecated? ReturnValues is being replaced by Answer,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* for better consistency & interoperability of the framework.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* Answer interface has been in Mockito for a while and it has the same responsibility as ReturnValues.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* There's no point in mainting exactly the same interfaces.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* <p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* Configures return values for an unstubbed invocation,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* <p>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,"* Can be used in {@link Mockito#mock(Class, ReturnValues)}",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,@Deprecated,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,public interface ReturnValues {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* return value for an unstubbed invocation,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* @param invocation placeholder for mock and a method,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,* @return the return value,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,Object valueFor(InvocationOnMock invocation) throws Throwable;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\ReturnValues.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,package org.mockito;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,import static java.lang.annotation.ElementType.FIELD;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,import static java.lang.annotation.RetentionPolicy.RUNTIME;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,import java.lang.annotation.Documented;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,import java.lang.annotation.Retention;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,import java.lang.annotation.Target;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Allows shorthand wrapping of field instances in an spy object.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Example:,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <pre class=""code""><code class=""java"">",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* public class Test{,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    //Instance for spying is created by calling constructor explicitly:,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"*    &#64;Spy Foo spyOnFoo = new Foo(""argument"");",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    //Instance for spying is created by mockito via reflection (only default constructors supported):,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    &#64;Spy Bar spyOnBar;,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    &#64;Before,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    public void init(){,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*       MockitoAnnotations.initMocks(this);,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    },28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    ...,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* },30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </code></pre>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <p>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Same as doing:,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <pre class=""code""><code class=""java"">",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* Foo spyOnFoo = Mockito.spy(new Foo(""argument""));",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Bar spyOnFoo = Mockito.spy(new Bar());,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </code></pre>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <p>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <strong>The field annotated with &#064;Spy can be initialized by Mockito if a zero argument constructor,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* can be found in the type (even private). <u>But Mockito cannot instantiate inner classes, local classes,",42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* abstract classes and interfaces.</u></strong>,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <strong>The field annotated with &#064;Spy can be initialized explicitly at declaration point.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* Alternatively, if you don't provide the instance Mockito will try to find zero argument constructor (even private)",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* and create an instance for you.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <u>But Mockito cannot instantiate inner classes, local classes, abstract classes and interfaces.</u></strong>",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* For example this class can be instantiated by Mockito :,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <pre class=""code""><code class=""java"">public class Bar {",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    private Bar() {},52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*    public Bar(String publicConstructorWithOneArg) {},53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* }</code></pre>,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </p>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <h4>Important gotcha on spying real objects!</h4>,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <ol>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <li>Sometimes it's impossible or impractical to use {@link Mockito#when(Object)} for stubbing spies.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Therefore for spies it is recommended to always use <code>doReturn</code>|<code>Answer</code>|<code>Throw()</code>|<code>CallRealMethod</code>,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* family of methods for stubbing. Example:,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <pre class=""code""><code class=""java"">",63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*   List list = new LinkedList();,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*   List spy = spy(list);,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty),67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"*   when(spy.get(0)).thenReturn(""foo"");",68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*   //You have to use doReturn() for stubbing,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"*   doReturn(""foo"").when(spy).get(0);",71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </code></pre>,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </li>,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <li>Mockito <b>*does not*</b> delegate calls to the passed real instance, instead it actually creates a copy of it.",75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* So if you keep the real instance and interact with it, don't expect the spied to be aware of those interaction",76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* and their effect on real instance state.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* The corollary is that when an <b>*unstubbed*</b> method is called <b>*on the spy*</b> but <b>*not on the real instance*</b>,",78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* you won't see any effects on the real instance.</li>,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <li>Watch out for final methods.,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* Also you won't be able to verify those method as well.,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </li>,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </ol>,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <p>,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <strong>One last warning :</strong> if you call <code>MockitoAnnotations.initMocks(this)</code> in a,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* super class <strong>constructor</strong> then this will not work. It is because fields,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* in subclass are only instantiated after super class constructor has returned.,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* It's better to use &#64;Before.,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* <strong>Instead</strong> you can also put initMocks() in your JUnit runner (&#064;RunWith) or use the built-in,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* {@link org.mockito.runners.MockitoJUnitRunner}.,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* </p>,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,"* <p>Note that the spy won't have any annotations of the spied type, because CGLIB won't rewrite them.",96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* It may troublesome for code that rely on the spy to have these annotations.</p>,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @see Mockito#spy(Object),99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @see Mock,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @see InjectMocks,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @see MockitoAnnotations#initMocks(Object),102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @see org.mockito.runners.MockitoJUnitRunner,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,* @since 1.8.3,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,*/,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,@Retention(RUNTIME),106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,@Target(FIELD),107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,@Documented,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\Spy.java,public @interface Spy { },109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,package org.mockito.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,import org.mockito.MockitoAnnotations;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,import java.lang.annotation.Annotation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,import java.lang.reflect.Field;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"* Configures mock creation logic behind &#064;Mock, &#064;Captor and &#064;Spy annotations",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* <p>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* If you are interested then see implementations or source code of {@link MockitoAnnotations#initMocks(Object)},15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,public interface AnnotationEngine {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* @deprecated,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"* Please use {@link AnnotationEngine#process(Class, Object)} method instead that is more robust",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* <p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"* Creates mock, ArgumentCaptor or wraps field instance in spy object.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* Only if of correct annotation type.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* @param annotation Annotation,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* @param field Field details,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,@Deprecated,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"Object createMockFor(Annotation annotation, Field field);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,/**,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* Allows extending the interface to perform action on specific fields on the test class.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* <p>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* See the implementation of this method to figure out what is it for.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"* @param clazz Class where to extract field information, check implementation for details",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,* @param testInstance Test instance,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,*/,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,"void process(Class<?> clazz, Object testInstance);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\AnnotationEngine.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,package org.mockito.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,import org.mockito.ReturnValues;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,import org.mockito.internal.configuration.InjectingAnnotationEngine;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* DefaultConfiguration of Mockito framework,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* <p>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* Currently it doesn't have many configuration options but it will probably change if future.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* <p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* See javadocs for {@link IMockitoConfiguration} on info how to configure Mockito,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,"@SuppressWarnings(""deprecation"")//suppressed until ReturnValues are removed",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public class DefaultMockitoConfiguration implements IMockitoConfiguration {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/* (non-Javadoc),22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* @see org.mockito.IMockitoConfiguration#getReturnValues(),23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,@Deprecated,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public ReturnValues getReturnValues() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,"throw new RuntimeException(""\n"" + ""This method should not be used by the framework because it was deprecated""",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,"+ ""\n"" + ""Please report the failure to the Mockito mailing list"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public Answer<Object> getDefaultAnswer() {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,return new ReturnsEmptyValues();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/* (non-Javadoc),35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* @see org.mockito.IMockitoConfiguration#getAnnotationEngine(),36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public AnnotationEngine getAnnotationEngine() {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,return new InjectingAnnotationEngine();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/* (non-Javadoc),42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* @see org.mockito.configuration.IMockitoConfiguration#cleansStackTrace(),43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public boolean cleansStackTrace() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,return true;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,/* (non-Javadoc),49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,* @see org.mockito.configuration.IMockitoConfiguration#enableClassCache(),50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,*/,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,public boolean enableClassCache() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,return true;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\DefaultMockitoConfiguration.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,package org.mockito.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,import org.mockito.ReturnValues;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Use it to configure Mockito. For now there are not many configuration options but it may change in future.,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,"* In most cases you don't really need to configure Mockito. For example in case of working with legacy code,",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* when you might want to have different 'mocking style' this interface might be helpful.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* A reason of configuring Mockito might be if you disagree with the {@link ReturnsEmptyValues} unstubbed mocks return.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* To configure Mockito create exactly <b>org.mockito.configuration.MockitoConfiguration</b> class that implements this interface.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Configuring Mockito is completely <b>optional</b> - nothing happens if there isn't any <b>org.mockito.configuration.MockitoConfiguration</b> on the classpath.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <b>org.mockito.configuration.MockitoConfiguration</b> must implement IMockitoConfiguration or extend {@link DefaultMockitoConfiguration},22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Mockito will store single instance of org.mockito.configuration.MockitoConfiguration per thread (using ThreadLocal).,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,"* For sanity of your tests, don't make the implementation stateful.",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* If you have comments on Mockito configuration feature don't hesitate to write to mockito@googlegroups.com,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,"@SuppressWarnings(""deprecation"")//suppressed until ReturnValues are removed",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,public interface IMockitoConfiguration {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* @deprecated,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <b>Please use {@link IMockitoConfiguration#getDefaultAnswer()}</b>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Steps:,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* 1. Leave the implementation of getReturnValues() method empty - it's not going to be used anyway.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* 2. Implement getDefaultAnswer() instead.,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* In rare cases your code might not compile with recent deprecation & changes.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Very sorry for inconvenience but it had to be done in order to keep framework consistent.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* See javadoc {@link ReturnValues} for info why this method was deprecated,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Allows configuring the default return values of unstubbed invocations,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* See javadoc for {@link IMockitoConfiguration},49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,@Deprecated,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,ReturnValues getReturnValues();,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Allows configuring the default answers of unstubbed invocations,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* See javadoc for {@link IMockitoConfiguration},57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,Answer<Object> getDefaultAnswer();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Configures annotations for mocks,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* See javadoc for {@link IMockitoConfiguration},64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,AnnotationEngine getAnnotationEngine();,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* This should be turned on unless you're a Mockito developer and you wish,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* to have verbose (read: messy) stack traces that only few understand (eg:,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Mockito developers),71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* <p>,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* See javadoc for {@link IMockitoConfiguration},73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* @return if Mockito should clean stack traces,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,boolean cleansStackTrace();,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,/**,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,* Allow objenesis to cache classes. If you're in an environment where classes,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,"* are dynamically reloaded, you can disable this to avoid classcast exceptions.",81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,*/,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,boolean enableClassCache();,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\configuration\IMockitoConfiguration.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,package org.mockito.exceptions;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,@Deprecated,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,* @Deprecated. This class has been moved to internal packages because it was never meant to be public.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,* If you need it for extending Mockito please let us know. You can still use {@link org.mockito.internal.reporting.Discrepancy}.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,"* However, the package clearly states that the class in a part of a public API so it can change.",11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,public class Discrepancy extends org.mockito.internal.reporting.Discrepancy {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,"public Discrepancy(int wantedCount, int actualCount) {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,"super(wantedCount, actualCount);",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Discrepancy.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,package org.mockito.exceptions;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,@Deprecated,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,* @Deprecated. This class has been moved to internal packages because it was never meant to be public.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,* If you need it for extending Mockito please let us know. You can still use {@link org.mockito.internal.reporting.Pluralizer}.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,"* However, the package clearly states that the class in a part of a public API so it can change.",11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Pluralizer.java,public class Pluralizer extends org.mockito.internal.reporting.Pluralizer {},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,package org.mockito.exceptions;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,import org.mockito.invocation.DescribedInvocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,import org.mockito.invocation.Location;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,@Deprecated,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,* @Deprecated. We needed to move this class to a better place to keep consistency of the API.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,* Please use {@link DescribedInvocation} instead.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,public interface PrintableInvocation {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,String toString();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,Location getLocation();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\PrintableInvocation.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,package org.mockito.exceptions;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.base.MockitoException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.misusing.*;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.NeverWantedButInvoked;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.NoInteractionsWanted;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.SmartNullPointerException;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.TooLittleActualInvocations;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.TooManyActualInvocations;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.VerificationInOrderFailure;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.exceptions.verification.WantedButNotInvoked;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.debugging.LocationImpl;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.exceptions.MockitoLimitations;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.exceptions.VerificationAwareInvocation;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.exceptions.util.ScenarioPrinter;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.junit.JUnitTool;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.matchers.LocalizedMatcher;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.util.MockUtil;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.internal.util.StringJoiner;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.invocation.DescribedInvocation;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.invocation.Invocation;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.invocation.InvocationOnMock;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.invocation.Location;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.listeners.InvocationListener;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.mock.MockName;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import org.mockito.mock.SerializableMode;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import java.lang.reflect.Field;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import java.lang.reflect.Method;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import java.util.ArrayList;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import java.util.Collection;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import java.util.List;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import static org.mockito.internal.reporting.Pluralizer.pluralize;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,import static org.mockito.internal.util.StringJoiner.join;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,/**,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* Reports verification and misusing errors.,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* <p>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* One of the key points of mocking library is proper verification/exception,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* messages. All messages in one place makes it easier to tune and amend them.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* <p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* Reporter can be injected and therefore is easily testable.,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* <p>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"* Generally, exception messages are full of line breaks to make them easy to",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,* read (xunit plugins take only fraction of screen on modern IDEs).,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,*/,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public class Reporter {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void checkedExceptionInvalid(Throwable t) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Checked exception is invalid for this method!"",",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Invalid: "" + t",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotStubWithNullThrowable() {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Cannot stub with null throwable!""",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void unfinishedStubbing(Location location) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new UnfinishedStubbingException(join(,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Unfinished stubbing detected here:"",",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"location,",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""E.g. thenReturn() may be missing."",",75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct stubbing:"",",76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.isOk()).thenReturn(true);"",",77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.isOk()).thenThrow(exception);"",",78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(exception).when(mock).someVoidMethod();"",",79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Hints:"",",80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""" 1. missing thenReturn()"",",81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""" 2. you are trying to stub a final method, you naughty developer!"",",82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""" 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed"",",83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,87,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void incorrectUseOfApi() {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Incorrect use of API detected here:"",",90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You probably stored a reference to OngoingStubbing returned by when() and called stubbing methods like thenReturn() on this reference more than once."",",93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct usage:"",",94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.isOk()).thenReturn(true).thenReturn(false).thenThrow(exception);"",",95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.isOk()).thenReturn(true, false).thenThrow(exception);"",",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,100,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void missingMethodInvocation() {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MissingMethodInvocationException(join(,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""when() requires an argument which has to be 'a method call on a mock'."",",103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.getArticles()).thenReturn(articles);"",",105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also, this error might show up because:"",",107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""1. you stub either of: final/private/equals()/hashCode() methods."",",108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   Those methods *cannot* be stubbed/verified."",",109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   "" + MockitoLimitations.NON_PUBLIC_PARENT,",110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""2. inside when() you don't call method on mock but on some other object."",",111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,115,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void unfinishedVerificationException(Location location) {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,UnfinishedVerificationException exception = new UnfinishedVerificationException(join(,117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Missing method call for verify(mock) here:"",",118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"location,",119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Example of correct verification:"",",121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock).doSomething()"",",122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also, this error might show up because you verify either of: final/private/equals()/hashCode() methods."",",124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Those methods *cannot* be stubbed/verified."",",125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"MockitoLimitations.NON_PUBLIC_PARENT,",126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,129,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw exception;,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,132,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void notAMockPassedToVerify(Class type) {,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NotAMockException(join(,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument passed to verify() is of type "" + type.getSimpleName() + "" and is not a mock!"",",135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Make sure you place the parenthesis correctly!"",",136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""See the examples of correct verifications:"",",137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock).someMethod();"",",138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock, times(10)).someMethod();"",",139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock, atLeastOnce()).someMethod();""",140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,143,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void nullPassedToVerify() {,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NullInsteadOfMockException(join(,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument passed to verify() should be a mock but is null!"",",146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct verifications:"",",147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock).someMethod();"",",148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock, times(10)).someMethod();"",",149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock, atLeastOnce()).someMethod();"",",150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    not: verify(mock.someMethod());"",",151,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also, if you use @Mock annotation don't miss initMocks()""",152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,155,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void notAMockPassedToWhenMethod() {,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NotAMockException(join(,157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument passed to when() is not a mock!"",",158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Example of correct stubbing:"",",159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(new RuntimeException()).when(mock).someMethod();""",160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,163,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void nullPassedToWhenMethod() {,164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NullInsteadOfMockException(join(,165,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument passed to when() is null!"",",166,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Example of correct stubbing:"",",167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(new RuntimeException()).when(mock).someMethod();"",",168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also, if you use @Mock annotation don't miss initMocks()""",169,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},171,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,172,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void mocksHaveToBePassedToVerifyNoMoreInteractions() {,173,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Method requires argument(s)!"",",175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Pass mocks that should be verified, e.g:"",",176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyNoMoreInteractions(mockOne, mockTwo);"",",177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyZeroInteractions(mockOne, mockTwo);"",",178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,180,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,182,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void notAMockPassedToVerifyNoMoreInteractions() {,183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NotAMockException(join(,184,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument(s) passed is not a mock!"",",185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct verifications:"",",186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyNoMoreInteractions(mockOne, mockTwo);"",",187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyZeroInteractions(mockOne, mockTwo);"",",188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",189,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,190,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},191,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,192,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void nullPassedToVerifyNoMoreInteractions() {,193,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NullInsteadOfMockException(join(,194,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument(s) passed is null!"",",195,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct verifications:"",",196,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyNoMoreInteractions(mockOne, mockTwo);"",",197,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verifyZeroInteractions(mockOne, mockTwo);""",198,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,199,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},200,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,201,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void notAMockPassedWhenCreatingInOrder() {,202,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NotAMockException(join(,203,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument(s) passed is not a mock!"",",204,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Pass mocks that require verification in order."",",205,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",206,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    InOrder inOrder = inOrder(mockOne, mockTwo);""",207,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,208,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},209,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,210,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void nullPassedWhenCreatingInOrder() {,211,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NullInsteadOfMockException(join(,212,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument(s) passed is null!"",",213,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Pass mocks that require verification in order."",",214,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",215,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    InOrder inOrder = inOrder(mockOne, mockTwo);""",216,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,217,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},218,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,219,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void mocksHaveToBePassedWhenCreatingInOrder() {,220,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,221,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Method requires argument(s)!"",",222,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Pass mocks that require verification in order."",",223,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",224,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    InOrder inOrder = inOrder(mockOne, mockTwo);""",225,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,226,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},227,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,228,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void inOrderRequiresFamiliarMock() {,229,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,230,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""InOrder can only verify mocks that were passed in during creation of InOrder."",",231,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",232,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    InOrder inOrder = inOrder(mockOne);"",",233,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    inOrder.verify(mockOne).doStuff();""",234,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,235,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},236,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,237,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void invalidUseOfMatchers(int expectedMatchersCount, List<LocalizedMatcher> recordedMatchers) {",238,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new InvalidUseOfMatchersException(join(,239,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Invalid use of argument matchers!"",",240,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"expectedMatchersCount + "" matchers expected, "" + recordedMatchers.size() + "" recorded:"" +",241,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"locationsOf(recordedMatchers),",242,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",243,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""This exception may occur if matchers are combined with raw values:"",",244,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    //incorrect:"",",245,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    someMethod(anyObject(), \""raw String\"");"",",246,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""When using matchers, all arguments have to be provided by matchers."",",247,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",248,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    //correct:"",",249,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    someMethod(anyObject(), eq(\""String by matcher\""));"",",250,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",251,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For more info see javadoc for Matchers class."",",252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",253,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,254,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},255,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,256,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void incorrectUseOfAdditionalMatchers(String additionalMatcherName, int expectedSubMatchersCount, Collection<LocalizedMatcher> matcherStack) {",257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new InvalidUseOfMatchersException(join(,258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Invalid use of argument matchers inside additional matcher "" + additionalMatcherName + "" !"",",259,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",260,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",261,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"expectedSubMatchersCount + "" sub matchers expected, "" + matcherStack.size() + "" recorded:"",",262,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"locationsOf(matcherStack),",263,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",264,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""This exception may occur if matchers are combined with raw values:"",",265,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    //incorrect:"",",266,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    someMethod(AdditionalMatchers.and(isNotNull(), \""raw String\"");"",",267,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""When using matchers, all arguments have to be provided by matchers."",",268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For example:"",",269,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    //correct:"",",270,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    someMethod(AdditionalMatchers.and(isNotNull(), eq(\""raw String\""));"",",271,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",272,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For more info see javadoc for Matchers and AdditionalMatchers classes."",",273,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",274,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,275,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},276,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,277,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void stubPassedToVerify() {,278,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new CannotVerifyStubOnlyMock(join(,279,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Argument passed to verify() is a stubOnly() mock, not a full blown mock!"",",280,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""If you intend to verify invocations on a mock, don't use stubOnly() in its MockSettings.""",281,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,282,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},283,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,284,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void reportNoSubMatchersFound(String additionalMatcherName) {,285,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new InvalidUseOfMatchersException(join(,286,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""No matchers found for additional matcher "" + additionalMatcherName,",287,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",288,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",289,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,290,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},291,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,292,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,293,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,private Object locationsOf(Collection<LocalizedMatcher> matchers) {,294,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,List<String> description = new ArrayList<String>();,295,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,for (LocalizedMatcher matcher : matchers),296,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,description.add(matcher.getLocation().toString());,297,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return join(description.toArray());,298,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},299,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,300,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void argumentsAreDifferent(String wanted, String actual, Location actualLocation) {",301,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"String message = join(""Argument(s) are different! Wanted:"",",302,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted,",303,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",304,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Actual invocation has different arguments:"",",305,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"actual,",306,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"actualLocation,",307,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",308,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,);,309,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,310,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);",311,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},312,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,313,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void wantedButNotInvoked(DescribedInvocation wanted) {,314,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new WantedButNotInvoked(createWantedButNotInvokedMessage(wanted));,315,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},316,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,317,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wantedButNotInvoked(DescribedInvocation wanted, List<? extends DescribedInvocation> invocations) {",318,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,String allInvocations;,319,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,if (invocations.isEmpty()) {,320,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"allInvocations = ""Actually, there were zero interactions with this mock.\n"";",321,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,} else {,322,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"StringBuilder sb = new StringBuilder(""\nHowever, there were other interactions with this mock:\n"");",323,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,for (DescribedInvocation i : invocations) {,324,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,sb.append(i.toString()),325,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,".append(""\n"")",326,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,.append(i.getLocation()),327,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,".append(""\n\n"");",328,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,allInvocations = sb.toString();,330,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},331,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,332,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,String message = createWantedButNotInvokedMessage(wanted);,333,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new WantedButNotInvoked(message + allInvocations);,334,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},335,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,336,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,private String createWantedButNotInvokedMessage(DescribedInvocation wanted) {,337,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return join(,338,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted but not invoked:"",",339,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted.toString(),",340,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",341,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",342,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,);,343,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},344,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,345,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wantedButNotInvokedInOrder(DescribedInvocation wanted, DescribedInvocation previous) {",346,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new VerificationInOrderFailure(join(,347,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Verification in order failure"",",348,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted but not invoked:"",",349,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted.toString(),",350,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",351,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted anywhere AFTER following interaction:"",",352,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"previous.toString(),",353,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"previous.getLocation(),",354,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",355,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,356,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},357,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,358,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void tooManyActualInvocations(int wantedCount, int actualCount, DescribedInvocation wanted, Location firstUndesired) {",359,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",360,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new TooManyActualInvocations(message);,361,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},362,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,363,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"private String createTooManyInvocationsMessage(int wantedCount, int actualCount, DescribedInvocation wanted,",364,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,Location firstUndesired) {,365,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return join(,366,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted.toString(),",367,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted "" + pluralize(wantedCount) + "":"",",368,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",369,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""But was "" + pluralize(actualCount) + "". Undesired invocation:"",",370,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"firstUndesired,",371,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",372,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,);,373,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},374,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,375,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void neverWantedButInvoked(DescribedInvocation wanted, Location firstUndesired) {",376,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NeverWantedButInvoked(join(,377,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted.toString(),",378,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Never wanted here:"",",379,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",380,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""But invoked here:"",",381,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"firstUndesired,",382,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",383,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,384,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},385,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,386,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void tooManyActualInvocationsInOrder(int wantedCount, int actualCount, DescribedInvocation wanted, Location firstUndesired) {",387,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",388,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new VerificationInOrderFailure(join(,389,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Verification in order failure:"" + message",390,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,391,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},392,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,393,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"private String createTooLittleInvocationsMessage(org.mockito.internal.reporting.Discrepancy discrepancy, DescribedInvocation wanted,",394,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,Location lastActualInvocation) {,395,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,String ending =,396,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"(lastActualInvocation != null) ? lastActualInvocation + ""\n"" : ""\n"";",397,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,398,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,String message = join(,399,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"wanted.toString(),",400,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted "" + discrepancy.getPluralizedWantedCount() + "":"",",401,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",402,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""But was "" + discrepancy.getPluralizedActualCount() + "":"",",403,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,ending,404,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,);,405,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return message;,406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},407,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,408,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void tooLittleActualInvocations(org.mockito.internal.reporting.Discrepancy discrepancy, DescribedInvocation wanted, Location lastActualLocation) {",409,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",410,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,411,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new TooLittleActualInvocations(message);,412,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},413,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,414,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void tooLittleActualInvocationsInOrder(org.mockito.internal.reporting.Discrepancy discrepancy, DescribedInvocation wanted, Location lastActualLocation) {",415,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",416,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,417,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new VerificationInOrderFailure(join(,418,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Verification in order failure:"" + message",419,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,420,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},421,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,422,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void noMoreInteractionsWanted(Invocation undesired, List<VerificationAwareInvocation> invocations) {",423,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,ScenarioPrinter scenarioPrinter = new ScenarioPrinter();,424,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,String scenario = scenarioPrinter.print(invocations);,425,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,426,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new NoInteractionsWanted(join(,427,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""No interactions wanted here:"",",428,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",429,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""But found this interaction on mock '"" + safelyGetMockName(undesired.getMock()) + ""':"",",430,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"undesired.getLocation(),",431,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,scenario,432,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,433,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},434,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,435,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void noMoreInteractionsWantedInOrder(Invocation undesired) {,436,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new VerificationInOrderFailure(join(,437,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""No interactions wanted here:"",",438,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",439,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""But found this interaction on mock '"" + safelyGetMockName(undesired.getMock()) + ""':"",",440,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,undesired.getLocation(),441,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,442,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},443,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,444,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotMockFinalClass(Class<?> clazz) {,445,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,446,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Cannot mock/spy "" + clazz.toString(),",447,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mockito cannot mock/spy following:"",",448,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  - final classes"",",449,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  - anonymous classes"",",450,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  - primitive types""",451,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,452,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},453,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,454,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotStubVoidMethodWithAReturnValue(String methodName) {,455,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new CannotStubVoidMethodWithReturnValue(join(,456,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""'"" + methodName + ""' is a *void method* and it *cannot* be stubbed with a *return value*!"",",457,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Voids are usually stubbed with Throwables:"",",458,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(exception).when(mock).someVoidMethod();"",",459,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""***"",",460,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""If you're unsure why you're getting above error read on."",",461,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Due to the nature of the syntax above problem might occur because:"",",462,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version."",",463,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods."",",464,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - "",",465,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method."",",466,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""4. "" + MockitoLimitations.NON_PUBLIC_PARENT,",467,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",468,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,469,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},470,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,471,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void onlyVoidMethodsCanBeSetToDoNothing() {,472,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,473,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Only void methods can doNothing()!"",",474,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Example of correct use of doNothing():"",",475,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doNothing()."",",476,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(new RuntimeException())"",",477,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    .when(mock).someVoidMethod();"",",478,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Above means:"",",479,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""someVoidMethod() does nothing the 1st time but throws an exception the 2nd time is called""",480,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,481,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},482,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,483,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wrongTypeOfReturnValue(String expectedType, String actualType, String methodName) {",484,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new WrongTypeOfReturnValue(join(,485,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"actualType + "" cannot be returned by "" + methodName + ""()"",",486,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"methodName + ""() should return "" + expectedType,",487,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""***"",",488,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""If you're unsure why you're getting above error read on."",",489,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Due to the nature of the syntax above problem might occur because:"",",490,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""1. This exception *might* occur in wrongly written multi-threaded tests."",",491,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   Please refer to Mockito FAQ on limitations of concurrency testing."",",492,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - "",",493,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method."",",494,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",495,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,496,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},497,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,498,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wrongTypeReturnedByDefaultAnswer(Object mock, String expectedType, String actualType, String methodName) {",499,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new WrongTypeOfReturnValue(join(,500,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Default answer returned a result with the wrong type:"",",501,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"actualType + "" cannot be returned by "" + methodName + ""()"",",502,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"methodName + ""() should return "" + expectedType,",503,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",504,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The default answer of "" + safelyGetMockName(mock) + "" that was configured on the mock is probably incorrectly implemented."",",505,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",506,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,507,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},508,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,509,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,510,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wantedAtMostX(int maxNumberOfInvocations, int foundSize) {",511,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoAssertionError(join(""Wanted at most "" + pluralize(maxNumberOfInvocations) + "" but was "" + foundSize));",512,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},513,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,514,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void misplacedArgumentMatcher(List<LocalizedMatcher> lastMatchers) {,515,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new InvalidUseOfMatchersException(join(,516,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Misplaced argument matcher detected here:"",",517,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"locationsOf(lastMatchers),",518,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",519,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You cannot use argument matchers outside of verification or stubbing."",",520,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct usage of argument matchers:"",",521,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    when(mock.get(anyInt())).thenReturn(null);"",",522,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    doThrow(new RuntimeException()).when(mock).someVoidMethod(anyObject());"",",523,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock).someMethod(contains(\""foo\""))"",",524,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",525,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also, this error might show up because you use argument matchers with methods that cannot be mocked."",",526,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode()."",",527,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"MockitoLimitations.NON_PUBLIC_PARENT,",528,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",529,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,530,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},531,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,532,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void smartNullPointerException(String invocation, Location location) {",533,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new SmartNullPointerException(join(,534,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You have a NullPointerException here:"",",535,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"new LocationImpl(),",536,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""because this method call was *not* stubbed correctly:"",",537,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"location,",538,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"invocation,",539,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",540,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,541,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},542,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,543,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void noArgumentValueWasCaptured() {,544,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,545,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""No argument value was captured!"",",546,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You might have forgotten to use argument.capture() in verify()..."",",547,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""...or you used capture() in stubbing but stubbed method was not called."",",548,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Be aware that it is recommended to use capture() only with verify()"",",549,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",550,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct argument capturing:"",",551,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);"",",552,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    verify(mock).doSomething(argument.capture());"",",553,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""    assertEquals(\""John\"", argument.getValue().getName());"",",554,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",555,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,556,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},557,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,558,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void extraInterfacesDoesNotAcceptNullParameters() {,559,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,560,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""extraInterfaces() does not accept null parameters.""",561,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,562,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},563,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,564,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void extraInterfacesAcceptsOnlyInterfaces(Class<?> wrongType) {,565,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,566,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""extraInterfaces() accepts only interfaces."",",567,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You passed following type: "" + wrongType.getSimpleName() + "" which is not an interface.""",568,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,569,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},570,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,571,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void extraInterfacesCannotContainMockedType(Class<?> wrongType) {,572,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,573,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""extraInterfaces() does not accept the same type as the mocked type."",",574,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You mocked following type: "" + wrongType.getSimpleName(),",575,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""and you passed the same very interface to the extraInterfaces()""",576,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,577,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},578,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,579,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void extraInterfacesRequiresAtLeastOneInterface() {,580,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,581,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""extraInterfaces() requires at least one interface.""",582,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,583,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},584,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,585,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void mockedTypeIsInconsistentWithSpiedInstanceType(Class<?> mockedType, Object spiedInstance) {",586,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,587,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mocked type must be the same as the type of your spied instance."",",588,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mocked type must be: "" + spiedInstance.getClass().getSimpleName() + "", but is: "" + mockedType.getSimpleName(),",589,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  //correct spying:"",",590,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  spy = mock( ->ArrayList.class<- , withSettings().spiedInstance( ->new ArrayList()<- );"",",591,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  //incorrect - types don't match:"",",592,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  spy = mock( ->List.class<- , withSettings().spiedInstance( ->new ArrayList()<- );""",593,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,594,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},595,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,596,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotCallAbstractRealMethod() {,597,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,598,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Cannot call abstract real method on java object!"",",599,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Calling real methods is only possible when mocking non abstract method."",",600,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  //correct example:"",",601,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  when(mockOfConcreteClass.nonAbstractMethod()).thenCallRealMethod();""",602,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,603,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},604,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,605,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotVerifyToString() {,606,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,607,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mockito cannot verify toString()"",",608,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""toString() is too often used behind of scenes  (i.e. during String concatenation, in IDE debugging views). "" +",609,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Verifying it may give inconsistent or hard to understand results. "" +",610,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Not to mention that verifying toString() most likely hints awkward design (hard to explain in a short exception message. Trust me...)"",",611,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However, it is possible to stub toString(). Stubbing toString() smells a bit funny but there are rare, legitimate use cases.""",612,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,613,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},614,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,615,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void moreThanOneAnnotationNotAllowed(String fieldName) {,616,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +",617,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The field '"" + fieldName + ""' has multiple Mockito annotations.\n"" +",618,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""For info how to use annotations see examples in javadoc for MockitoAnnotations class."");",619,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},620,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,621,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void unsupportedCombinationOfAnnotations(String undesiredAnnotationOne, String undesiredAnnotationTwo) {",622,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""This combination of annotations is not permitted on a single field:\n"" +",623,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""@"" + undesiredAnnotationOne + "" and @"" + undesiredAnnotationTwo);",624,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},625,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,626,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void cannotInitializeForSpyAnnotation(String fieldName, Exception details) {",627,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(join(""Cannot instantiate a @Spy for '"" + fieldName + ""' field."",",628,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You haven't provided the instance for spying at field declaration so I tried to construct the instance."",",629,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However, I failed because: "" + details.getMessage(),",630,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct usage of @Spy:"",",631,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   @Spy List mock = new LinkedList();"",",632,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   @Spy Foo foo; //only if Foo has parameterless constructor"",",633,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   //also, don't forget about MockitoAnnotations.initMocks();"",",634,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""), details);",635,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},636,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,637,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void cannotInitializeForInjectMocksAnnotation(String fieldName, Exception details) {",638,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(join(""Cannot instantiate @InjectMocks field named '"" + fieldName + ""'."",",639,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You haven't provided the instance at field declaration so I tried to construct the instance."",",640,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However, I failed because: "" + details.getMessage(),",641,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Examples of correct usage of @InjectMocks:"",",642,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   @InjectMocks Service service = new Service();"",",643,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   @InjectMocks Service service;"",",644,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   //also, don't forget about MockitoAnnotations.initMocks();"",",645,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   //and... don't forget about some @Mocks for injection :)"",",646,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""), details);",647,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},648,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,649,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void atMostAndNeverShouldNotBeUsedWithTimeout() {,650,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new FriendlyReminderException(join("""",",651,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Don't panic! I'm just a friendly reminder!"",",652,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""timeout() should not be used with atMost() or never() because..."",",653,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""...it does not make much sense - the test would have passed immediately in concurency"",",654,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""We kept this method only to avoid compilation errors when upgrading Mockito."",",655,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""In future release we will remove timeout(x).atMost(y) from the API."",",656,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""If you want to find out more please refer to issue 235"",",657,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""));",658,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},659,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,660,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void fieldInitialisationThrewException(Field field, Throwable details) {",661,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,662,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Cannot instantiate @InjectMocks field named '"" + field.getName() + ""' of type '"" + field.getType() + ""'."",",663,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You haven't provided the instance at field declaration so I tried to construct the instance."",",664,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However the constructor or the initialization block threw an exception : "" + details.getMessage(),",665,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""), details);",666,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,667,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},668,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,669,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void invocationListenerDoesNotAcceptNullParameters() {,670,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""invocationListeners() does not accept null parameters"");",671,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},672,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,673,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void invocationListenersRequiresAtLeastOneListener() {,674,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""invocationListeners() requires at least one listener"");",675,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},676,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,677,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void invocationListenerThrewException(InvocationListener listener, Throwable listenerThrowable) {",678,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(StringJoiner.join(,679,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The invocation listener with type "" + listener.getClass().getName(),",680,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""threw an exception : "" + listenerThrowable.getClass().getName() + listenerThrowable.getMessage()), listenerThrowable);",681,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},682,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,683,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void cannotInjectDependency(Field field, Object matchingMock, Exception details) {",684,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,685,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mockito couldn't inject mock dependency '"" + safelyGetMockName(matchingMock) + ""' on field "",",686,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""'"" + field + ""'"",",687,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""whose type '"" + field.getDeclaringClass().getCanonicalName() + ""' was annotated by @InjectMocks in your test."",",688,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also I failed because: "" + exceptionCauseMessageIfAvailable(details),",689,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",690,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"), details);",691,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},692,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,693,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,private String exceptionCauseMessageIfAvailable(Exception details) {,694,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,if (details.getCause() == null) {,695,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return details.getMessage();,696,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},697,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return details.getCause().getMessage();,698,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},699,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,700,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void mockedTypeIsInconsistentWithDelegatedInstanceType(Class mockedType, Object delegatedInstance) {",701,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,702,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mocked type must be the same as the type of your delegated instance."",",703,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Mocked type must be: "" + delegatedInstance.getClass().getSimpleName() + "", but is: "" + mockedType.getSimpleName(),",704,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  //correct delegate:"",",705,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  spy = mock( ->List.class<- , withSettings().delegatedInstance( ->new ArrayList()<- );"",",706,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  //incorrect - types don't match:"",",707,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""  spy = mock( ->List.class<- , withSettings().delegatedInstance( ->new HashSet()<- );""",708,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,709,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},710,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,711,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void spyAndDelegateAreMutuallyExclusive() {,712,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,713,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Settings should not define a spy instance and a delegated instance at the same time.""",714,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,715,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},716,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,717,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void invalidArgumentRangeAtIdentityAnswerCreationTime() {,718,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(join(""Invalid argument index."",",719,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The index need to be a positive number that indicates the position of the argument to return."",",720,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However it is possible to use the -1 value to indicates that the last argument should be"",",721,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""returned.""));",722,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},723,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,724,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public int invalidArgumentPositionRangeAtInvocationTime(InvocationOnMock invocation, boolean willReturnLastParameter, int argumentIndex) {",725,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(,726,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"join(""Invalid argument index for the current invocation of method : "",",727,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""" -> "" + safelyGetMockName(invocation.getMock()) + ""."" + invocation.getMethod().getName() + ""()"",",728,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",729,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,(willReturnLastParameter ?,730,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Last parameter wanted"" :",731,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Wanted parameter at position "" + argumentIndex) + "" but "" + possibleArgumentTypesOf(invocation),",732,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The index need to be a positive number that indicates a valid position of the argument in the invocation."",",733,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However it is possible to use the -1 value to indicates that the last argument should be returned."",",734,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""));",735,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},736,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,737,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,private StringBuilder possibleArgumentTypesOf(InvocationOnMock invocation) {,738,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,Class<?>[] parameterTypes = invocation.getMethod().getParameterTypes();,739,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,if (parameterTypes.length == 0) {,740,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"return new StringBuilder(""the method has no arguments.\n"");",741,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},742,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,743,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"StringBuilder stringBuilder = new StringBuilder(""the possible argument indexes for this method are :\n"");",744,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"for (int i = 0, parameterTypesLength = parameterTypes.length; i < parameterTypesLength; i++) {",745,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"stringBuilder.append(""    ["").append(i);",746,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,747,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,if (invocation.getMethod().isVarArgs() && i == parameterTypesLength - 1) {,748,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"stringBuilder.append(""+] "").append(parameterTypes[i].getComponentType().getSimpleName()).append(""  <- Vararg"").append(""\n"");",749,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,} else {,750,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"stringBuilder.append(""] "").append(parameterTypes[i].getSimpleName()).append(""\n"");",751,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},752,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},753,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return stringBuilder;,754,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},755,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,756,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void wrongTypeOfArgumentToReturn(InvocationOnMock invocation, String expectedType, Class actualType, int argumentIndex) {",757,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new WrongTypeOfReturnValue(join(,758,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The argument of type '"" + actualType.getSimpleName() + ""' cannot be returned because the following "",",759,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""method should return the type '"" + expectedType + ""'"",",760,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""" -> "" + safelyGetMockName(invocation.getMock()) + ""."" + invocation.getMethod().getName() + ""()"",",761,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",762,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""The reason for this error can be :"",",763,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""1. The wanted argument position is incorrect."",",764,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""2. The answer is used on the wrong interaction."",",765,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",766,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Position of the wanted argument is "" + argumentIndex + "" and "" + possibleArgumentTypesOf(invocation),",767,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""***"",",768,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""However if you're still unsure why you're getting above error read on."",",769,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Due to the nature of the syntax above problem might occur because:"",",770,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""1. This exception *might* occur in wrongly written multi-threaded tests."",",771,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   Please refer to Mockito FAQ on limitations of concurrency testing."",",772,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - "",",773,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method."",",774,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",775,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,776,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},777,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,778,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void defaultAnswerDoesNotAcceptNullParameter() {,779,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""defaultAnswer() does not accept null parameter"");",780,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},781,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,782,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void serializableWontWorkForObjectsThatDontImplementSerializable(Class classToMock) {,783,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,784,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You are using the setting 'withSettings().serializable()' however the type you are trying to mock '"" + classToMock.getSimpleName() + ""'"",",785,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""do not implement Serializable AND do not have a no-arg constructor."",",786,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized"",",787,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,""""",",788,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,"",",789,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""i.e. the top-most superclass has to implements Serializable."",",790,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""",791,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,792,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},793,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,794,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void delegatedMethodHasWrongReturnType(Method mockMethod, Method delegateMethod, Object mock, Object delegate) {",795,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,796,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Methods called on delegated instance must have compatible return types with the mock."",",797,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""When calling: "" + mockMethod + "" on mock: "" + safelyGetMockName(mock),",798,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""return type should be: "" + mockMethod.getReturnType().getSimpleName() + "", but was: "" + delegateMethod.getReturnType().getSimpleName(),",799,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Check that the instance passed to delegatesTo() is of the correct type or contains compatible methods"",",800,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""(delegate instance had type: "" + delegate.getClass().getSimpleName() + "")""",801,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,802,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},803,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,804,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"public void delegatedMethodDoesNotExistOnDelegate(Method mockMethod, Object mock, Object delegate) {",805,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,throw new MockitoException(join(,806,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Methods called on mock must exist in delegated instance."",",807,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""When calling: "" + mockMethod + "" on mock: "" + safelyGetMockName(mock),",808,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""no such method was found."",",809,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Check that the instance passed to delegatesTo() is of the correct type or contains compatible methods"",",810,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""(delegate instance had type: "" + delegate.getClass().getSimpleName() + "")""",811,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,));,812,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},813,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,814,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void usingConstructorWithFancySerializable(SerializableMode mode) {,815,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new MockitoException(""Mocks instantiated with constructor cannot be combined with "" + mode + "" serialization mode."");",816,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},817,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,818,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,public void cannotCreateTimerWithNegativeDurationTime(long durationMillis) {,819,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"throw new FriendlyReminderException(join("""",",820,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""Don't panic! I'm just a friendly reminder!"",",821,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""It is impossible for time to go backward, therefore..."",",822,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""You cannot put negative value of duration: ("" +  durationMillis +  "")"",",823,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""as argument of timer methods (after(), timeout())"",",824,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,"""""));",825,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},826,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,,827,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,private MockName safelyGetMockName(Object mock) {,828,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,return new MockUtil().getMockName(mock);,829,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},830,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\Reporter.java,},831,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,package org.mockito.exceptions.base;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,public class MockitoAssertionError extends AssertionError {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,private static final long serialVersionUID = 1L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,private final StackTraceElement[] unfilteredStackTrace;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,public MockitoAssertionError(String message) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,super(message);,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,unfilteredStackTrace = getStackTrace();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,filter.filter(this);,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,public StackTraceElement[] getUnfilteredStackTrace() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,return unfilteredStackTrace;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoAssertionError.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,package org.mockito.exceptions.base;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,"* Raised by mockito to emit an error either due to Mockito, or due to the User.",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,* <p>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*     The stack trace is filtered from mockito calls if you are using {@link #getStackTrace()}.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*     For debugging purpose though you can still access the full stacktrace using {@link #getUnfilteredStackTrace()}.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*     However note that other calls related to the stackTrace will refer to the filter stacktrace.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,* </p>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,public class MockitoException extends RuntimeException {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,private static final long serialVersionUID = 1L;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,private StackTraceElement[] unfilteredStackTrace;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,// TODO lazy filtered stacktrace initialization,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,"public MockitoException(String message, Throwable t) {",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,"super(message, t);",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,filterStackTrace();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,public MockitoException(String message) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,super(message);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,filterStackTrace();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,private void filterStackTrace() {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,unfilteredStackTrace = getStackTrace();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,filter.filter(this);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,public StackTraceElement[] getUnfilteredStackTrace() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,return unfilteredStackTrace;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoException.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,package org.mockito.exceptions.base;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,import java.io.ObjectStreamException;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,"* Raised by mockito to emit an error either due to Mockito, or due to the User.",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*     The stack trace is filtered from mockito calls if you are using {@link #getStackTrace()}.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*     For debugging purpose though you can still access the full stacktrace using {@link #getUnfilteredStackTrace()}.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*     However note that other calls related to the stackTrace will refer to the filter stacktrace.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,* </p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,* @since 1.10.0,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,public class MockitoSerializationIssue extends ObjectStreamException {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,private StackTraceElement[] unfilteredStackTrace;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,"public MockitoSerializationIssue(String message, Exception cause) {",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,super(message);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,initCause(cause);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,filterStackTrace();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,@Override,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,public StackTraceElement[] getStackTrace() {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,filterStackTrace();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,return super.getStackTrace();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,private void filterStackTrace() {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,unfilteredStackTrace = super.getStackTrace();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,filter.filter(this);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,public StackTraceElement[] getUnfilteredStackTrace() {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,return unfilteredStackTrace;,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\base\MockitoSerializationIssue.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,package org.mockito.exceptions.misusing;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,import org.mockito.exceptions.base.MockitoException;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,public class CannotStubVoidMethodWithReturnValue extends MockitoException {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,public CannotStubVoidMethodWithReturnValue(String message) {,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,super(message);,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,},8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotStubVoidMethodWithReturnValue.java,},9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,public class CannotVerifyStubOnlyMock extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,public CannotVerifyStubOnlyMock(String message) {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,super(message);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\CannotVerifyStubOnlyMock.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,public class FriendlyReminderException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,public FriendlyReminderException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\FriendlyReminderException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,public class InvalidUseOfMatchersException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,public InvalidUseOfMatchersException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,public InvalidUseOfMatchersException() {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,"super("""");",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\InvalidUseOfMatchersException.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,public class MissingMethodInvocationException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,public MissingMethodInvocationException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MissingMethodInvocationException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,package org.mockito.exceptions.misusing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,public class MockitoConfigurationException extends MockitoException {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,private static final long serialVersionUID = 1L;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,public MockitoConfigurationException(String message) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,super(message);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,"public MockitoConfigurationException(String message, Exception cause) {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,"super(message, cause);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\MockitoConfigurationException.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,public class NotAMockException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,public NotAMockException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NotAMockException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,public class NullInsteadOfMockException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,public NullInsteadOfMockException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\NullInsteadOfMockException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,public class UnfinishedStubbingException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,public UnfinishedStubbingException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedStubbingException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,package org.mockito.exceptions.misusing;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,public class UnfinishedVerificationException extends MockitoException {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,public UnfinishedVerificationException(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\UnfinishedVerificationException.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,package org.mockito.exceptions.misusing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,public class WrongTypeOfReturnValue extends MockitoException {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,private static final long serialVersionUID = 1L;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,public WrongTypeOfReturnValue(String message) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,super(message);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\misusing\WrongTypeOfReturnValue.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,package org.mockito.exceptions.stacktrace;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,/**,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Decides if particular StackTraceElement is excluded from the human-readable stack trace output.,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Mockito stack trace filtering mechanism uses this information.,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* <p>,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Excluding an element will make it not show in the cleaned stack trace.,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Not-excluding an element does not guarantee it will be shown,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* (e.g. it depends on the implementation of,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Mockito internal {@link org.mockito.internal.exceptions.stacktrace.StackTraceFilter}).,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* <p>,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,"* The implementations are required to be thread safe. For example, make them stateless.",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* See the default implementation: {@link org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner}.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,public interface StackTraceCleaner {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* Decides if element is excluded.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* @param candidate element of the actual stack trace,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,* @return whether the element should be excluded from cleaned stack trace.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,boolean isOut(StackTraceElement candidate);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\stacktrace\StackTraceCleaner.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,import org.mockito.internal.util.RemoveFirstLine;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,public class ArgumentsAreDifferent extends MockitoAssertionError {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,private static final long serialVersionUID = 1L;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,public ArgumentsAreDifferent(String message) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,super(message);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,@Override,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,public String toString() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,return new RemoveFirstLine().of(super.toString());,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\ArgumentsAreDifferent.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,public class NeverWantedButInvoked extends MockitoAssertionError {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,public NeverWantedButInvoked(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NeverWantedButInvoked.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,* No interactions wanted. See exception's cause for location of undesired invocation.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,public class NoInteractionsWanted extends MockitoAssertionError {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,private static final long serialVersionUID = 1L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,public NoInteractionsWanted(String message) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,super(message);,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\NoInteractionsWanted.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,package org.mockito.exceptions.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,public class SmartNullPointerException extends MockitoException {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,private static final long serialVersionUID = 1L;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,public SmartNullPointerException(String message) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,super(message);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\SmartNullPointerException.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,public class TooLittleActualInvocations extends MockitoAssertionError {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,public TooLittleActualInvocations(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooLittleActualInvocations.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,public class TooManyActualInvocations extends MockitoAssertionError {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,public TooManyActualInvocations(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\TooManyActualInvocations.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,public class VerificationInOrderFailure extends MockitoAssertionError {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,private static final long serialVersionUID = 1L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,public VerificationInOrderFailure(String message) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,super(message);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\VerificationInOrderFailure.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,package org.mockito.exceptions.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,import org.mockito.exceptions.base.MockitoAssertionError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,import org.mockito.internal.util.RemoveFirstLine;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,public class WantedButNotInvoked extends MockitoAssertionError {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,private static final long serialVersionUID = 1L;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,public WantedButNotInvoked(String message) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,super(message);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,@Override,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,public String toString() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,return new RemoveFirstLine().of(super.toString());,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\WantedButNotInvoked.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,package org.mockito.exceptions.verification.junit;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,import junit.framework.ComparisonFailure;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,import org.mockito.internal.util.RemoveFirstLine;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,public class ArgumentsAreDifferent extends ComparisonFailure {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,private static final long serialVersionUID = 1L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,private final String message;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,private final StackTraceElement[] unfilteredStackTrace;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,"public ArgumentsAreDifferent(String message, String wanted, String actual) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,"super(message, wanted, actual);",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,this.message = message;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,unfilteredStackTrace = getStackTrace();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,filter.filter(this);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,@Override,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,public String getMessage() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,return message;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,public StackTraceElement[] getUnfilteredStackTrace() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,return unfilteredStackTrace;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,@Override,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,public String toString() {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,return new RemoveFirstLine().of(super.toString());,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\ArgumentsAreDifferent.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,package org.mockito.exceptions.verification.junit;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,@Deprecated,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,* @Deprecated. This class has been moved to internal packages because it was never meant to be public.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,* If you need it for extending Mockito please let us know. You can still use {@link org.mockito.internal.junit.JUnitTool}.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,"* However, the package clearly states that the class in a part of a public API so it can change.",11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,public class JUnitTool {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,public static boolean hasJUnit() {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,return org.mockito.internal.junit.JUnitTool.hasJUnit();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,"public static AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,"return org.mockito.internal.junit.JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\exceptions\verification\junit\JUnitTool.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,package org.mockito.internal;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import java.util.LinkedList;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import java.util.List;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.InOrder;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.exceptions.Reporter;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.exceptions.base.MockitoException;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.internal.verification.InOrderContextImpl;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.internal.verification.InOrderWrapper;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.internal.verification.VerificationModeFactory;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.internal.verification.api.InOrderContext;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.invocation.Invocation;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,import org.mockito.verification.VerificationMode;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"* Allows verifying in order. This class should not be exposed, hence default access.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"public class InOrderImpl implements InOrder, InOrderContext {",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,private final MockitoCore mockitoCore = new MockitoCore();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,private final Reporter reporter = new Reporter();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,private final List<Object> mocksToBeVerifiedInOrder = new LinkedList<Object>();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,private final InOrderContext inOrderContext = new InOrderContextImpl();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public List<Object> getMocksToBeVerifiedInOrder() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,return mocksToBeVerifiedInOrder;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public InOrderImpl(List<Object> mocksToBeVerifiedInOrder) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,this.mocksToBeVerifiedInOrder.addAll(mocksToBeVerifiedInOrder);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public <T> T verify(T mock) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"return this.verify(mock, VerificationModeFactory.times(1));",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"public <T> T verify(T mock, VerificationMode mode) {",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,if (!mocksToBeVerifiedInOrder.contains(mock)) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,reporter.inOrderRequiresFamiliarMock();,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,} else if (!(mode instanceof VerificationInOrderMode)) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"throw new MockitoException(mode.getClass().getSimpleName() + "" is not implemented to work with InOrder"");",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"return mockitoCore.verify(mock, new InOrderWrapper((VerificationInOrderMode) mode, this));",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public boolean isVerified(Invocation i) {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,return inOrderContext.isVerified(i);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public void markVerified(Invocation i) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,inOrderContext.markVerified(i);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,public void verifyNoMoreInteractions() {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,"mockitoCore.verifyNoMoreInteractionsInOrder(mocksToBeVerifiedInOrder, this);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InOrderImpl.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,package org.mockito.internal;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import org.mockito.internal.stubbing.InvocationContainer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import org.mockito.invocation.MockHandler;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import org.mockito.mock.MockCreationSettings;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import org.mockito.stubbing.Answer;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,import org.mockito.stubbing.VoidMethodStubbable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,"@SuppressWarnings(""unchecked"")",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,public interface InternalMockHandler<T> extends MockHandler {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,MockCreationSettings getMockSettings();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,VoidMethodStubbable<T> voidMethodStubbable(T mock);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,void setAnswersForStubbing(List<Answer> answers);,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,InvocationContainer getInvocationContainer();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\InternalMockHandler.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,package org.mockito.internal;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import java.util.Arrays;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.InOrder;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.MockSettings;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.MockingDetails;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.exceptions.Reporter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.exceptions.misusing.NotAMockException;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.creation.MockSettingsImpl;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.invocation.finder.VerifiableInvocationsFinder;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.progress.IOngoingStubbing;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.progress.MockingProgress;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.progress.ThreadSafeMockingProgress;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.stubbing.InvocationContainer;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.stubbing.OngoingStubbingImpl;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.stubbing.StubberImpl;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.util.DefaultMockingDetails;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.util.MockUtil;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.MockAwareVerificationMode;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.VerificationDataImpl;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.VerificationModeFactory;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.api.InOrderContext;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.api.VerificationDataInOrder;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.internal.verification.api.VerificationDataInOrderImpl;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.invocation.Invocation;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.mock.MockCreationSettings;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.stubbing.Answer;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.stubbing.DeprecatedOngoingStubbing;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.stubbing.OngoingStubbing;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.stubbing.Stubber;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.stubbing.VoidMethodStubbable;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,import org.mockito.verification.VerificationMode;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"@SuppressWarnings(""unchecked"")",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public class MockitoCore {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,private final Reporter reporter = new Reporter();,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,private final MockUtil mockUtil = new MockUtil();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,private final MockingProgress mockingProgress = new ThreadSafeMockingProgress();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public boolean isTypeMockable(Class<?> typeToMock) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return mockUtil.isTypeMockable(typeToMock);,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"public <T> T mock(Class<T> typeToMock, MockSettings settings) {",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (!MockSettingsImpl.class.isInstance(settings)) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,throw new IllegalArgumentException(,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"""Unexpected implementation of '"" + settings.getClass().getCanonicalName() + ""'\n""",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"+ ""At the moment, you cannot provide your own implementations that class."");",55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,MockSettingsImpl impl = MockSettingsImpl.class.cast(settings);,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,MockCreationSettings<T> creationSettings = impl.confirm(typeToMock);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,T mock = mockUtil.createMock(creationSettings);,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"mockingProgress.mockingStarted(mock, typeToMock);",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return mock;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public IOngoingStubbing stub() {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,IOngoingStubbing stubbing = mockingProgress.pullOngoingStubbing();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (stubbing == null) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.reset();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.missingMethodInvocation();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return stubbing;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public <T> DeprecatedOngoingStubbing<T> stub(T methodCall) {,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.stubbingStarted();,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return (DeprecatedOngoingStubbing) stub();,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,77,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public <T> OngoingStubbing<T> when(T methodCall) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.stubbingStarted();,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return (OngoingStubbing) stub();,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"public <T> T verify(T mock, VerificationMode mode) {",83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (mock == null) {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.nullPassedToVerify();,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,} else if (!mockUtil.isMock(mock)) {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.notAMockPassedToVerify(mock.getClass());,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"mockingProgress.verificationStarted(new MockAwareVerificationMode(mock, mode));",89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return mock;,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public <T> void reset(T ... mocks) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.validateState();,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.reset();,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.resetOngoingStubbing();,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,for (T m : mocks) {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockUtil.resetMock(m);,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,102,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public void verifyNoMoreInteractions(Object... mocks) {,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,assertMocksNotEmpty(mocks);,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.validateState();,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,for (Object mock : mocks) {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,try {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (mock == null) {,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.nullPassedToVerifyNoMoreInteractions();,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,InvocationContainer invocations = mockUtil.getMockHandler(mock).getInvocationContainer();,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"VerificationDataImpl data = new VerificationDataImpl(invocations, null);",112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,VerificationModeFactory.noMoreInteractions().verify(data);,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,} catch (NotAMockException e) {,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.notAMockPassedToVerifyNoMoreInteractions();,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,119,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"public void verifyNoMoreInteractionsInOrder(List<Object> mocks, InOrderContext inOrderContext) {",120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.validateState();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,VerifiableInvocationsFinder finder = new VerifiableInvocationsFinder();,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"VerificationDataInOrder data = new VerificationDataInOrderImpl(inOrderContext, finder.find(mocks), null);",123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,VerificationModeFactory.noMoreInteractions().verifyInOrder(data);,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,private void assertMocksNotEmpty(Object[] mocks) {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (mocks == null || mocks.length == 0) {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.mocksHaveToBePassedToVerifyNoMoreInteractions();,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,132,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public InOrder inOrder(Object... mocks) {,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (mocks == null || mocks.length == 0) {,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.mocksHaveToBePassedWhenCreatingInOrder();,135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,for (Object mock : mocks) {,137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (mock == null) {,138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.nullPassedWhenCreatingInOrder();,139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,} else if (!mockUtil.isMock(mock)) {,140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,reporter.notAMockPassedWhenCreatingInOrder();,141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return new InOrderImpl(Arrays.asList(mocks));,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,146,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public Stubber doAnswer(Answer answer) {,147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.stubbingStarted();,148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.resetOngoingStubbing();,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return new StubberImpl().doAnswer(answer);,150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},151,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,152,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public <T> VoidMethodStubbable<T> stubVoid(T mock) {,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,InternalMockHandler<T> handler = mockUtil.getMockHandler(mock);,154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.stubbingStarted();,155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return handler.voidMethodStubbable(mock);,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,158,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public void validateMockitoUsage() {,159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,mockingProgress.validateState();,160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,162,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,/**,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,* For testing purposes only. Is not the part of main API.,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,* @return last invocation,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,*/,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public Invocation getLastInvocation() {,167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,OngoingStubbingImpl ongoingStubbing = ((OngoingStubbingImpl) mockingProgress.pullOngoingStubbing());,168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,List<Invocation> allInvocations = ongoingStubbing.getRegisteredInvocations();,169,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return allInvocations.get(allInvocations.size()-1);,170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},171,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,172,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public Object[] ignoreStubs(Object... mocks) {,173,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,for (Object m : mocks) {,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,InvocationContainer invocationContainer = new MockUtil().getMockHandler(m).getInvocationContainer();,175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,List<Invocation> ins = invocationContainer.getInvocations();,176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,for (Invocation in : ins) {,177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,if (in.stubInfo() != null) {,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,in.ignoreForVerification();,179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},180,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,return mocks;,183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},184,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,,185,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,public MockingDetails mockingDetails(Object toInspect) {,186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,"return new DefaultMockingDetails(toInspect, new MockUtil());",187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\MockitoCore.java,},189,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,import org.mockito.ArgumentCaptor;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,import org.mockito.Captor;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,import org.mockito.exceptions.base.MockitoException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,import org.mockito.internal.util.reflection.GenericMaster;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,import java.lang.reflect.Field;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,* Instantiate {@link ArgumentCaptor} a field annotated by &#64;Captor.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,public class CaptorAnnotationProcessor implements FieldAnnotationProcessor<Captor> {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,"public Object process(Captor annotation, Field field) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,Class<?> type = field.getType();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,if (!ArgumentCaptor.class.isAssignableFrom(type)) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,"throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" + ""Field: '""",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,"+ field.getName() + ""' has wrong type\n""",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,"+ ""For info how to use @Captor annotations see examples in javadoc for MockitoAnnotations class."");",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,Class cls = new GenericMaster().getGenericType(field);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,return ArgumentCaptor.forClass(cls);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\CaptorAnnotationProcessor.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import org.mockito.configuration.IMockitoConfiguration;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import org.mockito.exceptions.misusing.MockitoConfigurationException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import org.mockito.plugins.MockMaker;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import org.mockito.plugins.StackTraceCleanerProvider;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.io.*;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.net.URL;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.util.ArrayList;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.util.Collections;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.util.Enumeration;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,import java.util.List;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* Loads configuration or extension points available in the classpath.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* <ul>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     <li>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         Can load the mockito configuration. The user who want to provide his own mockito configuration,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         should write the class <code>org.mockito.configuration.MockitoConfiguration</code> that implements,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         {@link IMockitoConfiguration}. For example :,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"*         <pre class=""code""><code class=""java"">",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* package org.mockito.configuration;,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* //...,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* public class MockitoConfiguration implements IMockitoConfiguration {,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     boolean enableClassCache() { return false; },35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     // ...,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* },38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     </code></pre>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     </li>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     <li>,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         Can load available mockito extensions. Currently Mockito only have one extension point the,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         {@link MockMaker}. This extension point allows a user to provide his own bytecode engine to build mocks.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"*         <br>Suppose you wrote an extension to create mocks with some <em>Awesome</em> library, in order to tell",44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         Mockito to use it you need to put in your classpath,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"*         <ol style=""list-style-type: lower-alpha"">",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"*             <li>The implementation itself, for example <code>org.awesome.mockito.AwesomeMockMaker</code>.</li>",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*             <li>A file named <code>org.mockito.plugins.MockMaker</code> in a folder named,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"*             <code>mockito-extensions</code>, the content of this file need to have <strong>one</strong> line with",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*             the qualified name <code>org.awesome.mockito.AwesomeMockMaker</code>.</li>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*         </ol>,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*     </li>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* </ul>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* </p>,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,public class ClassPathLoader {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"public static final String MOCKITO_CONFIGURATION_CLASS_NAME = ""org.mockito.configuration.MockitoConfiguration"";",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,/**,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,* @return configuration loaded from classpath or null,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,*/,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"@SuppressWarnings({""unchecked""})",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,public IMockitoConfiguration loadConfiguration() {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,//Trying to get config from classpath,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,Class configClass;,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,try {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,configClass = (Class) Class.forName(MOCKITO_CONFIGURATION_CLASS_NAME);,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,} catch (ClassNotFoundException e) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"//that's ok, it means there is no global config, using default one.",70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,return null;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,,73,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,try {,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,return (IMockitoConfiguration) configClass.newInstance();,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,} catch (ClassCastException e) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"throw new MockitoConfigurationException(""MockitoConfiguration class must implement "" + IMockitoConfiguration.class.getName() + "" interface."", e);",77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,} catch (Exception e) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,"throw new MockitoConfigurationException(""Unable to instantiate "" + MOCKITO_CONFIGURATION_CLASS_NAME +"" class. Does it have a safe, no-arg constructor?"", e);",79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\ClassPathLoader.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.Captor;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.Mock;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.MockitoAnnotations;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.configuration.AnnotationEngine;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.exceptions.Reporter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.exceptions.base.MockitoException;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import org.mockito.internal.util.reflection.FieldSetter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import java.lang.annotation.Annotation;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import java.lang.reflect.Field;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import java.util.HashMap;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,import java.util.Map;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,* Initializes fields annotated with &#64;{@link org.mockito.Mock} or &#64;{@link org.mockito.Captor}.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"* The {@link #process(Class, Object)} method implementation <strong>does not</strong> process super classes!",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,* @see MockitoAnnotations,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"@SuppressWarnings(""unchecked"")",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,public class DefaultAnnotationEngine implements AnnotationEngine {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"private final Map<Class<? extends Annotation>, FieldAnnotationProcessor<?>> annotationProcessorMap = new HashMap<Class<? extends Annotation>, FieldAnnotationProcessor<?>>();",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,public DefaultAnnotationEngine() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"registerAnnotationProcessor(Mock.class, new MockAnnotationProcessor());",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"registerAnnotationProcessor(MockitoAnnotations.Mock.class, new MockitoAnnotationsMockAnnotationProcessor());",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"registerAnnotationProcessor(Captor.class, new CaptorAnnotationProcessor());",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,/* (non-Javadoc),38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"* @see org.mockito.AnnotationEngine#createMockFor(java.lang.annotation.Annotation, java.lang.reflect.Field)",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,*/,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"@SuppressWarnings(""deprecation"")",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"public Object createMockFor(Annotation annotation, Field field) {",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"return forAnnotation(annotation).process(annotation, field);",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,private <A extends Annotation> FieldAnnotationProcessor<A> forAnnotation(A annotation) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,if (annotationProcessorMap.containsKey(annotation.annotationType())) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,return (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,return new FieldAnnotationProcessor<A>() {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"public Object process(A annotation, Field field) {",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,return null;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,};,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"private <A extends Annotation> void registerAnnotationProcessor(Class<A> annotationClass, FieldAnnotationProcessor<A> fieldAnnotationProcessor) {",57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"annotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"public void process(Class<?> clazz, Object testInstance) {",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,Field[] fields = clazz.getDeclaredFields();,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,for (Field field : fields) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,boolean alreadyAssigned = false;,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,for(Annotation annotation : field.getAnnotations()) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"Object mock = createMockFor(annotation, field);",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,if (mock != null) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"throwIfAlreadyAssigned(field, alreadyAssigned);",68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,alreadyAssigned = true;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,try {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"new FieldSetter(testInstance, field).set(mock);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,} catch (Exception e) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"+ annotation, e);",74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,80,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,"void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {",81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,if (alreadyAssigned) {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultAnnotationEngine.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,import org.mockito.internal.configuration.injection.MockInjection;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,import java.lang.reflect.Field;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,import java.util.Set;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,* Inject mock/spies dependencies for fields annotated with &#064;InjectMocks,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,* <p/>,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,* See {@link org.mockito.MockitoAnnotations},15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,public class DefaultInjectionEngine {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,"public void injectMocksOnFields(Set<Field> needingInjection, Set<Object> mocks, Object testClassInstance) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,"MockInjection.onFields(needingInjection, testClassInstance)",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,.withMocks(mocks),21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,.tryConstructorInjection(),22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,.tryPropertyOrFieldInjection(),23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,.handleSpyAnnotation(),24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,.apply();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\DefaultInjectionEngine.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,import java.lang.annotation.Annotation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,import java.lang.reflect.Field;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,* Simple annotation processor interface.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,public interface FieldAnnotationProcessor<A extends Annotation> {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,"Object process(A annotation, Field field);",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\FieldAnnotationProcessor.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import org.mockito.ReturnValues;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import org.mockito.configuration.AnnotationEngine;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import org.mockito.configuration.DefaultMockitoConfiguration;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import org.mockito.configuration.IMockitoConfiguration;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import org.mockito.stubbing.Answer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,import java.io.Serializable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,* Thread-safe wrapper on user-defined org.mockito.configuration.MockitoConfiguration implementation,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,"@SuppressWarnings(""deprecation"")//suppressed until ReturnValues are removed",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,"public class GlobalConfiguration implements IMockitoConfiguration, Serializable {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,private static final long serialVersionUID = -2860353062105505938L;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,private static final ThreadLocal<IMockitoConfiguration> GLOBAL_CONFIGURATION = new ThreadLocal<IMockitoConfiguration>();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,//back door for testing,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,IMockitoConfiguration getIt() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public GlobalConfiguration() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,//Configuration should be loaded only once but I cannot really test it,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,if (GLOBAL_CONFIGURATION.get() == null) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,GLOBAL_CONFIGURATION.set(createConfig());,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,private IMockitoConfiguration createConfig() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,IMockitoConfiguration defaultConfiguration = new DefaultMockitoConfiguration();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,IMockitoConfiguration config = new ClassPathLoader().loadConfiguration();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,if (config != null) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return config;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,} else {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return defaultConfiguration;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public static void validate() {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,new GlobalConfiguration();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public ReturnValues getReturnValues() {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get().getReturnValues();,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public AnnotationEngine getAnnotationEngine() {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get().getAnnotationEngine();,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public boolean cleansStackTrace() {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get().cleansStackTrace();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public boolean enableClassCache() {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get().enableClassCache();,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,public Answer<Object> getDefaultAnswer() {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,return GLOBAL_CONFIGURATION.get().getDefaultAnswer();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\GlobalConfiguration.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import org.mockito.*;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import org.mockito.configuration.AnnotationEngine;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import org.mockito.internal.configuration.injection.scanner.InjectMocksScanner;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import org.mockito.internal.configuration.injection.scanner.MockScanner;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import java.lang.annotation.Annotation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import java.lang.reflect.Field;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import java.util.HashSet;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import java.util.Set;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,import static org.mockito.internal.util.collections.Sets.newMockSafeHashSet;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* See {@link MockitoAnnotations},20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"@SuppressWarnings({""deprecation"", ""unchecked""})",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,public class InjectingAnnotationEngine implements AnnotationEngine {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,private final AnnotationEngine delegate = new DefaultAnnotationEngine();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,private final AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,/***,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* Create a mock using {@link DefaultAnnotationEngine},28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* @see org.mockito.internal.configuration.DefaultAnnotationEngine,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"* @see org.mockito.configuration.AnnotationEngine#createMockFor(java.lang.annotation.Annotation, java.lang.reflect.Field)",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*/,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,@Deprecated,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"public Object createMockFor(Annotation annotation, Field field) {",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"return delegate.createMockFor(annotation, field);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,/**,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"* Process the fields of the test instance and create Mocks, Spies, Captors and inject them on fields",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* annotated &#64;InjectMocks.,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* <p>,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* This code process the test class and the super classes.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* <ol>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"* <li>First create Mocks, Spies, Captors.</li>",45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* <li>Then try to inject them.</li>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* </ol>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* @param clazz Not used,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"* @param testInstance The instance of the test, should not be null.",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"* @see org.mockito.configuration.AnnotationEngine#process(Class, Object)",52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*/,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"public void process(Class<?> clazz, Object testInstance) {",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"processIndependentAnnotations(testInstance.getClass(), testInstance);",55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"processInjectMocks(testInstance.getClass(), testInstance);",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"private void processInjectMocks(final Class<?> clazz, final Object testInstance) {",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,Class<?> classContext = clazz;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,while (classContext != Object.class) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,injectMocks(testInstance);,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,classContext = classContext.getSuperclass();,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"private void processIndependentAnnotations(final Class<?> clazz, final Object testInstance) {",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,Class<?> classContext = clazz;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,while (classContext != Object.class) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"//this will create @Mocks, @Captors, etc:",70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"delegate.process(classContext, testInstance);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,//this will create @Spies:,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"spyAnnotationEngine.process(classContext, testInstance);",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,classContext = classContext.getSuperclass();,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,/**,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* Initializes mock/spies dependencies for objects annotated with,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* &#064;InjectMocks for given testClassInstance.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* <p>,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* See examples in javadoc for {@link MockitoAnnotations} class.,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,* @param testClassInstance,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"*            Test class, usually <code>this</code>",87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,*/,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,public void injectMocks(final Object testClassInstance) {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,Class<?> clazz = testClassInstance.getClass();,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,Set<Field> mockDependentFields = new HashSet<Field>();,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,Set<Object> mocks = newMockSafeHashSet();,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,while (clazz != Object.class) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,new InjectMocksScanner(clazz).addTo(mockDependentFields);,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"new MockScanner(testClassInstance, clazz).addPreparedMocks(mocks);",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,clazz = clazz.getSuperclass();,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,"new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance);",100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,,102,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\InjectingAnnotationEngine.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,import org.mockito.Mock;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,import org.mockito.MockSettings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,import org.mockito.Mockito;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,import java.lang.reflect.Field;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,* Instantiates a mock on a field annotated by {@link Mock},14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,public class MockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,"public Object process(Mock annotation, Field field) {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,MockSettings mockSettings = Mockito.withSettings();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,if (annotation.extraInterfaces().length > 0) { // never null,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,mockSettings.extraInterfaces(annotation.extraInterfaces());,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,"if ("""".equals(annotation.name())) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,mockSettings.name(field.getName());,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,} else {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,mockSettings.name(annotation.name());,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,if(annotation.serializable()){,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,mockSettings.serializable();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,// see @Mock answer default value,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,mockSettings.defaultAnswer(annotation.answer());,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,"return Mockito.mock(field.getType(), mockSettings);",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockAnnotationProcessor.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,import org.mockito.MockitoAnnotations.Mock;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,import java.lang.reflect.Field;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,* Instantiates a mock on a field annotated by {@link Mock},13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,"@SuppressWarnings(""deprecation"")",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,public class MockitoAnnotationsMockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,"public Object process(Mock annotation, Field field) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,"return Mockito.mock(field.getType(), field.getName());",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\MockitoAnnotationsMockAnnotationProcessor.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,package org.mockito.internal.configuration;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import org.mockito.*;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import org.mockito.configuration.AnnotationEngine;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import org.mockito.exceptions.Reporter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import org.mockito.exceptions.base.MockitoException;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import org.mockito.internal.util.MockUtil;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import java.lang.annotation.Annotation;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import java.lang.reflect.Constructor;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import java.lang.reflect.Field;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import java.lang.reflect.InvocationTargetException;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import java.lang.reflect.Modifier;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,import static org.mockito.Mockito.withSettings;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,/**,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* Process fields annotated with &#64;Spy.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p/>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* Will try transform the field in a spy as with <code>Mockito.spy()</code>.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* </p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p/>,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"* If the field is not initialized, will try to initialize it, with a no-arg constructor.",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* </p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p/>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"* If the field is also annotated with the <strong>compatible</strong> &#64;InjectMocks then the field will be ignored,",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* The injection engine will handle this specific case.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* </p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,* <p/>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"* <p>This engine will fail, if the field is also annotated with incompatible Mockito annotations.",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,*/,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"@SuppressWarnings({""unchecked""})",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,public class SpyAnnotationEngine implements AnnotationEngine {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"public Object createMockFor(Annotation annotation, Field field) {",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,return null;,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"@SuppressWarnings(""deprecation"") // for MockitoAnnotations.Mock",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"public void process(Class<?> context, Object testInstance) {",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Field[] fields = context.getDeclaredFields();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,for (Field field : fields) {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"assertNoIncompatibleAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,field.setAccessible(true);,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Object instance;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,try {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,instance = field.get(testInstance);,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"assertNotInterface(instance, field.getType());",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (new MockUtil().isMock(instance)) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,// instance has been spied earlier,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,// for example happens when MockitoAnnotations.initMocks is called two times.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Mockito.reset(instance);,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,} else if (instance != null) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"field.set(testInstance, Mockito.mock(instance.getClass(), withSettings()",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.spiedInstance(instance),63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.defaultAnswer(Mockito.CALLS_REAL_METHODS),64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.name(field.getName())));,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,} else {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"field.set(testInstance, newSpyInstance(testInstance, field));",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,} catch (Exception e) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"throw new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName() + ""'.\n"" + e.getMessage(), e);",70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"private static void assertNotInterface(Object testInstance, Class<?> type) {",76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,type = testInstance != null? testInstance.getClass() : type;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (type.isInterface()) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"throw new MockitoException(""Type '"" + type.getSimpleName() + ""' is an interface and it cannot be spied on."");",79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"private static Object newSpyInstance(Object testInstance, Field field)",83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"throws InstantiationException, IllegalAccessException, InvocationTargetException {",84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,MockSettings settings = withSettings(),85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.defaultAnswer(Mockito.CALLS_REAL_METHODS),86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.name(field.getName());,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Class<?> type = field.getType();,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (type.isInterface()) {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"return Mockito.mock(type, settings.useConstructor());",90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (!Modifier.isStatic(type.getModifiers())) {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Class<?> enclosing = type.getEnclosingClass();,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (enclosing != null) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (!enclosing.isInstance(testInstance)) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"throw new MockitoException(""@Spy annotation can only initialize inner classes declared in the test. """,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"+ ""Inner class: '"" + type.getSimpleName() + ""', """,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"+ ""outer class: '"" + enclosing.getSimpleName() + ""'."");",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"return Mockito.mock(type, settings",100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.useConstructor(),101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.outerInstance(testInstance));,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,Constructor<?> constructor;,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,try {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,constructor = type.getDeclaredConstructor();,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,} catch (NoSuchMethodException e) {,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"throw new MockitoException(""Please ensure that the type '"" + type.getSimpleName() + ""' has 0-arg constructor."");",109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,111,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (Modifier.isPrivate(constructor.getModifiers())) {,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,constructor.setAccessible(true);,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"return Mockito.mock(type, settings",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,.spiedInstance(constructor.newInstance()));,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,} else {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"return Mockito.mock(type, settings.useConstructor());",117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,,120,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,//TODO duplicated elsewhere,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"void assertNoIncompatibleAnnotations(Class annotation, Field field, Class... undesiredAnnotations) {",122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,for (Class u : undesiredAnnotations) {,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,if (field.isAnnotationPresent(u)) {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,"new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());",125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\SpyAnnotationEngine.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,package org.mockito.internal.configuration.injection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import org.mockito.exceptions.base.MockitoException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import org.mockito.internal.util.reflection.FieldInitializationReport;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import org.mockito.internal.util.reflection.FieldInitializer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import org.mockito.internal.util.reflection.FieldInitializer.ConstructorArgumentResolver;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import java.lang.reflect.Field;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import java.lang.reflect.InvocationTargetException;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import java.util.ArrayList;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import java.util.List;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,import java.util.Set;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* Injection strategy based on constructor.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* The strategy will search for the constructor with most parameters,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* and try to resolve mocks by type.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* </p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* <blockquote>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,"* TODO on missing mock type, shall it abandon or create ""noname"" mocks.",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* TODO and what if the arg type is not mockable.,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* </blockquote>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* <p>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* For now the algorithm tries to create anonymous mocks if an argument type is missing.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* If not possible the algorithm abandon resolution.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,* </p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,public class ConstructorInjection extends MockInjectionStrategy {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,private ConstructorArgumentResolver argResolver;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,public ConstructorInjection() { },42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,// visible for testing,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,ConstructorInjection(ConstructorArgumentResolver argResolver) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,this.argResolver = argResolver;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,"public boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates) {",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,try {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,SimpleArgumentResolver simpleArgumentResolver = new SimpleArgumentResolver(mockCandidates);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,"FieldInitializationReport report = new FieldInitializer(fieldOwner, field, simpleArgumentResolver).initialize();",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,return report.fieldWasInitializedUsingContructorArgs();,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,} catch (MockitoException e) {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,if(e.getCause() instanceof InvocationTargetException) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,Throwable realCause = e.getCause().getCause();,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,"new Reporter().fieldInitialisationThrewException(field, realCause);",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,// other causes should be fine,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,return false;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,/**,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,"* Returns mocks that match the argument type, if not possible assigns null.",67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,*/,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,static class SimpleArgumentResolver implements ConstructorArgumentResolver {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,final Set<Object> objects;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,public SimpleArgumentResolver(Set<Object> objects) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,this.objects = objects;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,public Object[] resolveTypeInstances(Class<?>... argTypes) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,List<Object> argumentInstances = new ArrayList<Object>(argTypes.length);,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,for (Class<?> argType : argTypes) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,argumentInstances.add(objectThatIsAssignableFrom(argType));,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,return argumentInstances.toArray();,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,83,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,private Object objectThatIsAssignableFrom(Class<?> argType) {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,for (Object object : objects) {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,if(argType.isAssignableFrom(object.getClass())) return object;,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,return null;,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\ConstructorInjection.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,package org.mockito.internal.configuration.injection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import java.lang.reflect.Field;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import java.util.Collections;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import java.util.HashSet;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import java.util.Set;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import static org.mockito.internal.util.Checks.checkItemsNotNull;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import static org.mockito.internal.util.Checks.checkNotNull;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,import static org.mockito.internal.util.collections.Sets.newMockSafeHashSet;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Internal injection configuration utility.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Allow the user of this class to configure the way the injection of mocks will happen.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* </p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public class MockInjection {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,/**,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Create a new configuration setup for a field,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @param field Field needing mock injection,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @param ofInstance Instance owning the <code>field</code>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @return New configuration builder,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*/,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"public static OngoingMockInjection onField(Field field, Object ofInstance) {",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"return new OngoingMockInjection(field, ofInstance);",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,/**,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Create a new configuration setup for fields,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @param fields Fields needing mock injection,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @param ofInstance Instance owning the <code>field</code>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* @return New configuration builder,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*/,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"public static OngoingMockInjection onFields(Set<Field> fields, Object ofInstance) {",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"return new OngoingMockInjection(fields, ofInstance);",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,/**,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,* Ongoing configuration of the mock injector.,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,*/,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public static class OngoingMockInjection {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,private final Set<Field> fields = new HashSet<Field>();,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,private final Set<Object> mocks = newMockSafeHashSet();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,private final Object fieldOwner;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,private final MockInjectionStrategy injectionStrategies = MockInjectionStrategy.nop();,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,private final MockInjectionStrategy postInjectionStrategies = MockInjectionStrategy.nop();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"private OngoingMockInjection(Field field, Object fieldOwner) {",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"this(Collections.singleton(field), fieldOwner);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"this.fieldOwner = checkNotNull(fieldOwner, ""fieldOwner"");",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"this.fields.addAll(checkItemsNotNull(fields, ""fields""));",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public OngoingMockInjection withMocks(Set<Object> mocks) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"this.mocks.addAll(checkNotNull(mocks, ""mocks""));",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,return this;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public OngoingMockInjection tryConstructorInjection() {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,injectionStrategies.thenTry(new ConstructorInjection());,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,return this;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public OngoingMockInjection tryPropertyOrFieldInjection() {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,injectionStrategies.thenTry(new PropertyAndSetterInjection());,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,return this;,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public OngoingMockInjection handleSpyAnnotation() {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,postInjectionStrategies.thenTry(new SpyOnInjectedFieldsHandler());,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,return this;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,public void apply() {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,for (Field field : fields) {,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"injectionStrategies.process(field, fieldOwner, mocks);",92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,"postInjectionStrategies.process(field, fieldOwner, mocks);",93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjection.java,},97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,package org.mockito.internal.configuration.injection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,import java.lang.reflect.Field;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,import java.util.Set;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* Injector strategy contract,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,public abstract class MockInjectionStrategy {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* NOP Strategy that will always try the next strategy.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,public static final MockInjectionStrategy nop() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,return new MockInjectionStrategy() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"protected boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,return false;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,};,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,private MockInjectionStrategy nextStrategy;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* Enqueue next injection strategy.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* <p>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* The implementation should take care of the actual calling if required.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* </p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param strategy Queued strategy.,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @return The passed strategy instance to allow chaining.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,public MockInjectionStrategy thenTry(MockInjectionStrategy strategy) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,if(nextStrategy != null) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,nextStrategy.thenTry(strategy);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,} else {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,nextStrategy = strategy;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,return strategy;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/**,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* Actually inject mockCandidates on field.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* <p>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* Actual algorithm is defined in the implementations of {@link #processInjection(Field, Object, Set)}.",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* However if injection occurred successfully, the process should return <code>true</code>,",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* and <code>false</code> otherwise.,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* </p>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* <p>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* The code takes care of calling the next strategy if available and if of course if required,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* </p>,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param onField Field needing injection.,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param fieldOwnedBy The owning instance of the field.,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* @param mockCandidates A set of mock candidate, that might be injected.",64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* @return <code>true</code> if successful, <code>false</code> otherwise.",65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"public boolean process(Field onField, Object fieldOwnedBy, Set<Object> mockCandidates) {",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"if(processInjection(onField, fieldOwnedBy, mockCandidates)) {",68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,return true;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"return relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,73,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,/**,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* Process actual injection.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* <p>,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* Don't call this method directly, instead call {@link #process(Field, Object, Set)}",78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* </p>,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param field Field needing injection,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param fieldOwner Field owner instance.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,* @param mockCandidates Pool of mocks to inject.,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"* @return <code>true</code> if injection occurred, <code>false</code> otherwise",84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,*/,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"protected abstract boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates);",86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,,87,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"private boolean relayProcessToNextStrategy(Field field, Object fieldOwner, Set<Object> mockCandidates) {",88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,"return nextStrategy != null && nextStrategy.process(field, fieldOwner, mockCandidates);",89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\MockInjectionStrategy.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,package org.mockito.internal.configuration.injection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.exceptions.base.MockitoException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.configuration.injection.filter.MockCandidateFilter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.util.collections.ListUtil;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.util.reflection.FieldInitializationReport;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.util.reflection.FieldInitializer;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import org.mockito.internal.util.reflection.SuperTypesLastSorter;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import java.lang.reflect.Field;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import java.lang.reflect.InvocationTargetException;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import java.lang.reflect.Modifier;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import java.util.*;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,import static org.mockito.internal.util.collections.Sets.newMockSafeHashSet;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,/**,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"* Inject mocks using first setters then fields, if no setters available.",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* <p>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* <u>Algorithm :<br></u>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* for each field annotated by @InjectMocks,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*   <ul>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*   <li>initialize field annotated by @InjectMocks,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*   <li>for each fields of a class in @InjectMocks type hierarchy,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*     <ul>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*     <li>make a copy of mock candidates,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"*     <li>order fields from sub-type to super-type, then by field name",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*     <li>for the list of fields in a class try two passes of :,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*         <ul>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*             <li>find mock candidate by type,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*             <li>if more than <b>*one*</b> candidate find mock candidate on name,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*             <li>if one mock candidate then,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*                 <ul>,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*                     <li>set mock by property setter if possible,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*                     <li>else set mock by field injection,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*                 </ul>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*             <li>remove mock from mocks copy (mocks are just injected once in a class),47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*             <li>remove injected field from list of class fields,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*         </ul>,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"*     <li>else don't fail, user will then provide dependencies",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*     </ul>,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*   </ul>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* </p>,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* <p>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"* <u>Note:</u> If the field needing injection is not initialized, the strategy tries",56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* to create one using a no-arg constructor of the field type.,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,* </p>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,*/,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,public class PropertyAndSetterInjection extends MockInjectionStrategy {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,private final ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,public boolean isOut(Field object) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,};,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"public boolean processInjection(Field injectMocksField, Object injectMocksFieldOwner, Set<Object> mockCandidates) {",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,// Set<Object> mocksToBeInjected = new HashSet<Object>(mockCandidates);,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,// for each field in the class hierarchy,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,boolean injectionOccurred = false;,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,Class<?> fieldClass = report.fieldClass();,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,Object fieldInstanceNeedingInjection = report.fieldInstance();,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,while (fieldClass != Object.class) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);",80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,fieldClass = fieldClass.getSuperclass();,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return injectionOccurred;,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,85,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"private FieldInitializationReport initializeInjectMocksField(Field field, Object fieldOwner) {",86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,FieldInitializationReport report = null;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,try {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"report = new FieldInitializer(fieldOwner, field).initialize();",89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,} catch (MockitoException e) {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,if(e.getCause() instanceof InvocationTargetException) {,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,Throwable realCause = e.getCause().getCause();,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"new Reporter().fieldInitialisationThrewException(field, realCause);",93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);",95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return report; // never null,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,100,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"private boolean injectMockCandidates(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object instance) {",101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,boolean injectionOccurred = false;,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,// pass 1,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,// pass 2,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return injectionOccurred;,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"private boolean injectMockCandidatesOnFields(Set<Object> mocks, Object instance, boolean injectionOccurred, List<Field> orderedInstanceFields) {",111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,for (Iterator<Field> it = orderedInstanceFields.iterator(); it.hasNext(); ) {,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,Field field = it.next();,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,if (injected != null) {,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,injectionOccurred |= true;,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,mocks.remove(injected);,117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,it.remove();,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return injectionOccurred;,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,private List<Field> orderedInstanceFieldsFrom(Class<?> awaitingInjectionClazz) {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,"declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);",126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,,127,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,return new SuperTypesLastSorter().sort(declaredFields);,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\PropertyAndSetterInjection.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,package org.mockito.internal.configuration.injection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.Spy;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.exceptions.base.MockitoException;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.internal.util.MockUtil;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.internal.util.reflection.FieldReader;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import org.mockito.internal.util.reflection.FieldSetter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import java.lang.reflect.Field;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import java.util.Set;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,import static org.mockito.Mockito.withSettings;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* Handler for field annotated with &#64;InjectMocks and &#64;Spy.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* The handler assumes that field initialization AND injection already happened.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"* So if the field is still null, then nothing will happen there.",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,* </p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,public class SpyOnInjectedFieldsHandler extends MockInjectionStrategy {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,@Override,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"protected boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates) {",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"FieldReader fieldReader = new FieldReader(fieldOwner, field);",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,// TODO refoctor : code duplicated in SpyAnnotationEngine,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,if(!fieldReader.isNull() && field.isAnnotationPresent(Spy.class)) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,try {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,Object instance = fieldReader.read();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,if (new MockUtil().isMock(instance)) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,// A. instance has been spied earlier,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,// B. protect against multiple use of MockitoAnnotations.initMocks(),40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,Mockito.reset(instance);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,} else {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"new FieldSetter(fieldOwner, field).set(",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"Mockito.mock(instance.getClass(), withSettings()",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,.spiedInstance(instance),45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,.defaultAnswer(Mockito.CALLS_REAL_METHODS),46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,.name(field.getName())),47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,);,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,} catch (Exception e) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,"throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,return false;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\SpyOnInjectedFieldsHandler.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,package org.mockito.internal.configuration.injection.filter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,import org.mockito.internal.util.reflection.BeanPropertySetter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,import org.mockito.internal.util.reflection.FieldSetter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,import java.lang.reflect.Field;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,import java.util.Collection;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* This node returns an actual injecter which will be either :,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* <ul>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* <li>an {@link OngoingInjecter} that do nothing if a candidate couldn't be found</li>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* <li>an {@link OngoingInjecter} that will try to inject the candidate trying first the property setter then if not possible try the field access</li>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,* </ul>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,public class FinalMockCandidateFilter implements MockCandidateFilter {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,"public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,if(mocks.size() == 1) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,final Object matchingMock = mocks.iterator().next();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,return new OngoingInjecter() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,public Object thenInject() {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,try {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,"if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,"new FieldSetter(fieldInstance, field).set(matchingMock);",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,} catch (RuntimeException e) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,"new Reporter().cannotInjectDependency(field, matchingMock, e);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,return matchingMock;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,};,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,return new OngoingInjecter() {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,public Object thenInject() {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,return null;,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,};,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\FinalMockCandidateFilter.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,package org.mockito.internal.configuration.injection.filter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,import java.util.Collection;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,public interface MockCandidateFilter {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,OngoingInjecter filterCandidate(,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,"Collection<Object> mocks,",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,"Field fieldToBeInjected,",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,Object fieldInstance,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\MockCandidateFilter.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,package org.mockito.internal.configuration.injection.filter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,import org.mockito.internal.util.MockUtil;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,import java.lang.reflect.Field;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,import java.util.ArrayList;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,import java.util.Collection;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,public class NameBasedCandidateFilter implements MockCandidateFilter {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,private final MockCandidateFilter next;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,private final MockUtil mockUtil = new MockUtil();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,public NameBasedCandidateFilter(MockCandidateFilter next) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,this.next = next;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,"public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,List<Object> mockNameMatches = new ArrayList<Object>();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,if(mocks.size() > 1) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,for (Object mock : mocks) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,if (field.getName().equals(mockUtil.getMockName(mock).toString())) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,mockNameMatches.add(mock);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,"return next.filterCandidate(mockNameMatches, field, fieldInstance);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,"return next.filterCandidate(mocks, field, fieldInstance);",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\NameBasedCandidateFilter.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,package org.mockito.internal.configuration.injection.filter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* Allow the ongoing injection of a mock candidate.,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,public interface OngoingInjecter {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* Inject the mock.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* Please check the actual implementation.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,* </p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,"* @return the mock that was injected, <code>null</code> otherwise.",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,Object thenInject();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\OngoingInjecter.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,package org.mockito.internal.configuration.injection.filter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,import java.util.ArrayList;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,import java.util.Collection;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,public class TypeBasedCandidateFilter implements MockCandidateFilter {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,MockCandidateFilter next;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,public TypeBasedCandidateFilter(MockCandidateFilter next) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,this.next = next;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,"public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,List<Object> mockTypeMatches = new ArrayList<Object>();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,for (Object mock : mocks) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,if (field.getType().isAssignableFrom(mock.getClass())) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,mockTypeMatches.add(mock);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,"return next.filterCandidate(mockTypeMatches, field, fieldInstance);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\filter\TypeBasedCandidateFilter.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,package org.mockito.internal.configuration.injection.scanner;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import org.mockito.Captor;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import org.mockito.InjectMocks;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import org.mockito.Mock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import org.mockito.MockitoAnnotations;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import org.mockito.exceptions.Reporter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import java.lang.reflect.Field;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import java.util.HashSet;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,import java.util.Set;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* Scan field for injection.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*/,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,"@SuppressWarnings(""deprecation"")",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,public class InjectMocksScanner {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,private final Class<?> clazz;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* Create a new InjectMocksScanner for the given clazz on the given instance,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* @param clazz    Current class in the hierarchy of the test,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,public InjectMocksScanner(Class<?> clazz) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,this.clazz = clazz;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,/**,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* Add the fields annotated by @{@link InjectMocks},35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* @param mockDependentFields Set of fields annotated by  @{@link InjectMocks},37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*/,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,public void addTo(Set<Field> mockDependentFields) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,mockDependentFields.addAll(scan());,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,/**,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* Scan fields annotated by &#064;InjectMocks,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,* @return Fields that depends on Mock,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,*/,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,private Set<Field> scan() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,Set<Field> mockDependentFields = new HashSet<Field>();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,Field[] fields = clazz.getDeclaredFields();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,for (Field field : fields) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,if (null != field.getAnnotation(InjectMocks.class)) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,"assertNoAnnotations(field, Mock.class, MockitoAnnotations.Mock.class, Captor.class);",53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,mockDependentFields.add(field);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,return mockDependentFields;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,"void assertNoAnnotations(final Field field, final Class... annotations) {",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,for (Class annotation : annotations) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,if (field.isAnnotationPresent(annotation)) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,"new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), InjectMocks.class.getSimpleName());",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\InjectMocksScanner.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,package org.mockito.internal.configuration.injection.scanner;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import org.mockito.Mock;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import org.mockito.MockitoAnnotations;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import org.mockito.Spy;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import org.mockito.internal.util.MockUtil;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import org.mockito.internal.util.reflection.FieldReader;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import java.lang.reflect.Field;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import java.util.Set;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,import static org.mockito.internal.util.collections.Sets.newMockSafeHashSet;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"* Scan mocks, and prepare them if needed.",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,public class MockScanner {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private final MockUtil mockUtil = new MockUtil();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private final Object instance;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private final Class<?> clazz;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,/**,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* Creates a MockScanner.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* @param instance The test instance,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* @param clazz    The class in the type hierarchy of this instance.,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"public MockScanner(Object instance, Class<?> clazz) {",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,this.instance = instance;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,this.clazz = clazz;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,/**,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* Add the scanned and prepared mock instance to the given collection.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* <p>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* The preparation of mocks consists only in defining a MockName if not already set.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* </p>,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* @param mocks Set of mocks,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*/,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,public void addPreparedMocks(Set<Object> mocks) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,mocks.addAll(scan());,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,/**,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* Scan and prepare mocks for the given <code>testClassInstance</code> and <code>clazz</code> in the type hierarchy.,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,* @return A prepared set of mock,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,*/,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private Set<Object> scan() {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,Set<Object> mocks = newMockSafeHashSet();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,for (Field field : clazz.getDeclaredFields()) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,// mock or spies only,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"FieldReader fieldReader = new FieldReader(instance, field);",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"Object mockInstance = preparedMock(fieldReader.read(), field);",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,if (mockInstance != null) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,mocks.add(mockInstance);,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return mocks;,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"private Object preparedMock(Object instance, Field field) {",69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,if (isAnnotatedByMockOrSpy(field)) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return instance;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,} else if (isMockOrSpy(instance)) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,"mockUtil.maybeRedefineMockName(instance, field.getName());",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return instance;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return null;,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private boolean isAnnotatedByMockOrSpy(Field field) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return null != field.getAnnotation(Spy.class),80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,|| null != field.getAnnotation(Mock.class),81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,|| null != field.getAnnotation(MockitoAnnotations.Mock.class);,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,private boolean isMockOrSpy(Object instance) {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,return mockUtil.isMock(instance),86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,|| mockUtil.isSpy(instance);,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\injection\scanner\MockScanner.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,import org.mockito.plugins.PluginSwitch;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,class DefaultPluginSwitch implements PluginSwitch {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,public boolean isEnabled(String pluginClassName) {,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,return true;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,},8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\DefaultPluginSwitch.java,},9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,import org.mockito.internal.util.io.IOUtil;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,import java.io.IOException;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,import java.io.InputStream;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,import java.io.Reader;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,class PluginFileReader {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,String readPluginClass(InputStream input) throws IOException {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,for(String line: IOUtil.readLines(input)) {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,String stripped = stripCommentAndWhitespace(line);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,if (stripped.length() > 0) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,return stripped;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,return null;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,private static String stripCommentAndWhitespace(String line) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,int hash = line.indexOf('#');,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,if (hash != -1) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,"line = line.substring(0, hash);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,return line.trim();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFileReader.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,import org.mockito.exceptions.base.MockitoException;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,import org.mockito.internal.util.io.IOUtil;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,import org.mockito.plugins.PluginSwitch;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,import java.io.InputStream;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,import java.net.URL;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,class PluginFinder {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,private final PluginSwitch pluginSwitch;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,public PluginFinder(PluginSwitch pluginSwitch) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,this.pluginSwitch = pluginSwitch;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,String findPluginClass(Iterable<URL> resources) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,for (URL resource : resources) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,InputStream s = null;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,try {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,s = resource.openStream();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,String pluginClassName = new PluginFileReader().readPluginClass(s);,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,if (pluginClassName == null) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,//For backwards compatibility,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,//If the resource does not have plugin class name we're ignoring it,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,continue;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,if (!pluginSwitch.isEnabled(pluginClassName)) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,continue;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,return pluginClassName;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,} catch(Exception e) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,"throw new MockitoException(""Problems reading plugin implementation from: "" + resource, e);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,} finally {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,IOUtil.closeQuietly(s);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,return null;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginFinder.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import org.mockito.exceptions.base.MockitoException;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import org.mockito.exceptions.misusing.MockitoConfigurationException;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import org.mockito.internal.util.collections.Iterables;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import org.mockito.plugins.PluginSwitch;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import java.io.IOException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import java.net.URL;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,import java.util.Enumeration;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,class PluginLoader {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,private final PluginSwitch pluginSwitch;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,public PluginLoader(PluginSwitch pluginSwitch) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,this.pluginSwitch = pluginSwitch;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"* Scans the classpath for given pluginType. If not found, default class is used.",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"<T> T loadPlugin(Class<T> pluginType, String defaultPluginClassName) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,T plugin = loadImpl(pluginType);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,if (plugin != null) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,return plugin;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,try {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,// Default implementation. Use our own ClassLoader instead of the context,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"// ClassLoader, as the default implementation is assumed to be part of",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,// Mockito and may not be available via the context ClassLoader.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,return pluginType.cast(Class.forName(defaultPluginClassName).newInstance());,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,} catch (Exception e) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"throw new MockitoException(""Internal problem occurred, please report it. "" +",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"""Mockito is unable to load the default implementation of class that is a part of Mockito distribution. "" +",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"""Failed to load "" + pluginType, e);",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,/**,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,* Equivalent to {@link java.util.ServiceLoader#load} but without requiring,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,* Java 6 / Android 2.3 (Gingerbread).,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,<T> T loadImpl(Class<T> service) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,ClassLoader loader = Thread.currentThread().getContextClassLoader();,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,if (loader == null) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,loader = ClassLoader.getSystemClassLoader();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,Enumeration<URL> resources;,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,try {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"resources = loader.getResources(""mockito-extensions/"" + service.getName());",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,} catch (IOException e) {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"throw new MockitoException(""Failed to load "" + service, e);",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,try {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,String foundPluginClass = new PluginFinder(pluginSwitch).findPluginClass(Iterables.toIterable(resources));,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,if (foundPluginClass != null) {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,Class<?> pluginClass = loader.loadClass(foundPluginClass);,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,Object plugin = pluginClass.newInstance();,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,return service.cast(plugin);,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,return null;,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,} catch (Exception e) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,throw new MockitoConfigurationException(,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,"""Failed to load "" + service + "" implementation declared in "" + resources, e);",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginLoader.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,import org.mockito.plugins.MockMaker;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,import org.mockito.plugins.PluginSwitch;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,import org.mockito.plugins.StackTraceCleanerProvider;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,class PluginRegistry {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,private final PluginSwitch pluginSwitch,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,"= new PluginLoader(new DefaultPluginSwitch()).loadPlugin(PluginSwitch.class, DefaultPluginSwitch.class.getName());",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,private final MockMaker mockMaker,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,"= new PluginLoader(pluginSwitch).loadPlugin(MockMaker.class, ""org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker"");",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,private final StackTraceCleanerProvider stackTraceCleanerProvider,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,"= new PluginLoader(pluginSwitch).loadPlugin(StackTraceCleanerProvider.class, ""org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"");",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,* The implementation of the stack trace cleaner,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,StackTraceCleanerProvider getStackTraceCleanerProvider() {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,//TODO we should throw some sensible exception if this is null.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,return stackTraceCleanerProvider;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,/**,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,* Returns the implementation of the mock maker available for the current runtime.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,*,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,* <p>Returns {@link org.mockito.internal.creation.cglib.CglibMockMaker} if no,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,* {@link org.mockito.plugins.MockMaker} extension exists or is visible in the current classpath.</p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,MockMaker getMockMaker() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,return mockMaker;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\PluginRegistry.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,package org.mockito.internal.configuration.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,import org.mockito.plugins.MockMaker;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,import org.mockito.plugins.StackTraceCleanerProvider;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,/**,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,* Access to Mockito behavior that can be reconfigured by plugins,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,*/,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,public class Plugins {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,private static PluginRegistry registry = new PluginRegistry();,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,* The implementation of the stack trace cleaner,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,public static StackTraceCleanerProvider getStackTraceCleanerProvider() {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,return registry.getStackTraceCleanerProvider();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,* Returns the implementation of the mock maker available for the current runtime.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,* <p>Returns default mock maker if no,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,* {@link org.mockito.plugins.MockMaker} extension exists or is visible in the current classpath.</p>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,*/,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,public static MockMaker getMockMaker() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,return registry.getMockMaker();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\configuration\plugins\Plugins.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,package org.mockito.internal.creation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,import org.mockito.internal.invocation.MockitoMethod;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,import java.lang.reflect.Method;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,import java.lang.reflect.Modifier;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public class DelegatingMethod implements MockitoMethod {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,private final Method method;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public DelegatingMethod(Method method) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,"assert method != null : ""Method cannot be null"";",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,this.method = method;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public Class<?>[] getExceptionTypes() {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.getExceptionTypes();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public Method getJavaMethod() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public String getName() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.getName();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public Class<?>[] getParameterTypes() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.getParameterTypes();,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public Class<?> getReturnType() {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.getReturnType();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public boolean isVarArgs() {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.isVarArgs();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public boolean isAbstract() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return (method.getModifiers() & Modifier.ABSTRACT) != 0;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,/**,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,"* @return True if the input object is a DelegatingMethod which has an internal Method which is equal to the internal Method of this DelegatingMethod,",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,* or if the input object is a Method which is equal to the internal Method of this DelegatingMethod.,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,*/,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,@Override,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public boolean equals(Object o) {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,if (this == o) {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return true;,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,if (o instanceof DelegatingMethod) {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,DelegatingMethod that = (DelegatingMethod) o;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.equals(that.method);,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,} else {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.equals(o);,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,@Override,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,public int hashCode() {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,return method.hashCode();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\DelegatingMethod.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,package org.mockito.internal.creation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.MockSettings;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.internal.creation.settings.CreationSettings;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.internal.debugging.VerboseMockInvocationLogger;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.internal.util.MockCreationValidator;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.internal.util.MockNameImpl;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.listeners.InvocationListener;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.mock.MockCreationSettings;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.mock.MockName;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.mock.SerializableMode;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import org.mockito.stubbing.Answer;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import java.io.Serializable;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import java.util.HashSet;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import java.util.List;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import java.util.Set;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,import static org.mockito.internal.util.collections.Sets.newSet;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"@SuppressWarnings(""unchecked"")",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"public class MockSettingsImpl<T> extends CreationSettings<T> implements MockSettings, MockCreationSettings<T> {",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,private static final long serialVersionUID = 4475297236197939569L;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,private boolean useConstructor;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,private Object outerClassInstance;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings serializable() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return serializable(SerializableMode.BASIC);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings serializable(SerializableMode mode) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.serializableMode = mode;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings extraInterfaces(Class... extraInterfaces) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (extraInterfaces == null || extraInterfaces.length == 0) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().extraInterfacesRequiresAtLeastOneInterface();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,for (Class i : extraInterfaces) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (i == null) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().extraInterfacesDoesNotAcceptNullParameters();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,} else if (!i.isInterface()) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().extraInterfacesAcceptsOnlyInterfaces(i);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.extraInterfaces = newSet(extraInterfaces);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockName getMockName() {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return mockName;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public Set<Class> getExtraInterfaces() {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return extraInterfaces;,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public Object getSpiedInstance() {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return spiedInstance;,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings name(String name) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.name = name;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings spiedInstance(Object spiedInstance) {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.spiedInstance = spiedInstance;,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings defaultAnswer(Answer defaultAnswer) {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.defaultAnswer = defaultAnswer;,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (defaultAnswer == null) {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().defaultAnswerDoesNotAcceptNullParameter();,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,87,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public Answer<Object> getDefaultAnswer() {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return defaultAnswer;,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettingsImpl stubOnly() {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.stubOnly = true;,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,96,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings useConstructor() {,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.useConstructor = true;,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings outerInstance(Object outerClassInstance) {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.outerClassInstance = outerClassInstance;,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,106,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public boolean isUsingConstructor() {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return useConstructor;,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public Object getOuterClassInstance() {,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return outerClassInstance;,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,114,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public boolean isStubOnly() {,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this.stubOnly;,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings verboseLogging() {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (!invocationListenersContainsType(VerboseMockInvocationLogger.class)) {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,invocationListeners(new VerboseMockInvocationLogger());,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,125,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockSettings invocationListeners(InvocationListener... listeners) {,126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (listeners == null || listeners.length == 0) {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().invocationListenersRequiresAtLeastOneListener();,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,for (InvocationListener listener : listeners) {,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (listener == null) {,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,new Reporter().invocationListenerDoesNotAcceptNullParameters();,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,this.invocationListeners.add(listener);,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this;,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,138,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,private boolean invocationListenersContainsType(Class<?> clazz) {,139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,for (InvocationListener listener : invocationListeners) {,140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if (listener.getClass().equals(clazz)) {,141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return true;,142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return false;,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,147,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public List<InvocationListener> getInvocationListeners() {,148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return this.invocationListeners;,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,151,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public boolean hasInvocationListeners() {,152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return !invocationListeners.isEmpty();,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,155,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public Class<T> getTypeToMock() {,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return typeToMock;,157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,159,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,public MockCreationSettings<T> confirm(Class<T> typeToMock) {,160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"return validatedSettings(typeToMock, this);",161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,163,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"private static <T> CreationSettings<T> validatedSettings(Class<T> typeToMock, CreationSettings<T> source) {",164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,MockCreationValidator validator = new MockCreationValidator();,165,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,166,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,validator.validateType(typeToMock);,167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"validator.validateExtraInterfaces(typeToMock, source.getExtraInterfaces());",168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"validator.validateMockedType(typeToMock, source.getSpiedInstance());",169,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,170,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,//TODO SF - add this validation and also add missing coverage,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"//        validator.validateDelegatedInstance(classToMock, settings.getDelegatedInstance());",172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,173,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"validator.validateSerializable(typeToMock, source.isSerializable());",174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"validator.validateConstructorUse(source.isUsingConstructor(), source.getSerializableMode());",175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,176,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,//TODO SF - I don't think we really need CreationSettings type,177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,CreationSettings<T> settings = new CreationSettings<T>(source);,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,"settings.setMockName(new MockNameImpl(source.getName(), typeToMock));",179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,settings.setTypeToMock(typeToMock);,180,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,settings.setExtraInterfaces(prepareExtraInterfaces(source));,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return settings;,182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,184,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,private static Set<Class> prepareExtraInterfaces(CreationSettings settings) {,185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,Set<Class> interfaces = new HashSet<Class>(settings.getExtraInterfaces());,186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,if(settings.isSerializable()) {,187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,interfaces.add(Serializable.class);,188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},189,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,return interfaces;,190,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},191,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,192,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,},193,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\MockSettingsImpl.java,,194,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,package org.mockito.internal.creation.instance;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,import static org.mockito.internal.util.StringJoiner.join;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,import java.lang.reflect.Constructor;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,import org.mockito.internal.util.reflection.AccessibilityChanger;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,public class ConstructorInstantiator implements Instantiator {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,private final Object outerClassInstance;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,public ConstructorInstantiator(Object outerClassInstance) {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,this.outerClassInstance = outerClassInstance;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,public <T> T newInstance(Class<T> cls) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,if (outerClassInstance == null) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return noArgConstructor(cls);,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"return withParams(cls, outerClassInstance);",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"private static <T> T withParams(Class<T> cls, Object... params) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,try {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,//this is kind of over-engineered because we don't need to support more params,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"//however, I know we will be needing it :)",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,for (Constructor<?> constructor : cls.getDeclaredConstructors()) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,Class<?>[] types = constructor.getParameterTypes();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"if (paramsMatch(types, params)) {",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"return invokeConstructor(constructor, params);",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,} catch (Exception e) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"throw paramsException(cls, e);",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"throw paramsException(cls, null);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"@SuppressWarnings(""unchecked"")",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"private static <T> T invokeConstructor(Constructor<?> constructor, Object... params) throws java.lang.InstantiationException, IllegalAccessException, java.lang.reflect.InvocationTargetException {",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,AccessibilityChanger accessibility = new AccessibilityChanger();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,accessibility.enableAccess(constructor);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return (T) constructor.newInstance(params);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"private static <T> InstantiationException paramsException(Class<T> cls, Exception e) {",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return new InstantiationException(join(,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"""Unable to create instance of '"" + cls.getSimpleName() + ""'."",",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"""Please ensure that the outer instance has correct type and that the target class has 0-arg constructor."")",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,", e);",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"private static boolean paramsMatch(Class<?>[] types, Object[] params) {",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,if (params.length != types.length) {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return false;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,for (int i = 0; i < params.length; i++) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,if (!types[i].isInstance(params[i])) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return false;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return true;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,private static <T> T noArgConstructor(Class<T> cls) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,try {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,return invokeConstructor(cls.getDeclaredConstructor());,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,} catch (Throwable t) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,throw new InstantiationException(join(,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"""Unable to create instance of '"" + cls.getSimpleName() + ""'."",",69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,"""Please ensure it has 0-arg constructor which invokes cleanly.""),",70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,t);,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ConstructorInstantiator.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,package org.mockito.internal.creation.instance;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,import org.mockito.exceptions.base.MockitoException;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,public class InstantiationException extends MockitoException {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,"public InstantiationException(String message, Throwable cause) {",7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,"super(message, cause);",8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,},9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiationException.java,},10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,package org.mockito.internal.creation.instance;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,/**,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,* Provides instances of classes.,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,*/,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,public interface Instantiator {,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,* Creates instance of given class,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,*/,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,<T> T newInstance(Class<T> cls) throws InstantiationException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\Instantiator.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,package org.mockito.internal.creation.instance;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,import org.mockito.mock.MockCreationSettings;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,public class InstantiatorProvider {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,private final static Instantiator INSTANCE = new ObjenesisInstantiator();,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,public Instantiator getInstantiator(MockCreationSettings settings) {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,if (settings.isUsingConstructor()) {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,return new ConstructorInstantiator(settings.getOuterClassInstance());,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,} else {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,return INSTANCE;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\InstantiatorProvider.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,package org.mockito.internal.creation.instance;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,import org.mockito.internal.configuration.GlobalConfiguration;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,import org.objenesis.ObjenesisStd;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,class ObjenesisInstantiator implements Instantiator {,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,"//TODO: in order to provide decent exception message when objenesis is not found,",8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,//have a constructor in this class that tries to instantiate ObjenesisStd and if it fails then show decent exception that dependency is missing,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,//TODO: for the same reason catch and give better feedback when hamcrest core is not found.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,private final ObjenesisStd objenesis = new ObjenesisStd(new GlobalConfiguration().enableClassCache());,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,public <T> T newInstance(Class<T> cls) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,return objenesis.newInstance(cls);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\instance\ObjenesisInstantiator.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,package org.mockito.internal.creation.settings;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import org.mockito.listeners.InvocationListener;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import org.mockito.mock.MockCreationSettings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import org.mockito.mock.MockName;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import org.mockito.mock.SerializableMode;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import org.mockito.stubbing.Answer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import java.io.Serializable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import java.util.ArrayList;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import java.util.LinkedHashSet;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import java.util.List;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,import java.util.Set;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,"* by Szczepan Faber, created at: 4/9/12",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,"public class CreationSettings<T> implements MockCreationSettings<T>, Serializable {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,private static final long serialVersionUID = -6789800638070123629L;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected Class<T> typeToMock;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected Set<Class> extraInterfaces = new LinkedHashSet<Class>();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected String name;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected Object spiedInstance;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected Answer<Object> defaultAnswer;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected MockName mockName;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected SerializableMode serializableMode = SerializableMode.NONE;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected List<InvocationListener> invocationListeners = new ArrayList<InvocationListener>();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,protected boolean stubOnly;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,private boolean useConstructor;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,private Object outerClassInstance;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public CreationSettings() {},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,"@SuppressWarnings(""unchecked"")",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public CreationSettings(CreationSettings copy) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.typeToMock = copy.typeToMock;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.extraInterfaces = copy.extraInterfaces;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.name = copy.name;,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.spiedInstance = copy.spiedInstance;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.defaultAnswer = copy.defaultAnswer;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.mockName = copy.mockName;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.serializableMode = copy.serializableMode;,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.invocationListeners = copy.invocationListeners;,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.stubOnly = copy.stubOnly;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.useConstructor = copy.isUsingConstructor();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.outerClassInstance = copy.getOuterClassInstance();,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public Class<T> getTypeToMock() {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return typeToMock;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public CreationSettings<T> setTypeToMock(Class<T> typeToMock) {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.typeToMock = typeToMock;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return this;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public Set<Class> getExtraInterfaces() {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return extraInterfaces;,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public CreationSettings<T> setExtraInterfaces(Set<Class> extraInterfaces) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.extraInterfaces = extraInterfaces;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return this;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public String getName() {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return name;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public Object getSpiedInstance() {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return spiedInstance;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public Answer<Object> getDefaultAnswer() {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return defaultAnswer;,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,83,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public MockName getMockName() {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return mockName;,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,87,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public CreationSettings<T> setMockName(MockName mockName) {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,this.mockName = mockName;,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return this;,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public boolean isSerializable() {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return serializableMode != SerializableMode.NONE;,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,96,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public SerializableMode getSerializableMode() {,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return serializableMode;,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,100,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public List<InvocationListener> getInvocationListeners() {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return invocationListeners;,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,104,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public boolean isUsingConstructor() {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return useConstructor;,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,108,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public Object getOuterClassInstance() {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return outerClassInstance;,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,112,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,public boolean isStubOnly() {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,return stubOnly;,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,,116,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\settings\CreationSettings.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,package org.mockito.internal.creation.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,//TODO SF Replace with RealMethod and get rid of (possibly).,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,public interface MockitoMethodProxy {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,"Object invokeSuper(Object target, Object[] arguments) throws Throwable;",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\MockitoMethodProxy.java,},10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,package org.mockito.internal.creation.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,import static java.lang.Thread.*;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,import java.util.ArrayList;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,* Inspired on jMock (thanks jMock guys!!!),13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,public class SearchingClassLoader extends ClassLoader {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,private final ClassLoader nextToSearch;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"public SearchingClassLoader(ClassLoader parent, ClassLoader nextToSearch) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,super(parent);,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,this.nextToSearch = nextToSearch;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,public static ClassLoader combineLoadersOf(Class<?>... classes) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"return combineLoadersOf(classes[0], classes);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"private static ClassLoader combineLoadersOf(Class<?> first, Class<?>... others) {",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,List<ClassLoader> loaders = new ArrayList<ClassLoader>();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"addIfNewElement(loaders, first.getClassLoader());",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,for (Class<?> c : others) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"addIfNewElement(loaders, c.getClassLoader());",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,// To support Eclipse Plug-in tests.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"// In an Eclipse plug-in, we will not be on the system class loader",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,// but in the class loader of the plug-in.,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,//,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,// Note: I've been unable to reproduce the error in the test suite.,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"addIfNewElement(loaders, SearchingClassLoader.class.getClassLoader());",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,// To support the Maven Surefire plugin.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,// Note: I've been unable to reproduce the error in the test suite.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"addIfNewElement(loaders, currentThread().getContextClassLoader());",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,//Had to comment that out because it didn't work with in-container Spring tests,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"//addIfNewElement(loaders, ClassLoader.getSystemClassLoader());",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,return combine(loaders);,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,private static ClassLoader combine(List<ClassLoader> parentLoaders) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,ClassLoader loader = parentLoaders.get(parentLoaders.size()-1);,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,for (int i = parentLoaders.size()-2; i >= 0; i--) {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"loader = new SearchingClassLoader(parentLoaders.get(i), loader);",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,return loader;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,"private static void addIfNewElement(List<ClassLoader> loaders, ClassLoader c) {",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,if (c != null && !loaders.contains(c)) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,loaders.add(c);,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,@Override,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,protected Class<?> findClass(String name) throws ClassNotFoundException {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,if (nextToSearch != null) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,return nextToSearch.loadClass(name);,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,} else {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,return super.findClass(name); // will throw ClassNotFoundException,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\creation\util\SearchingClassLoader.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,public interface FindingsListener {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,"void foundStubCalledWithDifferentArgs(Invocation unused, InvocationMatcher unstubbed);",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,void foundUnusedStub(Invocation unused);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,void foundUnstubbed(InvocationMatcher unstubbed);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\FindingsListener.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,import org.mockito.invocation.Location;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,public class Localized<T> {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,private final T object;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,private final Location location;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,public Localized(T object) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,this.object = object;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,location = new LocationImpl();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,public T getObject() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,return object;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,public Location getLocation() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,return location;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\Localized.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,import org.mockito.internal.exceptions.stacktrace.StackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,import org.mockito.invocation.Location;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,"public class LocationImpl implements Location, Serializable {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,private static final long serialVersionUID = -9054861157390980624L;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,private final Throwable stackTraceHolder;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,private final StackTraceFilter stackTraceFilter;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,public LocationImpl() {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,this(new StackTraceFilter());,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,public LocationImpl(StackTraceFilter stackTraceFilter) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,this.stackTraceFilter = stackTraceFilter;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,stackTraceHolder = new Throwable();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,@Override,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,public String toString() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,"StackTraceElement[] filtered = stackTraceFilter.filter(stackTraceHolder.getStackTrace(), false);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,if (filtered.length == 0) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,"return ""-> at <<unknown line>>"";",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,"return ""-> at "" + filtered[0].toString();",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LocationImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,import org.mockito.internal.util.MockitoLogger;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,import static org.mockito.internal.util.StringJoiner.join;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,public class LoggingListener implements FindingsListener {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,private final boolean warnAboutUnstubbed;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,private final MockitoLogger logger;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"public LoggingListener(boolean warnAboutUnstubbed, MockitoLogger logger) {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,this.warnAboutUnstubbed = warnAboutUnstubbed;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,this.logger = logger;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"public void foundStubCalledWithDifferentArgs(Invocation unused, InvocationMatcher unstubbed) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,logger.log(join(,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,""" *** Stubbing warnings from Mockito: *** "",",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,""""",",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"""stubbed with those args here   "" + unused.getLocation(),",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"""BUT called with different args "" + unstubbed.getInvocation().getLocation(),",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"""""));",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,public void foundUnusedStub(Invocation unused) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"logger.log(""This stubbing was never used   "" + unused.getLocation() + ""\n"");",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,public void foundUnstubbed(InvocationMatcher unstubbed) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,if (warnAboutUnstubbed) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,logger.log(join(,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"""This method was not stubbed "",",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"unstubbed,",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"unstubbed.getInvocation().getLocation(),",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,"""""));",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,public boolean isWarnAboutUnstubbed() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,return warnAboutUnstubbed;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,public MockitoLogger getLogger() {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,return logger;,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\LoggingListener.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import org.mockito.MockitoDebugger;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import org.mockito.internal.invocation.UnusedStubsFinder;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import org.mockito.internal.invocation.finder.AllInvocationsFinder;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,import static java.util.Arrays.asList;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,public class MockitoDebuggerImpl implements MockitoDebugger {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,private final AllInvocationsFinder allInvocationsFinder = new AllInvocationsFinder();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,private final UnusedStubsFinder unusedStubsFinder = new UnusedStubsFinder();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,public String printInvocations(Object ... mocks) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"String out = """";",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,List<Invocation> invocations = allInvocationsFinder.find(asList(mocks));,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""********************************"");",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""*** Mockito interactions log ***"");",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""********************************"");",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,for(Invocation i:invocations) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,out += line(i.toString());,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line("" invoked: "" + i.getLocation());",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,if (i.stubInfo() != null) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line("" stubbed: "" + i.stubInfo().stubbedAt().toString());",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,invocations = unusedStubsFinder.find(asList(mocks));,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,if (invocations.isEmpty()) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,return print(out);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""********************************"");",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""***       Unused stubs       ***"");",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line(""********************************"");",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,for(Invocation i:invocations) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,out += line(i.toString());,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"out += line("" stubbed: "" + i.getLocation());",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,return print(out);,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,private String line(String text) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,"return text + ""\n"";",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,private String print(String out) {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,System.out.println(out);,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,return out;,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\MockitoDebuggerImpl.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,package org.mockito.internal.debugging;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,import java.io.PrintStream;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,import org.mockito.invocation.DescribedInvocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,import org.mockito.listeners.InvocationListener;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,import org.mockito.listeners.MethodInvocationReport;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,* Logs all invocations to standard output.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,* Used for debugging interactions with a mock.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,public class VerboseMockInvocationLogger implements InvocationListener {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,// visible for testing,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,final PrintStream printStream;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private int mockInvocationsCounter = 0;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,public VerboseMockInvocationLogger() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,this(System.out);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,public VerboseMockInvocationLogger(PrintStream printStream) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,this.printStream = printStream;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,public void reportInvocation(MethodInvocationReport methodInvocationReport) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printHeader();,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printStubInfo(methodInvocationReport);,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printInvocation(methodInvocationReport.getInvocation());,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printReturnedValueOrThrowable(methodInvocationReport);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printFooter();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printReturnedValueOrThrowable(MethodInvocationReport methodInvocationReport) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,if (methodInvocationReport.threwException()) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"String message = methodInvocationReport.getThrowable().getMessage() == null ? """" : "" with message "" + methodInvocationReport.getThrowable().getMessage();",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printlnIndented(""has thrown: "" + methodInvocationReport.getThrowable().getClass() + message);",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,} else {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"String type = (methodInvocationReport.getReturnedValue() == null) ? """" : "" ("" + methodInvocationReport.getReturnedValue().getClass().getName() + "")"";",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printlnIndented(""has returned: \"""" + methodInvocationReport.getReturnedValue() + ""\"""" + type);",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printStubInfo(MethodInvocationReport methodInvocationReport) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,if (methodInvocationReport.getLocationOfStubbing() != null) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printlnIndented(""stubbed: "" + methodInvocationReport.getLocationOfStubbing());",53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printHeader() {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,mockInvocationsCounter++;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printStream.println(""############ Logging method invocation #"" + mockInvocationsCounter + "" on mock/spy ########"");",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printInvocation(DescribedInvocation invocation) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,printStream.println(invocation.toString());,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"//        printStream.println(""Handling method call on a mock/spy."");",64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printlnIndented(""invoked: "" + invocation.getLocation().toString());",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printFooter() {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printStream.println("""");",69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,private void printlnIndented(String message) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,"printStream.println(""   "" + message);",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\VerboseMockInvocationLogger.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.invocation.UnusedStubsFinder;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.invocation.finder.AllInvocationsFinder;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.listeners.CollectCreatedMocks;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.progress.MockingProgress;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.internal.progress.ThreadSafeMockingProgress;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import org.mockito.invocation.Invocation;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import java.util.LinkedList;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,import java.util.List;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,"@SuppressWarnings(""unchecked"")",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,public class WarningsCollector {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,List createdMocks;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,public WarningsCollector() {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,createdMocks = new LinkedList();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,MockingProgress progress = new ThreadSafeMockingProgress();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,progress.setListener(new CollectCreatedMocks(createdMocks));,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,public String getWarnings() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,List<Invocation> unused = new UnusedStubsFinder().find(createdMocks);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,List<Invocation> all = new AllInvocationsFinder().find(createdMocks);,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,List<InvocationMatcher> allInvocationMatchers = InvocationMatcher.createFrom(all);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,"String warnings = new WarningsPrinterImpl(unused, allInvocationMatchers, false).print();",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,return warnings;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsCollector.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,import java.util.Iterator;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,import java.util.LinkedList;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,public class WarningsFinder {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,private final List<Invocation> baseUnusedStubs;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,private final List<InvocationMatcher> baseAllInvocations;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,"public WarningsFinder(List<Invocation> unusedStubs, List<InvocationMatcher> allInvocations) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,this.baseUnusedStubs = unusedStubs;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,this.baseAllInvocations = allInvocations;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,public void find(FindingsListener findingsListener) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,List<Invocation> unusedStubs = new LinkedList(this.baseUnusedStubs);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,List<InvocationMatcher> allInvocations = new LinkedList(this.baseAllInvocations);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,Iterator<Invocation> unusedIterator = unusedStubs.iterator();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,while(unusedIterator.hasNext()) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,Invocation unused = unusedIterator.next();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,Iterator<InvocationMatcher> unstubbedIterator = allInvocations.iterator();,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,while(unstubbedIterator.hasNext()) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,InvocationMatcher unstubbed = unstubbedIterator.next();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,if(unstubbed.hasSimilarMethod(unused)) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,"findingsListener.foundStubCalledWithDifferentArgs(unused, unstubbed);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,unusedIterator.remove();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,unstubbedIterator.remove();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,for (Invocation i : unusedStubs) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,findingsListener.foundUnusedStub(i);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,for (InvocationMatcher i : allInvocations) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,findingsListener.foundUnstubbed(i);,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsFinder.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,package org.mockito.internal.debugging;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,import org.mockito.internal.util.MockitoLogger;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,import org.mockito.internal.util.SimpleMockitoLogger;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,public class WarningsPrinterImpl {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,private final boolean warnAboutUnstubbed;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,private final WarningsFinder finder;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> unstubbedInvocations) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"this(unusedStubs, unstubbedInvocations, false);",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"public WarningsPrinterImpl(List<Invocation> unusedStubs, List<InvocationMatcher> allInvocations, boolean warnAboutUnstubbed) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"this(warnAboutUnstubbed, new WarningsFinder(unusedStubs, allInvocations));",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"WarningsPrinterImpl(boolean warnAboutUnstubbed, WarningsFinder finder) {",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,this.warnAboutUnstubbed = warnAboutUnstubbed;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,this.finder = finder;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,public void print(final MockitoLogger logger) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,"finder.find(new LoggingListener(warnAboutUnstubbed, logger));",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,public String print() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,SimpleMockitoLogger logger = new SimpleMockitoLogger();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,this.print(logger);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,return logger.getLoggedInfo();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\debugging\WarningsPrinterImpl.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,package org.mockito.internal.exceptions;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,public class ExceptionIncludingMockitoWarnings extends RuntimeException {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,private static final long serialVersionUID = -5925150219446765679L;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,"public ExceptionIncludingMockitoWarnings(String message, Throwable throwable) {",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,"super(message, throwable);",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,},12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\ExceptionIncludingMockitoWarnings.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,package org.mockito.internal.exceptions;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,public class MockitoLimitations {,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,"public final static String NON_PUBLIC_PARENT = ""Mocking methods declared on non-public parent classes is not supported."";",5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\MockitoLimitations.java,},7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,package org.mockito.internal.exceptions;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,import org.mockito.invocation.DescribedInvocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,public interface VerificationAwareInvocation extends DescribedInvocation {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,boolean isVerified();,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\VerificationAwareInvocation.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,package org.mockito.internal.exceptions.stacktrace;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,import org.mockito.configuration.IMockitoConfiguration;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,import org.mockito.internal.configuration.GlobalConfiguration;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,public class ConditionalStackTraceFilter implements Serializable {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,private static final long serialVersionUID = -8085849703510292641L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,private final IMockitoConfiguration config = new GlobalConfiguration();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,private final StackTraceFilter filter = new StackTraceFilter();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,public void filter(Throwable throwable) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,if (!config.cleansStackTrace()) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,return;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,"StackTraceElement[] filtered = filter.filter(throwable.getStackTrace(), true);",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,throwable.setStackTrace(filtered);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\ConditionalStackTraceFilter.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,package org.mockito.internal.exceptions.stacktrace;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,import org.mockito.exceptions.stacktrace.StackTraceCleaner;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"* by Szczepan Faber, created at: 7/29/12",6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,*/,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,public class DefaultStackTraceCleaner implements StackTraceCleaner {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,public boolean isOut(StackTraceElement e) {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"boolean fromMockObject = e.getClassName().contains(""$$EnhancerByMockitoWithCGLIB$$"");",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"boolean fromByteBuddyMockObject = e.getClassName().contains(""$MockitoMock$"");",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"boolean fromOrgMockito = e.getClassName().startsWith(""org.mockito."");",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"boolean isRunner = e.getClassName().startsWith(""org.mockito.runners."");",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,"boolean isInternalRunner = e.getClassName().startsWith(""org.mockito.internal.runners."");",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,return (fromMockObject || fromByteBuddyMockObject || fromOrgMockito) && !isRunner && !isInternalRunner;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleaner.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,package org.mockito.internal.exceptions.stacktrace;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,import org.mockito.exceptions.stacktrace.StackTraceCleaner;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,import org.mockito.plugins.StackTraceCleanerProvider;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,/**,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,"* by Szczepan Faber, created at: 7/29/12",7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,*/,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,public StackTraceCleaner getStackTraceCleaner(StackTraceCleaner defaultCleaner) {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,return defaultCleaner;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\DefaultStackTraceCleanerProvider.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,package org.mockito.internal.exceptions.stacktrace;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import org.mockito.exceptions.stacktrace.StackTraceCleaner;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import org.mockito.internal.configuration.plugins.Plugins;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import java.util.ArrayList;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import java.util.Arrays;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import java.util.LinkedList;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,public class StackTraceFilter implements Serializable {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,static final long serialVersionUID = -5499819791513105700L;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,private static final StackTraceCleaner CLEANER =,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,Plugins.getStackTraceCleanerProvider().getStackTraceCleaner(new DefaultStackTraceCleaner());,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,* Example how the filter works (+/- means good/bad):,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,"* [a+, b+, c-, d+, e+, f-, g+] -> [a+, b+, g+]",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,* Basically removes all bad from the middle. If any good are in the middle of bad those are also removed.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,"public StackTraceElement[] filter(StackTraceElement[] target, boolean keepTop) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,//TODO: profile,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,List<StackTraceElement> unfilteredStackTrace = Arrays.asList(target);,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,int lastBad = -1;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,int firstBad = -1;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,for (int i = 0; i < unfilteredStackTrace.size(); i++) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,if (!CLEANER.isOut(unfilteredStackTrace.get(i))) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,continue;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,lastBad = i;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,if (firstBad == -1) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,firstBad = i;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,List<StackTraceElement> top;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,if (keepTop && firstBad != -1) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,"top = unfilteredStackTrace.subList(0, firstBad);",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,} else {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,top = new LinkedList<StackTraceElement>();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,"List<StackTraceElement> bottom = unfilteredStackTrace.subList(lastBad + 1, unfilteredStackTrace.size());",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,List<StackTraceElement> filtered = new ArrayList<StackTraceElement>(top);,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,filtered.addAll(bottom);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,return filtered.toArray(new StackTraceElement[]{});,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\stacktrace\StackTraceFilter.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,package org.mockito.internal.exceptions.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,import org.mockito.internal.exceptions.VerificationAwareInvocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,public class ScenarioPrinter {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,public String print(List<VerificationAwareInvocation> invocations) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,if (invocations.size() == 1) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"return ""Actually, above is the only interaction with this mock."";",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,StringBuilder sb = new StringBuilder(,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"""***\n"" +",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"""For your reference, here is the list of all invocations ([?] - means unverified).\n"");",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,int counter = 0;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,for (VerificationAwareInvocation i : invocations) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"sb.append(++counter + "". "");",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,if (!i.isVerified()) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"sb.append(""[?]"");",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,"sb.append(i.getLocation() + ""\n"");",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,String scenario = sb.toString();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,return scenario;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\exceptions\util\ScenarioPrinter.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,package org.mockito.internal.handler;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.internal.InternalMockHandler;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.internal.listeners.NotifiedMethodInvocationReport;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.internal.stubbing.InvocationContainer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.invocation.Invocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.invocation.MockHandler;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.listeners.InvocationListener;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.mock.MockCreationSettings;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.stubbing.Answer;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,import org.mockito.stubbing.VoidMethodStubbable;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"* Handler, that call all listeners wanted for this mock, before delegating it",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,* to the parameterized handler.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"* Also imposterize MockHandlerImpl, delegate all call of InternalMockHandler to the real mockHandler",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"class InvocationNotifierHandler<T> implements MockHandler, InternalMockHandler<T> {",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,private final List<InvocationListener> invocationListeners;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,private final InternalMockHandler<T> mockHandler;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,this.mockHandler = mockHandler;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,this.invocationListeners = settings.getInvocationListeners();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,public Object handle(Invocation invocation) throws Throwable {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,try {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,Object returnedValue = mockHandler.handle(invocation);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"notifyMethodCall(invocation, returnedValue);",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,return returnedValue;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,} catch (Throwable t){,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"notifyMethodCallException(invocation, t);",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,throw t;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"private void notifyMethodCall(Invocation invocation, Object returnValue) {",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,for (InvocationListener listener : invocationListeners) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,try {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"listener.reportInvocation(new NotifiedMethodInvocationReport(invocation, returnValue));",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,} catch(Throwable listenerThrowable) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"new Reporter().invocationListenerThrewException(listener, listenerThrowable);",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"private void notifyMethodCallException(Invocation invocation, Throwable exception) {",57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,for (InvocationListener listener : invocationListeners) {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,try {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"listener.reportInvocation(new NotifiedMethodInvocationReport(invocation, exception));",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,} catch(Throwable listenerThrowable) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,"new Reporter().invocationListenerThrewException(listener, listenerThrowable);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,public MockCreationSettings getMockSettings() {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,return mockHandler.getMockSettings();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,public VoidMethodStubbable<T> voidMethodStubbable(T mock) {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,return mockHandler.voidMethodStubbable(mock);,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,public void setAnswersForStubbing(List<Answer> answers) {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,mockHandler.setAnswersForStubbing(answers);,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,public InvocationContainer getInvocationContainer() {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,return mockHandler.getInvocationContainer();,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\InvocationNotifierHandler.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,package org.mockito.internal.handler;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,import org.mockito.internal.InternalMockHandler;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,import org.mockito.mock.MockCreationSettings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,"* by Szczepan Faber, created at: 5/21/12",11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,public class MockHandlerFactory {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,public InternalMockHandler create(MockCreationSettings settings) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,InternalMockHandler handler = new MockHandlerImpl(settings);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,InternalMockHandler nullResultGuardian = new NullResultGuardian(handler);,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,"InternalMockHandler notifier = new InvocationNotifierHandler(nullResultGuardian, settings);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,return notifier;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerFactory.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,package org.mockito.internal.handler;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.InternalMockHandler;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.invocation.MatchersBinder;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.progress.MockingProgress;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.progress.ThreadSafeMockingProgress;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.InvocationContainer;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.InvocationContainerImpl;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.OngoingStubbingImpl;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.StubbedInvocationMatcher;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.VoidMethodStubbableImpl;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.stubbing.answers.AnswersValidator;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.verification.MockAwareVerificationMode;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.internal.verification.VerificationDataImpl;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.invocation.Invocation;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.mock.MockCreationSettings;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.stubbing.Answer;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.stubbing.VoidMethodStubbable;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import org.mockito.verification.VerificationMode;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,import java.util.List;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,/**,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,* Invocation handler set on mock objects.,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,* @param <T> type of mock object to handle,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,*/,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,class MockHandlerImpl<T> implements InternalMockHandler<T> {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,private static final long serialVersionUID = -2917871070982574165L;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,InvocationContainerImpl invocationContainerImpl;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,MatchersBinder matchersBinder = new MatchersBinder();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,MockingProgress mockingProgress = new ThreadSafeMockingProgress();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,private final MockCreationSettings mockSettings;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public MockHandlerImpl(MockCreationSettings mockSettings) {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,this.mockSettings = mockSettings;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,this.mockingProgress = new ThreadSafeMockingProgress();,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,this.matchersBinder = new MatchersBinder();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"this.invocationContainerImpl = new InvocationContainerImpl(mockingProgress, mockSettings);",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public Object handle(Invocation invocation) throws Throwable {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,if (invocationContainerImpl.hasAnswersForStubbing()) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// stubbing voids with stubVoid() or doAnswer() style,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"mockingProgress.getArgumentMatcherStorage(),",55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocation,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,);,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocationContainerImpl.setMethodForStubbing(invocationMatcher);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return null;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,VerificationMode verificationMode = mockingProgress.pullVerificationMode();,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"mockingProgress.getArgumentMatcherStorage(),",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocation,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,);,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,mockingProgress.validateState();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// if verificationMode is not null then someone is doing verify(),70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,if (verificationMode != null) {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// We need to check if verification was started on the correct mock,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138),73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"VerificationDataImpl data = createVerificationData(invocationContainerImpl, invocationMatcher);",75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,verificationMode.verify(data);,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return null;,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,} else {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// this means there is an invocation on a different mock. Re-adding verification mode,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138),80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,mockingProgress.verificationStarted(verificationMode);,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// prepare invocation for stubbing,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,OngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,mockingProgress.reportOngoingStubbing(ongoingStubbing);,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// look for existing answer for this invocation,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,StubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,if (stubbedInvocation != null) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,stubbedInvocation.captureArgumentsFrom(invocation);,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return stubbedInvocation.answer(invocation);,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,} else {,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,Object ret = mockSettings.getDefaultAnswer().answer(invocation);,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"new AnswersValidator().validateDefaultAnswerReturnedValue(invocation, ret);",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// redo setting invocation for potential stubbing in case of partial,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// mocks / spies.,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"// Without it, the real method inside 'when' might have delegated",102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// to other self method and overwrite the intended stubbed method,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,// with a different one. The reset is required to avoid runtime exception that validates return type with stubbed method signature.,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return ret;,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,109,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public VoidMethodStubbable<T> voidMethodStubbable(T mock) {,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"return new VoidMethodStubbableImpl<T>(mock, invocationContainerImpl);",111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public MockCreationSettings getMockSettings() {,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return mockSettings;,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"@SuppressWarnings(""unchecked"")",118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public void setAnswersForStubbing(List<Answer> answers) {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,invocationContainerImpl.setAnswersForStubbing(answers);,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,public InvocationContainer getInvocationContainer() {,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,return invocationContainerImpl;,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"private VerificationDataImpl createVerificationData(InvocationContainerImpl invocationContainerImpl, InvocationMatcher invocationMatcher) {",127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,if (mockSettings.isStubOnly()) {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,new Reporter().stubPassedToVerify();     // this throws an exception,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,131,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,"return new VerificationDataImpl(invocationContainerImpl, invocationMatcher);",132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,},134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\MockHandlerImpl.java,,135,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,package org.mockito.internal.handler;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.internal.InternalMockHandler;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.internal.progress.HandyReturnValues;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.internal.stubbing.InvocationContainer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.mock.MockCreationSettings;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import org.mockito.stubbing.VoidMethodStubbable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,import java.util.List;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,* Protects the results from delegate MockHandler. Makes sure the results are valid.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,"* by Szczepan Faber, created at: 5/22/12",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,class NullResultGuardian implements InternalMockHandler {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,private final InternalMockHandler delegate;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public NullResultGuardian(InternalMockHandler delegate) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,this.delegate = delegate;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public Object handle(Invocation invocation) throws Throwable {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,Object result = delegate.handle(invocation);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,Class<?> returnType = invocation.getMethod().getReturnType();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,if(result == null && returnType.isPrimitive()) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,//primitive values cannot be null,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,return new HandyReturnValues().returnFor(returnType);,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,} else {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,return result;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,//boring delegation:,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public MockCreationSettings getMockSettings() {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,return delegate.getMockSettings();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public VoidMethodStubbable voidMethodStubbable(Object mock) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,return delegate.voidMethodStubbable(mock);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public void setAnswersForStubbing(List answers) {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,delegate.setAnswersForStubbing(answers);,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,public InvocationContainer getInvocationContainer() {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,return delegate.getInvocationContainer();,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\handler\NullResultGuardian.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.lang.reflect.Array;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.lang.reflect.Method;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.util.Collections;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.util.LinkedList;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.hamcrest.Matcher;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.internal.matchers.CapturesArguments;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.internal.matchers.MatcherDecorator;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.internal.matchers.VarargMatcher;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.internal.reporting.PrintSettings;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.invocation.DescribedInvocation;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.invocation.Invocation;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,import org.mockito.invocation.Location;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"@SuppressWarnings(""unchecked"")",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"public class InvocationMatcher implements DescribedInvocation, CapturesArgumensFromInvocation, Serializable {",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,private static final long serialVersionUID = -3047126096857467610L;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,private final Invocation invocation;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,private final List<Matcher> matchers;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,this.invocation = invocation;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (matchers.isEmpty()) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,this.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,} else {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,this.matchers = matchers;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public InvocationMatcher(Invocation invocation) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"this(invocation, Collections.<Matcher>emptyList());",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public Method getMethod() {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return invocation.getMethod();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public Invocation getInvocation() {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return this.invocation;,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public List<Matcher> getMatchers() {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return this.matchers;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public String toString() {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"return new PrintSettings().print(matchers, invocation);",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public boolean matches(Invocation actual) {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return invocation.getMock().equals(actual.getMock()),60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,&& hasSameMethod(actual),61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"&& new ArgumentsComparator().argumentsMatch(this, actual);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,private boolean safelyArgumentsMatch(Object[] actualArgs) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,try {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"return new ArgumentsComparator().argumentsMatch(this, actualArgs);",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,} catch (Throwable t) {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return false;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,/**,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"* similar means the same method name, same mock, unverified",74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,* and: if arguments are the same cannot be overloaded,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,*/,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public boolean hasSimilarMethod(Invocation candidate) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,String wantedMethodName = getMethod().getName();,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,String currentMethodName = candidate.getMethod().getName();,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,80,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,final boolean methodNameEquals = wantedMethodName.equals(currentMethodName);,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,final boolean isUnverified = !candidate.isVerified();,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,final boolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,final boolean methodEquals = hasSameMethod(candidate);,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,85,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (!methodNameEquals || !isUnverified || !mockIsTheSame) {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return false;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch(candidate.getArguments());,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return !overloadedButSameArgs;,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,94,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public boolean hasSameMethod(Invocation candidate) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//not using method.equals() for 1 good reason:,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Method m1 = invocation.getMethod();,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Method m2 = candidate.getMethod();,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,100,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (m1.getName() != null && m1.getName().equals(m2.getName())) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,/* Avoid unnecessary cloning */,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Class[] params1 = m1.getParameterTypes();,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Class[] params2 = m2.getParameterTypes();,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (params1.length == params2.length) {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,for (int i = 0; i < params1.length; i++) {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (params1[i] != params2[i]),107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return false;,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return true;,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return false;,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,115,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public Location getLocation() {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return invocation.getLocation();,117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,119,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public void captureArgumentsFrom(Invocation invocation) {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (invocation.getMethod().isVarArgs()) {,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,int indexOfVararg = invocation.getRawArguments().length - 1;,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,throw new UnsupportedOperationException();,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,124,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,} else {,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,for (int position = 0; position < matchers.size(); position++) {,126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Matcher m = matchers.get(position);,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (m instanceof CapturesArguments) {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));",129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,133,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//        for (int position = 0; position < matchers.size(); position++) {,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//            Matcher m = matchers.get(position);,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                //TODO SF - this whole lot can be moved captureFrom implementation,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {",138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                    Object array = invocation.getRawArguments()[position];,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                    for (int i = 0; i < Array.getLength(array); i++) {,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));",141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                    },142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"//                    //since we've captured all varargs already, it does not make sense to process other matchers.",143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                    return;,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                } else {,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//                },147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//            },148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,//        },149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,151,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,private boolean isVarargMatcher(Matcher matcher) {,152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,Matcher actualMatcher = matcher;,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,if (actualMatcher instanceof MatcherDecorator) {,154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,actualMatcher = ((MatcherDecorator) actualMatcher).getActualMatcher();,155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return actualMatcher instanceof VarargMatcher;,157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,159,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,"private boolean isVariableArgument(Invocation invocation, int position) {",160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return invocation.getRawArguments().length - 1 == position,161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,&& invocation.getRawArguments()[position] != null,162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,&& invocation.getRawArguments()[position].getClass().isArray(),163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,&& invocation.getMethod().isVarArgs();,164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},165,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,166,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,public static List<InvocationMatcher> createFrom(List<Invocation> invocations) {,167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,LinkedList<InvocationMatcher> out = new LinkedList<InvocationMatcher>();,168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,169,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,for (Invocation i : invocations) {,170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,out.add(new InvocationMatcher(i));,171,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},172,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,,173,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,return out;,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMatcher.java,},176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,public interface AbstractAwareMethod {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,boolean isAbstract();,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\AbstractAwareMethod.java,},10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,import org.hamcrest.Matcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,import org.mockito.internal.matchers.MatcherDecorator;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,import org.mockito.internal.matchers.VarargMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,public class ArgumentsComparator {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"public boolean argumentsMatch(InvocationMatcher invocationMatcher, Invocation actual) {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,Object[] actualArgs = actual.getArguments();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"return argumentsMatch(invocationMatcher, actualArgs) || varArgsMatch(invocationMatcher, actual);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"public boolean argumentsMatch(InvocationMatcher invocationMatcher, Object[] actualArgs) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (actualArgs.length != invocationMatcher.getMatchers().size()) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,for (int i = 0; i < actualArgs.length; i++) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (!invocationMatcher.getMatchers().get(i).matches(actualArgs[i])) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return true;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"//ok, this method is a little bit messy but the vararg business unfortunately is messy...",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"private boolean varArgsMatch(InvocationMatcher invocationMatcher, Invocation actual) {",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (!actual.getMethod().isVarArgs()) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,//if the method is not vararg forget about it,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"//we must use raw arguments, not arguments...",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,Object[] rawArgs = actual.getRawArguments();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,List<Matcher> matchers = invocationMatcher.getMatchers();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (rawArgs.length != matchers.size()) {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,for (int i = 0; i < rawArgs.length; i++) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,Matcher m = matchers.get(i);,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,//it's a vararg because it's the last array in the arg list,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,Matcher actualMatcher;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,//this is necessary as the framework often decorates matchers,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (m instanceof MatcherDecorator) {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,actualMatcher = ((MatcherDecorator)m).getActualMatcher();,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,} else {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,actualMatcher = m;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,//this is very important to only allow VarargMatchers here. If you're not sure why remove it and run all tests.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,"//it's not a vararg (i.e. some ordinary argument before varargs), just do the ordinary check",63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,} else if (!m.matches(rawArgs[i])){,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return false;,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,return true;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsComparator.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import org.hamcrest.Matcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import org.mockito.internal.matchers.ArrayEquals;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import org.mockito.internal.matchers.Equals;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import org.mockito.internal.util.collections.ArrayUtils;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import java.util.ArrayList;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"* by Szczepan Faber, created at: 3/31/12",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,public class ArgumentsProcessor {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"// expands array varArgs that are given by runtime (1, [a, b]) into true",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"// varArgs (1, a, b);",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"public static Object[] expandVarArgs(final boolean isVarArgs, final Object[] args) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,if (!isVarArgs || new ArrayUtils().isEmpty(args) || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,return args == null ? new Object[0] : args;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,final int nonVarArgsCount = args.length - 1;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,Object[] varArgs;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,if (args[nonVarArgsCount] == null) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,// in case someone deliberately passed null varArg array,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,varArgs = new Object[] { null };,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,} else {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,final int varArgsCount = varArgs.length;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,Object[] newArgs = new Object[nonVarArgsCount + varArgsCount];,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"System.arraycopy(args, 0, newArgs, 0, nonVarArgsCount);",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,"System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, varArgsCount);",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,return newArgs;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,public static List<Matcher> argumentsToMatchers(Object[] arguments) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,List<Matcher> matchers = new ArrayList<Matcher>(arguments.length);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,for (Object arg : arguments) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,if (arg != null && arg.getClass().isArray()) {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,matchers.add(new ArrayEquals(arg));,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,} else {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,matchers.add(new Equals(arg));,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,return matchers;,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\ArgumentsProcessor.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,public interface CapturesArgumensFromInvocation {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,void captureArgumentsFrom(Invocation i);,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\CapturesArgumensFromInvocation.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.internal.debugging.LocationImpl;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.internal.exceptions.VerificationAwareInvocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.internal.invocation.realmethod.RealMethod;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.internal.reporting.PrintSettings;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import org.mockito.invocation.*;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import java.lang.reflect.Method;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,import java.util.Arrays;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* Method call on a mock object.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* Contains sequence number which should be globally unique and is used for,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* verification in order.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* <p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,* Contains stack trace of invocation,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,*/,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"@SuppressWarnings(""unchecked"")",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"public class InvocationImpl implements Invocation, VerificationAwareInvocation {",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private static final long serialVersionUID = 8240069639250980199L;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final int sequenceNumber;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final Object mock;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final MockitoMethod method;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final Object[] arguments;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final Object[] rawArguments;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private final Location location;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private boolean verified;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private boolean isIgnoredForVerification;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,final RealMethod realMethod;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private StubInfo stubInfo;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"public InvocationImpl(Object mock, MockitoMethod mockitoMethod, Object[] args, int sequenceNumber, RealMethod realMethod) {",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.method = mockitoMethod;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.mock = mock;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.realMethod = realMethod;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"this.arguments = ArgumentsProcessor.expandVarArgs(mockitoMethod.isVarArgs(), args);",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.rawArguments = args;,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.sequenceNumber = sequenceNumber;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.location = new LocationImpl();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Object getMock() {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return mock;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Method getMethod() {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return method.getJavaMethod();,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Object[] getArguments() {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return arguments;,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"public <T> T getArgumentAt(int index, Class<T> clazz) {",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return (T) arguments[index];,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public boolean isVerified() {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return verified || isIgnoredForVerification;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public int getSequenceNumber() {,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return sequenceNumber;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public boolean equals(Object o) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,if (o == null || !o.getClass().equals(this.getClass())) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return false;,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,81,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,InvocationImpl other = (InvocationImpl) o;,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,83,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return this.mock.equals(other.mock) && this.method.equals(other.method) && this.equalArguments(other.arguments);,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,private boolean equalArguments(Object[] arguments) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"return Arrays.equals(arguments, this.arguments);",88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,90,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,@Override,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public int hashCode() {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return 1;,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,95,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public String toString() {,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"return new PrintSettings().print(ArgumentsProcessor.argumentsToMatchers(getArguments()), this);",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Location getLocation() {,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return location;,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,103,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Object[] getRawArguments() {,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return this.rawArguments;,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,107,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Class<?> getRawReturnType() {,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return method.getReturnType();,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,111,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public Object callRealMethod() throws Throwable {,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,if (method.isAbstract()) {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,new Reporter().cannotCallAbstractRealMethod();,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,"return realMethod.invoke(mock, rawArguments);",116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public void markVerified() {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.verified = true;,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public StubInfo stubInfo() {,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return stubInfo;,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public void markStubbed(StubInfo stubInfo) {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,this.stubInfo = stubInfo;,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,130,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public boolean isIgnoredForVerification() {,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,return isIgnoredForVerification;,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,,134,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,public void ignoreForVerification() {,135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,isIgnoredForVerification = true;,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationImpl.java,},138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,import org.mockito.internal.verification.api.InOrderContext;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,public class InvocationMarker {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,"public void markVerified(List<Invocation> invocations, CapturesArgumensFromInvocation wanted) {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,for (Invocation invocation : invocations) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,"markVerified(invocation, wanted);",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,"public void markVerified(Invocation invocation, CapturesArgumensFromInvocation wanted) {",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,invocation.markVerified();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,wanted.captureArgumentsFrom(invocation);,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,"public void markVerifiedInOrder(List<Invocation> chunk, CapturesArgumensFromInvocation wanted, InOrderContext context) {",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,"markVerified(chunk, wanted);",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,for (Invocation i : chunk) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,context.markVerified(i);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationMarker.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import java.util.LinkedList;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import java.util.List;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import org.mockito.internal.util.collections.ListUtil;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import org.mockito.internal.util.collections.ListUtil.Filter;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import org.mockito.internal.verification.api.InOrderContext;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,import org.mockito.invocation.Location;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public class InvocationsFinder {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public List<Invocation> findInvocations(List<Invocation> invocations, InvocationMatcher wanted) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"return ListUtil.filter(invocations, new RemoveNotMatching(wanted));",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public List<Invocation> findAllMatchingUnverifiedChunks(List<Invocation> invocations, InvocationMatcher wanted, InOrderContext orderingContext) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"List<Invocation> unverified = removeVerifiedInOrder(invocations, orderingContext);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"return ListUtil.filter(unverified, new RemoveNotMatching(wanted));",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,/**,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* some examples how it works:,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* Given invocations sequence:,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* 1,1,2,1",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* if wanted is 1 and mode is times(2) then returns,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* 1,1",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* if wanted is 1 and mode is atLeast() then returns,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* 1,1,1",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* if wanted is 1 and mode is times(x), where x != 2 then returns",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* 1,1,1",41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public List<Invocation> findMatchingChunk(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount, InOrderContext context) {",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"List<Invocation> unverified = removeVerifiedInOrder(invocations, context);",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"List<Invocation> firstChunk = getFirstMatchingChunk(wanted, unverified);",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (wantedCount != firstChunk.size()) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"return this.findAllMatchingUnverifiedChunks(invocations, wanted, context);",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return firstChunk;,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"private List<Invocation> getFirstMatchingChunk(InvocationMatcher wanted, List<Invocation> unverified) {",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,List<Invocation> firstChunk = new LinkedList<Invocation>();,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,for (Invocation invocation : unverified) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (wanted.matches(invocation)) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,firstChunk.add(invocation);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else if (!firstChunk.isEmpty()) {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,break;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return firstChunk;,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public Invocation findFirstMatchingUnverifiedInvocation( List<Invocation> invocations, InvocationMatcher wanted, InOrderContext context ){",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"for( Invocation invocation : removeVerifiedInOrder( invocations, context )){",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if( wanted.matches( invocation )){,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return invocation;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return null;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public Invocation findSimilarInvocation(List<Invocation> invocations, InvocationMatcher wanted) {",75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,Invocation firstSimilar = null;,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,for (Invocation invocation : invocations) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (!wanted.hasSimilarMethod(invocation)) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,continue;,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (firstSimilar == null) {,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,firstSimilar = invocation;,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (wanted.hasSameMethod(invocation)) {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return invocation;,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,88,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return firstSimilar;,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public Invocation findFirstUnverified(List<Invocation> invocations) {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"return findFirstUnverified(invocations, null);",93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,95,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"Invocation findFirstUnverified(List<Invocation> invocations, Object mock) {",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,for (Invocation i : invocations) {,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,boolean mockIsValid = mock == null || mock == i.getMock();,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (!i.isVerified() && mockIsValid) {,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return i;,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return null;,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,105,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public Location getLastLocation(List<Invocation> invocations) {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (invocations.isEmpty()) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return null;,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,Invocation last = invocations.get(invocations.size() - 1);,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return last.getLocation();,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,114,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {",115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));",116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (verifiedOnly.isEmpty()) {,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return null;,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return verifiedOnly.getLast();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,124,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"private List<Invocation> removeVerifiedInOrder(List<Invocation> invocations, InOrderContext orderingContext) {",125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,List<Invocation> unverified = new LinkedList<Invocation>();,126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,for (Invocation i : invocations) {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (orderingContext.isVerified(i)) {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,unverified.clear();,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else {,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,unverified.add(i);,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return unverified;,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,136,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,private static class RemoveNotMatching implements Filter<Invocation> {,137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,private final InvocationMatcher wanted;,138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,139,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,private RemoveNotMatching(InvocationMatcher wanted) {,140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,this.wanted = wanted;,141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,143,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public boolean isOut(Invocation invocation) {,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return !wanted.matches(invocation);,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,148,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,private static class RemoveUnverifiedInOrder implements Filter<Invocation> {,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,private final InOrderContext orderingContext;,150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,151,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public RemoveUnverifiedInOrder(InOrderContext orderingContext) {,152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,this.orderingContext = orderingContext;,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,155,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,public boolean isOut(Invocation invocation) {,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return !orderingContext.isVerified(invocation);,157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,,160,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,/**,161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* i3 is unverified here:,162,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* i1, i2, i3",164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*     v,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* all good here:,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"* i1, i2, i3",169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*     v   v,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* @param context,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,* @param orderedInvocations,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,*/,174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,"public Invocation findFirstUnverifiedInOrder(InOrderContext context, List<Invocation> orderedInvocations) {",175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,Invocation candidate = null;,176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,for(Invocation i : orderedInvocations) {,177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,if (!context.isVerified(i)) {,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,candidate = candidate != null ? candidate : i;,179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,} else {,180,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,candidate = null;,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,return candidate;,184,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\InvocationsFinder.java,},186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import org.hamcrest.Matcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import org.mockito.exceptions.Reporter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import org.mockito.internal.matchers.LocalizedMatcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import org.mockito.internal.progress.ArgumentMatcherStorage;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import org.mockito.invocation.Invocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import java.io.Serializable;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"@SuppressWarnings(""unchecked"")",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,public class MatchersBinder implements Serializable {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,private static final long serialVersionUID = -311433939339443463L;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,List<LocalizedMatcher> lastMatchers = argumentMatcherStorage.pullLocalizedMatchers();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"validateMatchers(invocation, lastMatchers);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"InvocationMatcher invocationWithMatchers = new InvocationMatcher(invocation, (List<Matcher>)(List) lastMatchers);",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,return invocationWithMatchers;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"private void validateMatchers(Invocation invocation, List<LocalizedMatcher> lastMatchers) {",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,if (!lastMatchers.isEmpty()) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,int recordedMatchersSize = lastMatchers.size();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,int expectedMatchersSize = invocation.getArguments().length;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,if (expectedMatchersSize != recordedMatchersSize) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,"new Reporter().invalidUseOfMatchers(expectedMatchersSize, lastMatchers);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MatchersBinder.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,import java.lang.reflect.Method;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public interface MockitoMethod extends AbstractAwareMethod {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public String getName();,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public Class<?> getReturnType();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public Class<?>[] getParameterTypes();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public Class<?>[] getExceptionTypes();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public boolean isVarArgs();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,public Method getJavaMethod();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\MockitoMethod.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,import java.io.Serializable;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,import java.lang.reflect.Method;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,import java.lang.reflect.Modifier;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,import java.util.Arrays;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"public class SerializableMethod implements Serializable, MockitoMethod {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private static final long serialVersionUID = 6005610965006048445L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final Class<?> declaringClass;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final String methodName;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final Class<?>[] parameterTypes;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final Class<?> returnType;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final Class<?>[] exceptionTypes;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final boolean isVarArgs;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,private final boolean isAbstract;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public SerializableMethod(Method method) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,declaringClass = method.getDeclaringClass();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,methodName = method.getName();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,parameterTypes = method.getParameterTypes();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,returnType = method.getReturnType();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,exceptionTypes = method.getExceptionTypes();,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,isVarArgs = method.isVarArgs();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,isAbstract = (method.getModifiers() & Modifier.ABSTRACT) != 0;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public String getName() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return methodName;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public Class<?> getReturnType() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return returnType;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public Class<?>[] getParameterTypes() {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return parameterTypes;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public Class<?>[] getExceptionTypes() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return exceptionTypes;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public boolean isVarArgs() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return isVarArgs;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public boolean isAbstract() {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return isAbstract;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public Method getJavaMethod() {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,try {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"return declaringClass.getDeclaredMethod(methodName, parameterTypes);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,} catch (SecurityException e) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,String message = String.format(,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"""The method %1$s.%2$s is probably private or protected and cannot be mocked.\n"" +",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"""Please report this as a defect with an example of how to reproduce it."", declaringClass, methodName);",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"throw new MockitoException(message, e);",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,} catch (NoSuchMethodException e) {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,String message = String.format(,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"""The method %1$s.%2$s does not exists and you should not get to this point.\n"" +",70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"""Please report this as a defect with an example of how to reproduce it."", declaringClass, methodName);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"throw new MockitoException(message, e);",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,@Override,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public int hashCode() {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return 1;,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,,80,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,@Override,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,public boolean equals(Object obj) {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (this == obj),83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return true;,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (obj == null),85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (getClass() != obj.getClass()),87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,SerializableMethod other = (SerializableMethod) obj;,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (declaringClass == null) {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (other.declaringClass != null),91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,} else if (!declaringClass.equals(other.declaringClass)),93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (methodName == null) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (other.methodName != null),96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,} else if (!methodName.equals(other.methodName)),98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,"if (!Arrays.equals(parameterTypes, other.parameterTypes))",100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (returnType == null) {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,if (other.returnType != null),103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,} else if (!returnType.equals(other.returnType)),105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return false;,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,return true;,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\SerializableMethod.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,package org.mockito.internal.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,import org.mockito.invocation.DescribedInvocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,import org.mockito.invocation.Location;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,import org.mockito.invocation.StubInfo;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,"public class StubInfoImpl implements StubInfo, Serializable {",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,private static final long serialVersionUID = 2125827349332068867L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,private final DescribedInvocation stubbedAt;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,public StubInfoImpl(DescribedInvocation stubbedAt) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,this.stubbedAt = stubbedAt;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,public Location stubbedAt() {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,return stubbedAt.getLocation();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\StubInfoImpl.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,package org.mockito.internal.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,import org.mockito.internal.InternalMockHandler;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,import org.mockito.internal.stubbing.StubbedInvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,import org.mockito.internal.util.MockUtil;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,import org.mockito.invocation.Invocation;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,import java.util.*;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,public class UnusedStubsFinder {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,* Finds all unused stubs for given mocks,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,* @param mocks,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,public List<Invocation> find(List<?> mocks) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,List<Invocation> unused = new LinkedList<Invocation>();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,for (Object mock : mocks) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,InternalMockHandler<Object> handler = new MockUtil().getMockHandler(mock);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,List<StubbedInvocationMatcher> fromSingleMock = handler.getInvocationContainer().getStubbedInvocations();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,for(StubbedInvocationMatcher s : fromSingleMock) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,if (!s.wasUsed()) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,unused.add(s.getInvocation());,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,return unused;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\UnusedStubsFinder.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,package org.mockito.internal.invocation.finder;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,import org.mockito.internal.InternalMockHandler;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,import org.mockito.internal.util.MockUtil;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,import java.util.*;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,public class AllInvocationsFinder {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,* gets all invocations from mocks. Invocations are ordered earlier first.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,* @param mocks mocks,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,* @return invocations,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,public List<Invocation> find(List<?> mocks) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,Set<Invocation> invocationsInOrder = new TreeSet<Invocation>(new SequenceNumberComparator());,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,for (Object mock : mocks) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,InternalMockHandler<Object> handler = new MockUtil().getMockHandler(mock);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,List<Invocation> fromSingleMock = handler.getInvocationContainer().getInvocations();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,invocationsInOrder.addAll(fromSingleMock);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,return new LinkedList<Invocation>(invocationsInOrder);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,private static final class SequenceNumberComparator implements Comparator<Invocation> {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,"public int compare(Invocation o1, Invocation o2) {",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,return Integer.valueOf(o1.getSequenceNumber()).compareTo(o2.getSequenceNumber());,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\AllInvocationsFinder.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,package org.mockito.internal.invocation.finder;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,import org.mockito.internal.util.collections.ListUtil;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,import org.mockito.internal.util.collections.ListUtil.Filter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,"* Author: Szczepan Faber, created at: 4/3/11",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,public class VerifiableInvocationsFinder {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,public List<Invocation> find(List<?> mocks) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,List<Invocation> invocations = new AllInvocationsFinder().find(mocks);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,"return ListUtil.filter(invocations, new RemoveIgnoredForVerification());",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,private static class RemoveIgnoredForVerification implements Filter<Invocation>{,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,public boolean isOut(Invocation invocation) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,return invocation.isIgnoredForVerification();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\finder\VerifiableInvocationsFinder.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,package org.mockito.internal.invocation.realmethod;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,import org.mockito.internal.creation.util.MockitoMethodProxy;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,import java.io.Serializable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,* Provides stack trace filtering on exception.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,"public class CleanTraceRealMethod implements RealMethod, Serializable {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,private static final long serialVersionUID = 3596550785818938496L;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,private final RealMethod realMethod;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,public CleanTraceRealMethod(MockitoMethodProxy methodProxy) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,this(new DefaultRealMethod(methodProxy));,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,public CleanTraceRealMethod(RealMethod realMethod) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,this.realMethod = realMethod;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,"public Object invoke(Object target, Object[] arguments) throws Throwable {",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,try {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,"return realMethod.invoke(target, arguments);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,} catch (Throwable t) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,new ConditionalStackTraceFilter().filter(t);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,throw t;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\CleanTraceRealMethod.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,package org.mockito.internal.invocation.realmethod;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,import org.mockito.internal.creation.util.MockitoMethodProxy;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,import java.io.Serializable;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,"public class DefaultRealMethod implements RealMethod, Serializable {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,private static final long serialVersionUID = -4596470901191501582L;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,private final MockitoMethodProxy methodProxy;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,public DefaultRealMethod(MockitoMethodProxy methodProxy) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,this.methodProxy = methodProxy;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,"public Object invoke(Object target, Object[] arguments) throws Throwable {",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,"return methodProxy.invokeSuper(target, arguments);",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\DefaultRealMethod.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,package org.mockito.internal.invocation.realmethod;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,public interface RealMethod {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,"Object invoke(Object target, Object[] arguments) throws Throwable;",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\invocation\realmethod\RealMethod.java,},11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,package org.mockito.internal.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,import org.mockito.exceptions.verification.ArgumentsAreDifferent;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,"* If JUnit is used, we can use an exception that extends from ComparisonFailure",6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,* and hence provide a better IDE support as the comparison result is comparable,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,*/,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,class FriendlyExceptionMaker {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,private final JUnitDetecter detecter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,FriendlyExceptionMaker(JUnitDetecter detecter) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,this.detecter = detecter;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,//TODO SF this can be now unit tested,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,"public AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,if (!detecter.hasJUnit()) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,return new ArgumentsAreDifferent(message);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,try {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,"Class<?> clazz = Class.forName(""org.mockito.exceptions.verification.junit.ArgumentsAreDifferent"");",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,"AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, wanted, actual);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,return throwable;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,} catch (Throwable t) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,//            throw the default exception in case of problems,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,return new ArgumentsAreDifferent(message);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\FriendlyExceptionMaker.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,package org.mockito.internal.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,class JUnitDetecter {,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,private boolean hasJUnit;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,JUnitDetecter() {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,try {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,"Class.forName(""junit.framework.ComparisonFailure"");",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,hasJUnit = true;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,} catch (Throwable t) {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,hasJUnit = false;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,public boolean hasJUnit() {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,return hasJUnit;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitDetecter.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,package org.mockito.internal.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,import org.junit.runners.model.Statement;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,import org.mockito.Mockito;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,import org.mockito.MockitoAnnotations;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,* Internal implementation.,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,public class JUnitRule {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,"public Statement apply(final Statement base, final Object target) {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,return new Statement() {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,@Override,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,public void evaluate() throws Throwable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,MockitoAnnotations.initMocks(target);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,base.evaluate();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,Mockito.validateMockitoUsage();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,};,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitRule.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,package org.mockito.internal.junit;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,public class JUnitTool {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,private static JUnitDetecter detecter = new JUnitDetecter();,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,public static boolean hasJUnit() {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,return detecter.hasJUnit();,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,"public static AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,"return new FriendlyExceptionMaker(detecter).createArgumentsAreDifferentException(message, wanted, actual);",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\junit\JUnitTool.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,package org.mockito.internal.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,"@SuppressWarnings(""unchecked"")",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,public class CollectCreatedMocks implements MockingStartedListener {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,private final List toBeFilled;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,public CollectCreatedMocks(List toBeFilled) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,this.toBeFilled = toBeFilled;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,"public void mockingStarted(Object mock, Class classToMock) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,toBeFilled.add(mock);,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\CollectCreatedMocks.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,package org.mockito.internal.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,public interface MockingProgressListener {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingProgressListener.java,},8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,package org.mockito.internal.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,import org.mockito.MockSettings;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,"@SuppressWarnings(""unchecked"")",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,public interface MockingStartedListener extends MockingProgressListener {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,"void mockingStarted(Object mock, Class classToMock);",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\MockingStartedListener.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,package org.mockito.internal.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,import org.mockito.invocation.DescribedInvocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,import org.mockito.listeners.MethodInvocationReport;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,import static org.mockito.internal.matchers.Equality.areEqual;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* Report on a method call,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public class NotifiedMethodInvocationReport implements MethodInvocationReport {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,private final Invocation invocation;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,private final Object returnedValue;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,private final Throwable throwable;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* @param invocation Information on the method call,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* @param returnedValue The value returned by the method invocation,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,"public NotifiedMethodInvocationReport(Invocation invocation, Object returnedValue) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.invocation = invocation;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.returnedValue = returnedValue;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.throwable = null;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* Build a new {@link org.mockito.listeners.MethodInvocationReport} with a return value.,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* @param invocation Information on the method call,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,* @param throwable Tha throwable raised by the method invocation,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,"public NotifiedMethodInvocationReport(Invocation invocation, Throwable throwable) {",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.invocation = invocation;,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.returnedValue = null;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,this.throwable = throwable;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public DescribedInvocation getInvocation() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return invocation;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public Object getReturnedValue() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return returnedValue;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public Throwable getThrowable() {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return throwable;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public boolean threwException() {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return throwable != null;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public String getLocationOfStubbing() {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return (invocation.stubInfo() == null) ? null : invocation.stubInfo().stubbedAt().toString();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public boolean equals(Object o) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,if (this == o) return true;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,if (o == null || getClass() != o.getClass()) return false;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,NotifiedMethodInvocationReport that = (NotifiedMethodInvocationReport) o;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,"return areEqual(invocation, that.invocation) &&",75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,"areEqual(returnedValue, that.returnedValue) &&",76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,"areEqual(throwable, that.throwable);",77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,public int hashCode() {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,int result = invocation != null ? invocation.hashCode() : 0;,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,result = 31 * result + (returnedValue != null ? returnedValue.hashCode() : 0);,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,result = 31 * result + (throwable != null ? throwable.hashCode() : 0);,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,return result;,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\listeners\NotifiedMethodInvocationReport.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import java.util.Iterator;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import org.hamcrest.Description;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import org.hamcrest.Matcher;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,import org.mockito.ArgumentMatcher;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,"@SuppressWarnings(""unchecked"")",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,public class And extends ArgumentMatcher implements Serializable {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,private static final long serialVersionUID = -4624719625691177501L;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,private final List<Matcher> matchers;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,public And(List<Matcher> matchers) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,this.matchers = matchers;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,public boolean matches(Object actual) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,for (Matcher matcher : matchers) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,if (!matcher.matches(actual)) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,return false;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,return true;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,public void describeTo(Description description) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,"description.appendText(""and("");",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,for (Iterator<Matcher> it = matchers.iterator(); it.hasNext();) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,it.next().describeTo(description);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,if (it.hasNext()) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,"description.appendText("", "");",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,"description.appendText("")"");",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\And.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,"@SuppressWarnings(""unchecked"")",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,public class Any extends ArgumentMatcher implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,private static final long serialVersionUID = -4062420125651019029L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,public static final Any ANY = new Any();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,private Any() {},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,public boolean matches(Object actual) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,return true;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,public void describeTo(Description description) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,"description.appendText(""<any>"");",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Any.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,import org.hamcrest.Matcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,import org.mockito.ArgumentMatcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,"@SuppressWarnings(""unchecked"")",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,"public class AnyVararg extends ArgumentMatcher implements VarargMatcher, Serializable {",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,private static final long serialVersionUID = 1700721373094731555L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,public static final Matcher ANY_VARARG = new AnyVararg();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,public boolean matches(Object arg) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,return true;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\AnyVararg.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,import java.lang.reflect.Array;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,import java.util.Arrays;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,import org.hamcrest.Description;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,public class ArrayEquals extends Equals {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,private static final long serialVersionUID = -7167812844261087583L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,public ArrayEquals(Object wanted) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,super(wanted);,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,public boolean matches(Object actual) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,Object wanted = getWanted();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,if (wanted == null || actual == null) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,return super.matches(actual);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof boolean[] && actual instanceof boolean[]) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((boolean[]) wanted, (boolean[]) actual);",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof byte[] && actual instanceof byte[]) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((byte[]) wanted, (byte[]) actual);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof char[] && actual instanceof char[]) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((char[]) wanted, (char[]) actual);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof double[] && actual instanceof double[]) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((double[]) wanted, (double[]) actual);",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof float[] && actual instanceof float[]) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((float[]) wanted, (float[]) actual);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof int[] && actual instanceof int[]) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((int[]) wanted, (int[]) actual);",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof long[] && actual instanceof long[]) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((long[]) wanted, (long[]) actual);",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof short[] && actual instanceof short[]) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((short[]) wanted, (short[]) actual);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else if (wanted instanceof Object[] && actual instanceof Object[]) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"return Arrays.equals((Object[]) wanted, (Object[]) actual);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,return false;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,public void describeTo(Description description) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,if (getWanted() != null && getWanted().getClass().isArray()) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"appendArray(createObjectArray(getWanted()), description);",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,} else {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,super.describeTo(description);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"private void appendArray(Object[] array, Description description) {",55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"description.appendText(""["");",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,for (int i = 0; i < array.length; i++) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,new Equals(array[i]).describeTo(description);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,if (i != array.length - 1) {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"description.appendText("", "");",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"description.appendText(""]"");",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,public static Object[] createObjectArray(Object array) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,if (array instanceof Object[]) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,return (Object[]) array;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,Object[] result = new Object[Array.getLength(array)];,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,for (int i = 0; i < Array.getLength(array); i++) {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,"result[i] = Array.get(array, i);",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,return result;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ArrayEquals.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,public interface CapturesArguments {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,void captureFrom(Object argument);,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturesArguments.java,},12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import org.hamcrest.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import org.mockito.ArgumentMatcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import org.mockito.exceptions.Reporter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import java.util.LinkedList;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,"@SuppressWarnings(""unchecked"")",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,"public class CapturingMatcher<T> extends ArgumentMatcher<T> implements CapturesArguments, VarargMatcher, Serializable {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,private static final long serialVersionUID = 4274067078639307295L;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,private final LinkedList<Object> arguments = new LinkedList<Object>();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,/* (non-Javadoc),21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,* @see org.mockito.ArgumentMatcher#matches(java.lang.Object),22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,*/,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,public boolean matches(Object argument) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,return true;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,/* (non-Javadoc),28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,* @see org.mockito.ArgumentMatcher#describeTo(org.hamcrest.Description),29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,*/,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,public void describeTo(Description description) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,"description.appendText(""<Capturing argument>"");",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,public T getLastValue() {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,if (arguments.isEmpty()) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,new Reporter().noArgumentValueWasCaptured();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,return null;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,} else {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,return (T) arguments.getLast();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,public List<T> getAllValues() {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,return (List) arguments;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,public void captureFrom(Object argument) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,this.arguments.add(argument);,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CapturingMatcher.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,public class CompareEqual<T extends Comparable<T>> extends CompareTo<T> implements Serializable {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,private static final long serialVersionUID = 2998586260452920429L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,public CompareEqual(Comparable<T> value) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,super(value);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,@Override,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,protected String getName() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,"return ""cmpEq"";",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,@Override,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,protected boolean matchResult(int result) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,return result == 0;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareEqual.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,import org.hamcrest.Description;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,import org.mockito.ArgumentMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,public abstract class CompareTo<T extends Comparable<T>> extends ArgumentMatcher<T> {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,private final Comparable<T> wanted;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,public CompareTo(Comparable<T> value) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,this.wanted = value;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,"@SuppressWarnings(""unchecked"")",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,public boolean matches(Object actual) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,if(!(actual instanceof Comparable)) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,return false;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,return matchResult(((Comparable) actual).compareTo(wanted));,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,public void describeTo(Description description) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,"description.appendText(getName() + ""("" + wanted + "")"");",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,protected abstract String getName();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,protected abstract boolean matchResult(int result);,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\CompareTo.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,public class Contains extends ArgumentMatcher<String> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,private static final long serialVersionUID = -1909837398271763801L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,private final String substring;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,public Contains(String substring) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,this.substring = substring;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,return actual != null && ((String) actual).contains(substring);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,"description.appendText(""contains(\"""" + substring + ""\"")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Contains.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,import org.hamcrest.SelfDescribing;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,public interface ContainsExtraTypeInformation extends Serializable {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,SelfDescribing withExtraTypeInfo();,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,boolean typeMatches(Object object);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\ContainsExtraTypeInformation.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,public class EndsWith extends ArgumentMatcher<String> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,private static final long serialVersionUID = 8556443228350129421L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,private final String suffix;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,public EndsWith(String suffix) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,this.suffix = suffix;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,return actual != null && ((String) actual).endsWith(suffix);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,"description.appendText(""endsWith(\"""" + suffix + ""\"")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EndsWith.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,import java.lang.reflect.Array;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,//stolen from hamcrest because I didn't want to have more dependency than Matcher class,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,public class Equality {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"public static boolean areEqual(Object o1, Object o2) {",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,if (o1 == o2 ) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return true;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,} else if (o1 == null || o2 == null) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return o1 == null && o2 == null;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,} else if (isArray(o1)) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"return isArray(o2) && areArraysEqual(o1, o2);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,} else {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return o1.equals(o2);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"static boolean areArraysEqual(Object o1, Object o2) {",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"return areArrayLengthsEqual(o1, o2)",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"&& areArrayElementsEqual(o1, o2);",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"static boolean areArrayLengthsEqual(Object o1, Object o2) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return Array.getLength(o1) == Array.getLength(o2);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"static boolean areArrayElementsEqual(Object o1, Object o2) {",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,for (int i = 0; i < Array.getLength(o1); i++) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,"if (!areEqual(Array.get(o1, i), Array.get(o2, i))) return false;",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return true;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,static boolean isArray(Object o) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,return o.getClass().isArray();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equality.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,import org.hamcrest.Description;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,import org.hamcrest.SelfDescribing;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,import org.mockito.ArgumentMatcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,import java.io.Serializable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"public class Equals extends ArgumentMatcher<Object> implements ContainsExtraTypeInformation, Serializable {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,private static final long serialVersionUID = -3395637450058086891L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,private final Object wanted;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public Equals(Object wanted) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,this.wanted = wanted;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"return Equality.areEqual(this.wanted, actual);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,description.appendText(describe(wanted));,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public String describe(Object object) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return quoting() + object + quoting();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,private String quoting() {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,if (wanted instanceof String) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"return ""\"""";",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,} else if (wanted instanceof Character) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"return ""'"";",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,} else {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"return """";",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,protected final Object getWanted() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return wanted;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,@Override,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public boolean equals(Object o) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,if (o == null || !this.getClass().equals(o.getClass())) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return false;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,Equals other = (Equals) o;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return this.wanted == null && other.wanted == null || this.wanted != null && this.wanted.equals(other.wanted);,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,@Override,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public int hashCode() {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return 1;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public SelfDescribing withExtraTypeInfo() {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return new SelfDescribing() {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public void describeTo(Description description) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,"description.appendText(describe(""(""+ wanted.getClass().getSimpleName() +"") "" + wanted));",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,}};,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,public boolean typeMatches(Object object) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,return wanted != null && object != null && object.getClass() == wanted.getClass();,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Equals.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,import org.hamcrest.Description;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,import org.mockito.ArgumentMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,public class EqualsWithDelta extends ArgumentMatcher<Number> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,private static final long serialVersionUID = 5066980489920383664L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,private final Number wanted;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,private final Number delta;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,"public EqualsWithDelta(Number value, Number delta) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,this.wanted = value;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,this.delta = delta;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,public boolean matches(Object actual) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,Number actualNumber = (Number) actual;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,if (wanted == null ^ actual == null) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,return false;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,if (wanted == actual) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,return true;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,return wanted.doubleValue() - delta.doubleValue() <= actualNumber.doubleValue(),36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,&& actualNumber.doubleValue() <= wanted.doubleValue(),37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,+ delta.doubleValue();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,public void describeTo(Description description) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,"description.appendText(""eq("" + wanted + "", "" + delta + "")"");",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\EqualsWithDelta.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,import java.util.regex.Pattern;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,import org.hamcrest.Description;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,import org.mockito.ArgumentMatcher;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,public class Find extends ArgumentMatcher<String> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,private static final long serialVersionUID = 8895781429480404872L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,private final String regex;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,public Find(String regex) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,this.regex = regex;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,return actual != null && Pattern.compile(regex).matcher((String) actual).find();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,"description.appendText(""find(\"""" + regex.replaceAll(""\\\\"", ""\\\\\\\\"") + ""\"")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Find.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,public class GreaterOrEqual<T extends Comparable<T>> extends CompareTo<T> implements Serializable {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,private static final long serialVersionUID = 87695769061286092L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,public GreaterOrEqual(Comparable<T> value) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,super(value);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,@Override,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,protected String getName() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,"return ""geq"";",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,@Override,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,protected boolean matchResult(int result) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,return result >= 0;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterOrEqual.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,public class GreaterThan<T extends Comparable<T>> extends CompareTo<T> implements Serializable {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,private static final long serialVersionUID = 7446529803235604408L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,public GreaterThan(Comparable<T> value) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,super(value);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,@Override,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,protected String getName() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,"return ""gt"";",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,@Override,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,protected boolean matchResult(int result) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,return result > 0;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\GreaterThan.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,public class InstanceOf extends ArgumentMatcher<Object> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,private static final long serialVersionUID = 517358915876138366L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,private final Class<?> clazz;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,public InstanceOf(Class<?> clazz) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,this.clazz = clazz;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,return (actual != null) && clazz.isAssignableFrom(actual.getClass());,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,"description.appendText(""isA("" + clazz.getName() + "")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\InstanceOf.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,public class LessOrEqual<T extends Comparable<T>> extends CompareTo<T> implements Serializable {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,private static final long serialVersionUID = -6648773374429103565L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,public LessOrEqual(Comparable<T> value) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,super(value);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,@Override,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,protected String getName() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,"return ""leq"";",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,@Override,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,protected boolean matchResult(int result) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,return result <= 0;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessOrEqual.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,public class LessThan<T extends Comparable<T>> extends CompareTo<T> implements Serializable {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,private static final long serialVersionUID = -133860804462310942L;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,public LessThan(Comparable<T> value) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,super(value);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,@Override,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,protected String getName() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,"return ""lt"";",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,@Override,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,protected boolean matchResult(int result) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,return result < 0;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LessThan.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import org.hamcrest.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import org.hamcrest.Matcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import org.hamcrest.SelfDescribing;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import org.mockito.internal.debugging.LocationImpl;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import org.mockito.invocation.Location;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,import java.io.Serializable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,"@SuppressWarnings(""unchecked"")",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,"public class LocalizedMatcher implements Matcher, ContainsExtraTypeInformation, CapturesArguments, MatcherDecorator, Serializable {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,private static final long serialVersionUID = 6748641229659825725L;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,private final Matcher actualMatcher;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,private final Location location;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public LocalizedMatcher(Matcher actualMatcher) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,this.actualMatcher = actualMatcher;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,this.location = new LocationImpl();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public void _dont_implement_Matcher___instead_extend_BaseMatcher_() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,// yeah right,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public boolean matches(Object item) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return actualMatcher.matches(item);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public void describeTo(Description description) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,actualMatcher.describeTo(description);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public Location getLocation() {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return location;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,@Override,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public String toString() {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,"return ""Localized: "" + this.actualMatcher;",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public SelfDescribing withExtraTypeInfo() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,if (actualMatcher instanceof ContainsExtraTypeInformation) {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return ((ContainsExtraTypeInformation) actualMatcher).withExtraTypeInfo();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,} else {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return this;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public boolean typeMatches(Object object) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return actualMatcher instanceof ContainsExtraTypeInformation,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,&& ((ContainsExtraTypeInformation) actualMatcher).typeMatches(object);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public void captureFrom(Object argument) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,if (actualMatcher instanceof CapturesArguments) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,((CapturesArguments) actualMatcher).captureFrom(argument);,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,//TODO: refactor other 'delegated interfaces' to use the MatcherDecorator feature,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,public Matcher getActualMatcher() {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,return actualMatcher;,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\LocalizedMatcher.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,import org.hamcrest.Matcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,"@SuppressWarnings(""unchecked"")",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,public interface MatcherDecorator extends Serializable {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,Matcher getActualMatcher();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatcherDecorator.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import java.util.LinkedList;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import org.hamcrest.Matcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import org.hamcrest.SelfDescribing;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import org.hamcrest.StringDescription;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,import org.mockito.internal.reporting.PrintSettings;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"@SuppressWarnings(""unchecked"")",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,public class MatchersPrinter {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"public String getArgumentsLine(List<Matcher> matchers, PrintSettings printSettings) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,Description result = new StringDescription();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"result.appendList(""("", "", "", "");"", applyPrintSettings(matchers, printSettings));",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,return result.toString();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"public String getArgumentsBlock(List<Matcher> matchers, PrintSettings printSettings) {",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,Description result = new StringDescription();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"result.appendList(""(\n    "", "",\n    "", ""\n);"", applyPrintSettings(matchers, printSettings));",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,return result.toString();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,"private List<SelfDescribing> applyPrintSettings(List<Matcher> matchers, PrintSettings printSettings) {",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,List<SelfDescribing> withPrintSettings = new LinkedList<SelfDescribing>();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,int i = 0;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,for (final Matcher matcher : matchers) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,if (matcher instanceof ContainsExtraTypeInformation && printSettings.extraTypeInfoFor(i)) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,withPrintSettings.add(((ContainsExtraTypeInformation) matcher).withExtraTypeInfo());,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,} else {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,withPrintSettings.add(matcher);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,i++;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,return withPrintSettings;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\MatchersPrinter.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,public class Matches extends ArgumentMatcher<Object> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,private static final long serialVersionUID = 8787704593379472029L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,private final String regex;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,public Matches(String regex) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,this.regex = regex;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,return (actual instanceof String) && ((String) actual).matches(regex);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,"description.appendText(""matches(\"""" + regex.replaceAll(""\\\\"", ""\\\\\\\\"")",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,"+ ""\"")"");",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Matches.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,import org.hamcrest.Matcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,import org.mockito.ArgumentMatcher;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,public class Not extends ArgumentMatcher implements Serializable {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,private static final long serialVersionUID = 4627373642333593264L;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,private final Matcher first;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,public Not(Matcher first) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,this.first = first;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,public boolean matches(Object actual) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,return !first.matches(actual);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,public void describeTo(Description description) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,"description.appendText(""not("");",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,first.describeTo(description);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,"description.appendText("")"");",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Not.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,public class NotNull extends ArgumentMatcher<Object> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,private static final long serialVersionUID = 7278261081285153228L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,public static final NotNull NOT_NULL = new NotNull();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,private NotNull() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,return actual != null;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,"description.appendText(""notNull()"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\NotNull.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,public class Null extends ArgumentMatcher<Object> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,private static final long serialVersionUID = 2823082637424390314L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,public static final Null NULL = new Null();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,private Null() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,public boolean matches(Object actual) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,return actual == null;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,public void describeTo(Description description) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,"description.appendText(""isNull()"");",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Null.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import java.util.Iterator;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import org.hamcrest.Description;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import org.hamcrest.Matcher;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,import org.mockito.ArgumentMatcher;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,"@SuppressWarnings(""unchecked"")",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,public class Or extends ArgumentMatcher implements Serializable {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,private static final long serialVersionUID = 5888739035212283087L;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,private final List<Matcher> matchers;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,public Or(List<Matcher> matchers) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,this.matchers = matchers;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,public boolean matches(Object actual) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,for (Matcher matcher : matchers) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,if (matcher.matches(actual)) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,return true;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,return false;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,public void describeTo(Description description) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,"description.appendText(""or("");",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,for (Iterator<Matcher> it = matchers.iterator(); it.hasNext();) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,it.next().describeTo(description);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,if (it.hasNext()) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,"description.appendText("", "");",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,"description.appendText("")"");",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Or.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,import org.hamcrest.Description;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,import org.mockito.ArgumentMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,public class Same extends ArgumentMatcher<Object> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,private static final long serialVersionUID = -1226959355938572597L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,private final Object wanted;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,public Same(Object wanted) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,this.wanted = wanted;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,return wanted == actual;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,"description.appendText(""same("");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,appendQuoting(description);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,"description.appendText("""" + wanted);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,appendQuoting(description);,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,"description.appendText("")"");",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,private void appendQuoting(Description description) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,if (wanted instanceof String) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,"description.appendText(""\"""");",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,} else if (wanted instanceof Character) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,"description.appendText(""'"");",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\Same.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,package org.mockito.internal.matchers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,public class StartsWith extends ArgumentMatcher<String> implements Serializable {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,private static final long serialVersionUID = -5978092285707998431L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,private final String prefix;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,public StartsWith(String prefix) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,this.prefix = prefix;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,return actual != null && ((String) actual).startsWith(prefix);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,"description.appendText(""startsWith(\"""" + prefix + ""\"")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\StartsWith.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,package org.mockito.internal.matchers;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import org.hamcrest.Description;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import org.mockito.ArgumentMatcher;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import org.mockito.exceptions.Reporter;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.lang.reflect.Array;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.util.Arrays;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.util.Collections;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.util.LinkedList;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,"@SuppressWarnings(""unchecked"")",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,"public class VarargCapturingMatcher<T> extends ArgumentMatcher<T> implements CapturesArguments, VarargMatcher, Serializable {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,private static final long serialVersionUID = 4057053345838026645L;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,private final LinkedList<List<T>> arguments = new LinkedList<List<T>>();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,public boolean matches(Object argument) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return true;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,public void describeTo(Description description) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,"description.appendText(""<Capturing variable argument>"");",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,public List<T> getLastVarargs() {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,if (arguments.isEmpty()) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,new Reporter().noArgumentValueWasCaptured();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return null;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,} else {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return arguments.getLast();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,public List<List<T>> getAllVarargs() {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return arguments;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,public void captureFrom(Object varArgArray) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,List<T> vararg = unpackAsList(varArgArray);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,this.arguments.add(vararg);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,private List<T> unpackAsList(Object varArgArray) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,if (varArgArray instanceof Object[]) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return Arrays.asList((T[]) varArgArray);,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,} else if (varArgArray.getClass().isArray()) {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,Object[] primitiveArray = new Object[Array.getLength(varArgArray)];,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,for (int i = 0; i < primitiveArray.length; i++) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,"primitiveArray[i] = Array.get(varArgArray, i);",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return Arrays.asList((T[]) primitiveArray);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,} else {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,return Collections.singletonList((T) varArgArray);,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargCapturingMatcher.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,package org.mockito.internal.matchers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,public interface VarargMatcher extends Serializable {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\VarargMatcher.java,},10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//NON-STANDARD LICENCE HEADER HERE - THAT'S OK,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"//Class comes from Apache Commons Lang, added some tiny changes",7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,package org.mockito.internal.matchers.apachecommons;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.lang.reflect.AccessibleObject;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.lang.reflect.Field;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.lang.reflect.Modifier;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.util.Arrays;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.util.Collections;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Assists in implementing {@link Object#equals(Object)} methods.</p>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p> This class provides methods to build a good equals method for any,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* class. It follows rules laid out in,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <a href=""http://java.sun.com/docs/books/effective/index.html"">Effective Java</a>",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* , by Joshua Bloch. In particular the rule for comparing <code>doubles</code>,",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <code>floats</code>, and arrays can be tricky. Also, making sure that",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <code>equals()</code> and <code>hashCode()</code> are consistent can be,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* difficult.</p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>Two Objects that compare as equals must generate the same hash code,",28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* but two Objects with the same hash code do not have to be equal.</p>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>All relevant fields should be included in the calculation of equals.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* Derived fields may be ignored. In particular, any field used in",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* generating a hash code must be used in the equals method, and vice",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* versa.</p>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Typical use for the code is as follows:</p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <pre class=""code""><code class=""java"">",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* public boolean equals(Object obj) {,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   if (obj == null) { return false; },39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   if (obj == this) { return true; },40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   if (obj.getClass() != getClass()) {,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*     return false;,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   },43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   MyClass rhs = (MyClass) obj;,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*   return new EqualsBuilder(),45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*                 .appendSuper(super.equals(obj)),46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"*                 .append(field1, rhs.field1)",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"*                 .append(field2, rhs.field2)",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"*                 .append(field3, rhs.field3)",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*                 .isEquals();,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*  },51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* </code></pre>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p> Alternatively, there is a method that uses reflection to determine",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* the fields to test. Because these fields are usually private, the method,",55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <code>reflectionEquals</code>, uses <code>AccessibleObject.setAccessible</code> to",56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* change the visibility of the fields. This will fail under a security,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* manager, unless the appropriate permissions are set up correctly. It is",58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* also slower than testing explicitly.</p>,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p> A typical invocation for this method would look like:</p>,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <pre class=""code""><code class=""java"">",62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* public boolean equals(Object obj) {,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"*   return EqualsBuilder.reflectionEquals(this, obj);",64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* },65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* </code></pre>,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* @author <a href=""mailto:steve.downey@netfolio.com"">Steve Downey</a>",68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @author Stephen Colebourne,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @author Gary Gregory,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @author Pete Gieser,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @author Arun Mammen Thomas,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @since 1.0,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @version $Id: EqualsBuilder.java 611543 2008-01-13 07:00:22Z bayard $,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"@SuppressWarnings(""unchecked"")",76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,class EqualsBuilder {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* If the fields tested are equals.,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* The default value is <code>true</code>.,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,private boolean isEquals = true;,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Constructor for EqualsBuilder.</p>,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Starts off assuming that equals is <code>true</code>.</p>,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @see Object#equals(Object),89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,public EqualsBuilder() {,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// do nothing for now.,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,94,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//-------------------------------------------------------------------------,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,96,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This method uses reflection to determine if the two <code>Object</code>s,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are equal.</p>,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* fields. This means that it will throw a security exception if run under,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* a security manager, if the permissions are not set up correctly. It is also",103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* not as efficient as testing explicitly.</p>,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>Transient members will be not be tested, as they are likely derived",106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* fields, and not part of the value of the Object.</p>",107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Static fields will not be tested. Superclass fields will be included.</p>,109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  <code>this</code> object,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the other object,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return <code>true</code> if the two Objects have tested equals.,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public static boolean reflectionEquals(Object lhs, Object rhs) {",115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return reflectionEquals(lhs, rhs, false, null, null);",116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This method uses reflection to determine if the two <code>Object</code>s,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are equal.</p>,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private,123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* fields. This means that it will throw a security exception if run under,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* a security manager, if the permissions are not set up correctly. It is also",125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* not as efficient as testing explicitly.</p>,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>Transient members will be not be tested, as they are likely derived",128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* fields, and not part of the value of the Object.</p>",129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Static fields will not be tested. Superclass fields will be included.</p>,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  <code>this</code> object,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the other object,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param excludeFields  array of field names to exclude from testing,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return <code>true</code> if the two Objects have tested equals.,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public static boolean reflectionEquals(Object lhs, Object rhs, String[] excludeFields) {",138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return reflectionEquals(lhs, rhs, false, null, excludeFields);",139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,141,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This method uses reflection to determine if the two <code>Object</code>s,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are equal.</p>,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private,146,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* fields. This means that it will throw a security exception if run under,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* a security manager, if the permissions are not set up correctly. It is also",148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* not as efficient as testing explicitly.</p>,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>If the TestTransients parameter is set to <code>true</code>, transient",151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* members will be tested, otherwise they are ignored, as they are likely",152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* derived fields, and not part of the value of the <code>Object</code>.</p>",153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Static fields will not be tested. Superclass fields will be included.</p>,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  <code>this</code> object,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the other object,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param testTransients  whether to include transient fields,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return <code>true</code> if the two Objects have tested equals.,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,161,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients) {",162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return reflectionEquals(lhs, rhs, testTransients, null, null);",163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,165,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This method uses reflection to determine if the two <code>Object</code>s,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are equal.</p>,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* fields. This means that it will throw a security exception if run under,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* a security manager, if the permissions are not set up correctly. It is also",172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* not as efficient as testing explicitly.</p>,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>If the testTransients parameter is set to <code>true</code>, transient",175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* members will be tested, otherwise they are ignored, as they are likely",176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* derived fields, and not part of the value of the <code>Object</code>.</p>",177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Static fields will not be included. Superclass fields will be appended,179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* up to and including the specified superclass. A null superclass is treated,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* as java.lang.Object.</p>,181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,182,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  <code>this</code> object,183,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the other object,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param testTransients  whether to include transient fields,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),",186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*  may be <code>null</code>,187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return <code>true</code> if the two Objects have tested equals.,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @since 2.0,189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass) {",191,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);",192,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},193,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,194,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This method uses reflection to determine if the two <code>Object</code>s,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are equal.</p>,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private,199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* fields. This means that it will throw a security exception if run under,200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* a security manager, if the permissions are not set up correctly. It is also",201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* not as efficient as testing explicitly.</p>,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>If the testTransients parameter is set to <code>true</code>, transient",204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* members will be tested, otherwise they are ignored, as they are likely",205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* derived fields, and not part of the value of the <code>Object</code>.</p>",206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Static fields will not be included. Superclass fields will be appended,208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* up to and including the specified superclass. A null superclass is treated,209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* as java.lang.Object.</p>,210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  <code>this</code> object,212,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the other object,213,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param testTransients  whether to include transient fields,214,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),",215,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*  may be <code>null</code>,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param excludeFields  array of field names to exclude from testing,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return <code>true</code> if the two Objects have tested equals.,218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @since 2.0,219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass,",221,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,String[] excludeFields) {,222,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,223,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return true;,224,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},225,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,226,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return false;,227,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},228,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// Find the leaf class since there may be transients in the leaf,229,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// class or in classes between the leaf and root.,230,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// If we are not testing transients or a subclass has no ivars,",231,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// then a subclass can test equals to a superclass.,232,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Class lhsClass = lhs.getClass();,233,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Class rhsClass = rhs.getClass();,234,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Class testClass;,235,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhsClass.isInstance(rhs)) {,236,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,testClass = lhsClass;,237,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!rhsClass.isInstance(lhs)) {,238,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// rhsClass is a subclass of lhsClass,239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,testClass = rhsClass;,240,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},241,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (rhsClass.isInstance(lhs)) {,242,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,testClass = rhsClass;,243,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!lhsClass.isInstance(rhs)) {,244,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// lhsClass is a subclass of rhsClass,245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,testClass = lhsClass;,246,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},247,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else {,248,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// The two classes are not related.,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return false;,250,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},251,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,EqualsBuilder equalsBuilder = new EqualsBuilder();,252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,try {,253,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);",254,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,while (testClass.getSuperclass() != null && testClass != reflectUpToClass) {,255,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,testClass = testClass.getSuperclass();,256,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);",257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} catch (IllegalArgumentException e) {,259,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// In this case, we tried to test a subclass vs. a superclass and",260,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// the subclass has ivars or the ivars are transient and,261,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// we are testing transients.,262,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// If a subclass has ivars that we are trying to test them, we get an",263,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// exception and we know that the objects are not equal.,264,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return false;,265,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},266,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return equalsBuilder.isEquals();,267,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,269,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,270,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Appends the fields and values defined by the given object of the,271,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* given Class.</p>,272,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,273,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand object,274,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand object,275,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param clazz  the class to append details of,276,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param builder  the builder to append to,277,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param useTransients  whether to test transient fields,278,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param excludeFields  array of field names to exclude from testing,279,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,280,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,private static void reflectionAppend(,281,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"Object lhs,",282,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"Object rhs,",283,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"Class clazz,",284,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"EqualsBuilder builder,",285,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"boolean useTransients,",286,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,String[] excludeFields) {,287,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Field[] fields = clazz.getDeclaredFields();,288,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,List excludedFieldList = excludeFields != null ? Arrays.asList(excludeFields) : Collections.EMPTY_LIST;,289,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"AccessibleObject.setAccessible(fields, true);",290,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < fields.length && builder.isEquals; i++) {,291,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Field f = fields[i];,292,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!excludedFieldList.contains(f.getName()),293,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,&& (f.getName().indexOf('$') == -1),294,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,&& (useTransients || !Modifier.isTransient(f.getModifiers())),295,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,&& (!Modifier.isStatic(f.getModifiers()))) {,296,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,try {,297,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"builder.append(f.get(lhs), f.get(rhs));",298,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} catch (IllegalAccessException e) {,299,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//this can't happen. Would get a Security exception instead,300,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//throw a runtime exception in case the impossible happens.,301,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"throw new InternalError(""Unexpected IllegalAccessException"");",302,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},303,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},304,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},305,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},306,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,307,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//-------------------------------------------------------------------------,308,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,309,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,310,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Adds the result of <code>super.equals()</code> to this builder.</p>,311,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,312,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param superEquals  the result of calling <code>super.equals()</code>,313,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,314,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @since 2.0,315,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,316,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,public EqualsBuilder appendSuper(boolean superEquals) {,317,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= superEquals;,318,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,319,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},320,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,321,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,//-------------------------------------------------------------------------,322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,323,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,324,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>Object</code>s are equal using their,325,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <code>equals</code> method.</p>,326,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,327,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand object,328,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand object,329,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,330,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,331,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(Object lhs, Object rhs) {",332,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,333,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,334,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},335,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,336,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,337,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},338,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,339,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,340,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,341,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},342,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,Class lhsClass = lhs.getClass();,343,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!lhsClass.isArray()) {,344,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal) {,345,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals = (((java.math.BigDecimal) lhs).compareTo((java.math.BigDecimal) rhs) == 0);,346,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else {,347,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// The simple case, not an array, just test the element",348,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals = lhs.equals(rhs);,349,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},350,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs.getClass() != rhs.getClass()) {,351,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// Here when we compare different dimensions, for example: a boolean[][] to a boolean[]",352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,353,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,354,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"// 'Switch' on type of array, to dispatch to the correct handler",355,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// This handles multi dimensional arrays of the same depth,356,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof long[]) {,357,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((long[]) lhs, (long[]) rhs);",358,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof int[]) {,359,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((int[]) lhs, (int[]) rhs);",360,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof short[]) {,361,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((short[]) lhs, (short[]) rhs);",362,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof char[]) {,363,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((char[]) lhs, (char[]) rhs);",364,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof byte[]) {,365,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((byte[]) lhs, (byte[]) rhs);",366,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof double[]) {,367,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((double[]) lhs, (double[]) rhs);",368,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof float[]) {,369,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((float[]) lhs, (float[]) rhs);",370,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else if (lhs instanceof boolean[]) {,371,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((boolean[]) lhs, (boolean[]) rhs);",372,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,} else {,373,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,// Not an array of primitives,374,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append((Object[]) lhs, (Object[]) rhs);",375,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},376,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,377,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},378,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,379,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,380,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>,381,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* Test if two <code>long</code> s are equal.,382,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* </p>,383,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,384,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs,385,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*                  the left hand <code>long</code>,386,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs,387,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*                  the right hand <code>long</code>,388,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,389,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,390,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(long lhs, long rhs) {",391,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,392,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,393,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},394,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,395,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,396,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>int</code>s are equal.</p>,397,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,398,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>int</code>,399,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>int</code>,400,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,401,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(int lhs, int rhs) {",403,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,404,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,405,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,407,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,408,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>short</code>s are equal.</p>,409,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,410,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>short</code>,411,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>short</code>,412,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,413,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,414,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(short lhs, short rhs) {",415,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,416,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,417,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},418,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,419,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,420,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>char</code>s are equal.</p>,421,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,422,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>char</code>,423,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>char</code>,424,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,425,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(char lhs, char rhs) {",427,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,428,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,429,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},430,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,431,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,432,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>byte</code>s are equal.</p>,433,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,434,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>byte</code>,435,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>byte</code>,436,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,437,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,438,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(byte lhs, byte rhs) {",439,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,440,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,441,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},442,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,443,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,444,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>double</code>s are equal by testing that the,445,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* pattern of bits returned by <code>doubleToLong</code> are equal.</p>,446,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,447,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>This handles NaNs, Infinities, and <code>-0.0</code>.</p>",448,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,449,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It is compatible with the hash code generated by,450,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <code>HashCodeBuilder</code>.</p>,451,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,452,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>double</code>,453,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>double</code>,454,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,455,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,456,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(double lhs, double rhs) {",457,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,458,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,459,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},460,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return append(Double.doubleToLongBits(lhs), Double.doubleToLongBits(rhs));",461,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},462,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,463,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,464,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>float</code>s are equal byt testing that the,465,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* pattern of bits returned by doubleToLong are equal.</p>,466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,467,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>This handles NaNs, Infinities, and <code>-0.0</code>.</p>",468,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,469,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>It is compatible with the hash code generated by,470,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <code>HashCodeBuilder</code>.</p>,471,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,472,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>float</code>,473,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>float</code>,474,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,475,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,476,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(float lhs, float rhs) {",477,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,478,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,479,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},480,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"return append(Float.floatToIntBits(lhs), Float.floatToIntBits(rhs));",481,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},482,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,483,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,484,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Test if two <code>booleans</code>s are equal.</p>,485,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,486,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>boolean</code>,487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>boolean</code>,488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,490,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(boolean lhs, boolean rhs) {",491,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,isEquals &= (lhs == rhs);,492,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,493,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},494,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,495,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,496,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Performs a deep comparison of two <code>Object</code> arrays.</p>,497,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,498,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>This also will be called for the top level of,499,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* multi-dimensional, ragged, and multi-typed arrays.</p>",500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>Object[]</code>,502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>Object[]</code>,503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,504,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,505,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(Object[] lhs, Object[] rhs) {",506,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,507,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,508,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},509,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,510,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,511,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},512,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,513,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,514,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,515,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},516,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,517,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,518,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,519,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},520,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,521,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",522,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},523,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,524,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},525,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,526,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,527,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>long</code>. Length and all,528,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,529,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,530,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(long, long)} is used.</p>",531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,532,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>long[]</code>,533,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>long[]</code>,534,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,535,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(long[] lhs, long[] rhs) {",537,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,538,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,539,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},540,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,541,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,542,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},543,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,544,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,545,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,546,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},547,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,548,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,549,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,550,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},551,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,552,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",553,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},554,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,555,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},556,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,557,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,558,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>int</code>. Length and all,559,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,560,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,561,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(int, int)} is used.</p>",562,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,563,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>int[]</code>,564,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>int[]</code>,565,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,566,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,567,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(int[] lhs, int[] rhs) {",568,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,569,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,570,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},571,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,572,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,573,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},574,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,575,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,576,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,577,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},578,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,579,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,580,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,581,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},582,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,583,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",584,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},585,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,586,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},587,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,588,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,589,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>short</code>. Length and all,590,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,591,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,592,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(short, short)} is used.</p>",593,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>short[]</code>,595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>short[]</code>,596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,597,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,598,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(short[] lhs, short[] rhs) {",599,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,600,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,601,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},602,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,603,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,604,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},605,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,606,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,607,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,608,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},609,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,610,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,611,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,612,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},613,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,614,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",615,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},616,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,617,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},618,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,619,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,620,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>char</code>. Length and all,621,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,622,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,623,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(char, char)} is used.</p>",624,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,625,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>char[]</code>,626,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>char[]</code>,627,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,628,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,629,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(char[] lhs, char[] rhs) {",630,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,631,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,632,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},633,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,634,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,635,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},636,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,637,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,638,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,639,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},640,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,641,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,642,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,643,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},644,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,645,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",646,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},647,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,648,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},649,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,650,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,651,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>byte</code>. Length and all,652,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,653,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,654,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(byte, byte)} is used.</p>",655,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,656,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>byte[]</code>,657,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>byte[]</code>,658,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,659,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,660,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(byte[] lhs, byte[] rhs) {",661,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,662,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,663,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},664,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,665,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,666,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},667,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,668,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,669,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,670,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},671,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,672,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,673,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,674,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},675,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,676,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",677,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},678,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,679,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},680,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,681,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,682,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>double</code>. Length and all,683,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,684,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,685,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(double, double)} is used.</p>",686,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,687,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>double[]</code>,688,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>double[]</code>,689,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,690,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,691,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(double[] lhs, double[] rhs) {",692,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,693,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,694,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},695,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,696,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,697,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},698,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,699,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,700,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,701,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},702,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,703,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,704,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,705,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},706,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,707,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",708,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},709,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,710,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},711,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,712,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,713,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>float</code>. Length and all,714,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,715,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,716,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(float, float)} is used.</p>",717,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,718,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>float[]</code>,719,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>float[]</code>,720,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,721,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,722,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(float[] lhs, float[] rhs) {",723,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,724,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,725,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},726,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,727,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,728,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},729,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,730,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,731,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,732,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},733,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,734,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,735,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,736,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},737,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,738,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",739,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},740,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,741,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},742,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,743,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,744,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Deep comparison of array of <code>boolean</code>. Length and all,745,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* values are compared.</p>,746,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,747,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"* <p>The method {@link #append(boolean, boolean)} is used.</p>",748,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,749,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param lhs  the left hand <code>boolean[]</code>,750,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param rhs  the right hand <code>boolean[]</code>,751,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return EqualsBuilder - used to chain calls.,752,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,753,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"public EqualsBuilder append(boolean[] lhs, boolean[] rhs) {",754,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (!isEquals) {,755,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,756,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},757,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == rhs) {,758,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,759,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},760,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs == null || rhs == null) {,761,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,762,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,763,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},764,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,if (lhs.length != rhs.length) {,765,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.setEquals(false);,766,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,767,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},768,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,for (int i = 0; i < lhs.length && isEquals; ++i) {,769,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,"append(lhs[i], rhs[i]);",770,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},771,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this;,772,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},773,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,774,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,775,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* <p>Returns <code>true</code> if the fields that have been checked,776,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* are all equal.</p>,777,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,778,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @return boolean,779,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,780,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,public boolean isEquals() {,781,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,return this.isEquals;,782,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},783,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,,784,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,/**,785,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* Sets the <code>isEquals</code> value.,786,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*,787,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @param isEquals The value to set.,788,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,* @since 2.1,789,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,*/,790,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,protected void setEquals(boolean isEquals) {,791,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,this.isEquals = isEquals;,792,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},793,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\EqualsBuilder.java,},794,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,package org.mockito.internal.matchers.apachecommons;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,import org.hamcrest.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,import org.mockito.ArgumentMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,public class ReflectionEquals extends ArgumentMatcher<Object> implements Serializable {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,private static final long serialVersionUID = 2022780425116330014L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,private final Object wanted;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,private final String[] excludeFields;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,"public ReflectionEquals(Object wanted, String... excludeFields) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,this.wanted = wanted;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,this.excludeFields = excludeFields;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,public boolean matches(Object actual) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,"return EqualsBuilder.reflectionEquals(wanted, actual, excludeFields);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,public void describeTo(Description description) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,"description.appendText(""refEq("" + wanted + "")"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\matchers\apachecommons\ReflectionEquals.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,package org.mockito.internal.progress;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,import org.hamcrest.Matcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,import org.mockito.internal.matchers.LocalizedMatcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,import java.util.List;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,"@SuppressWarnings(""unchecked"")",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,public interface ArgumentMatcherStorage {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,HandyReturnValues reportMatcher(Matcher matcher);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,List<LocalizedMatcher> pullLocalizedMatchers();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,HandyReturnValues reportAnd();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,HandyReturnValues reportNot();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,HandyReturnValues reportOr();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,void validateState();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,void reset();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorage.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,package org.mockito.internal.progress;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.hamcrest.Matcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.mockito.exceptions.Reporter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.mockito.internal.matchers.And;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.mockito.internal.matchers.LocalizedMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.mockito.internal.matchers.Not;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import org.mockito.internal.matchers.Or;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import java.util.ArrayList;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import java.util.Collections;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import java.util.LinkedList;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import java.util.List;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,import java.util.Stack;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"@SuppressWarnings(""unchecked"")",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public class ArgumentMatcherStorageImpl implements ArgumentMatcherStorage {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public static final int TWO_SUB_MATCHERS = 2;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public static final int ONE_SUB_MATCHER = 1;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,private final Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher>();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#reportMatcher(org.hamcrest.Matcher),29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public HandyReturnValues reportMatcher(Matcher matcher) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.push(new LocalizedMatcher(matcher));,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return new HandyReturnValues();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#pullLocalizedMatchers(),37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public List<LocalizedMatcher> pullLocalizedMatchers() {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,if (matcherStack.isEmpty()) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return Collections.emptyList();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,List<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher>(matcherStack);,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.clear();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return (List) matchers;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#reportAnd(),50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public HandyReturnValues reportAnd() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"assertStateFor(""And(?)"", TWO_SUB_MATCHERS);",53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,And and = new And(popLastArgumentMatchers(TWO_SUB_MATCHERS));,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.push(new LocalizedMatcher(and));,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return new HandyReturnValues();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#reportOr(),60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public HandyReturnValues reportOr() {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"assertStateFor(""Or(?)"", TWO_SUB_MATCHERS);",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,Or or = new Or(popLastArgumentMatchers(TWO_SUB_MATCHERS));,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.push(new LocalizedMatcher(or));,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return new HandyReturnValues();,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#reportNot(),70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public HandyReturnValues reportNot() {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"assertStateFor(""Not(?)"", ONE_SUB_MATCHER);",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,Not not = new Not(popLastArgumentMatchers(ONE_SUB_MATCHER).get(0));,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.push(new LocalizedMatcher(not));,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return new HandyReturnValues();,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"private void assertStateFor(String additionalMatcherName, int subMatchersCount) {",79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,assertMatchersFoundFor(additionalMatcherName);,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"assertIncorrectUseOfAdditionalMatchers(additionalMatcherName, subMatchersCount);",81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,83,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,private List<Matcher> popLastArgumentMatchers(int count) {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,List<Matcher> result = new LinkedList<Matcher>();,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"result.addAll(matcherStack.subList(matcherStack.size() - count, matcherStack.size()));",86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,for (int i = 0; i < count; i++) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.pop();,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,return result;,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,private void assertMatchersFoundFor(String additionalMatcherName) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,if (matcherStack.isEmpty()) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.clear();,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,new Reporter().reportNoSubMatchersFound(additionalMatcherName);,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"private void assertIncorrectUseOfAdditionalMatchers(String additionalMatcherName, int count) {",100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,if(matcherStack.size() < count) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,ArrayList<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.clear();,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,"new Reporter().incorrectUseOfAdditionalMatchers(additionalMatcherName, count, lastMatchers);",104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,107,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#validateState(),109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public void validateState() {,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,if (!matcherStack.isEmpty()) {,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,ArrayList lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.clear();,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,new Reporter().misplacedArgumentMatcher(lastMatchers);,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,/* (non-Javadoc),119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,* @see org.mockito.internal.progress.ArgumentMatcherStorage#reset(),120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,*/,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,public void reset() {,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,matcherStack.clear();,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ArgumentMatcherStorageImpl.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,package org.mockito.internal.progress;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,import java.util.*;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,import static org.mockito.internal.util.Primitives.defaultValueForPrimitiveOrWrapper;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,import static org.mockito.internal.util.Primitives.isPrimitiveOrWrapper;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,"@SuppressWarnings(""unchecked"")",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public class HandyReturnValues {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public byte returnZero() {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return 0;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public char returnChar() {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return 0;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public <T> T returnNull() {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return null;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public boolean returnFalse() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return false;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public String returnString() {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,"return """";",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public <T> T returnFor(Class<T> clazz) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,// explicitly return null if type is not a primitive or a wrapper,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,if (isPrimitiveOrWrapper(clazz)) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return defaultValueForPrimitiveOrWrapper(clazz);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return null;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public Map returnMap() {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return new HashMap();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public List returnList() {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return new LinkedList();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public Set returnSet() {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return new HashSet();,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,public <T> T returnFor(T instance) {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,return instance == null ? null : (T) returnFor(instance.getClass());,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\HandyReturnValues.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,package org.mockito.internal.progress;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,* Marking interface to be removed when DeprecatedOngoingStubbing gets deleted,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,*/,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\IOngoingStubbing.java,public interface IOngoingStubbing {},11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,package org.mockito.internal.progress;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,import org.mockito.MockSettings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,import org.mockito.internal.listeners.MockingProgressListener;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,import org.mockito.verification.VerificationMode;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,"@SuppressWarnings(""unchecked"")",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,public interface MockingProgress {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,IOngoingStubbing pullOngoingStubbing();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void verificationStarted(VerificationMode verificationMode);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,VerificationMode pullVerificationMode();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void stubbingStarted();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void stubbingCompleted(Invocation invocation);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void validateState();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void reset();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,/**,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,* Removes ongoing stubbing so that in case the framework is misused,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,* state validation errors are more accurate,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void resetOngoingStubbing();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,ArgumentMatcherStorage getArgumentMatcherStorage();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,"void mockingStarted(Object mock, Class classToMock);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,void setListener(MockingProgressListener listener);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgress.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,package org.mockito.internal.progress;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.internal.configuration.GlobalConfiguration;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.internal.debugging.Localized;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.internal.debugging.LocationImpl;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.internal.listeners.MockingProgressListener;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.internal.listeners.MockingStartedListener;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.invocation.Location;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,import org.mockito.verification.VerificationMode;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,"@SuppressWarnings(""unchecked"")",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public class MockingProgressImpl implements MockingProgress {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private final Reporter reporter = new Reporter();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private final ArgumentMatcherStorage argumentMatcherStorage = new ArgumentMatcherStorageImpl();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,IOngoingStubbing iOngoingStubbing;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private Localized<VerificationMode> verificationMode;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private Location stubbingInProgress = null;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private MockingProgressListener listener;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,this.iOngoingStubbing = iOngoingStubbing;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public IOngoingStubbing pullOngoingStubbing() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,IOngoingStubbing temp = iOngoingStubbing;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,iOngoingStubbing = null;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,return temp;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void verificationStarted(VerificationMode verify) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,validateState();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,resetOngoingStubbing();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,verificationMode = new Localized(verify);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,/* (non-Javadoc),45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,* @see org.mockito.internal.progress.MockingProgress#resetOngoingStubbing(),46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,*/,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void resetOngoingStubbing() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,iOngoingStubbing = null;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public VerificationMode pullVerificationMode() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,if (verificationMode == null) {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,return null;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,VerificationMode temp = verificationMode.getObject();,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,verificationMode = null;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,return temp;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void stubbingStarted() {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,validateState();,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,stubbingInProgress = new LocationImpl();,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void validateState() {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,validateMostStuff();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,//validate stubbing:,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,if (stubbingInProgress != null) {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,Location temp = stubbingInProgress;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,stubbingInProgress = null;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,reporter.unfinishedStubbing(temp);,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,77,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,private void validateMostStuff() {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,//State is cool when GlobalConfiguration is already loaded,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,//this cannot really be tested functionally because I cannot dynamically mess up org.mockito.configuration.MockitoConfiguration class,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,GlobalConfiguration.validate();,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,if (verificationMode != null) {,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,Location location = verificationMode.getLocation();,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,verificationMode = null;,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,reporter.unfinishedVerificationException(location);,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,88,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,getArgumentMatcherStorage().validateState();,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void stubbingCompleted(Invocation invocation) {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,stubbingInProgress = null;,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,95,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public String toString() {,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,"return  ""iOngoingStubbing: "" + iOngoingStubbing +",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,""", verificationMode: "" + verificationMode +",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,""", stubbingInProgress: "" + stubbingInProgress;",99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void reset() {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,stubbingInProgress = null;,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,verificationMode = null;,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,getArgumentMatcherStorage().reset();,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,107,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public ArgumentMatcherStorage getArgumentMatcherStorage() {,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,return argumentMatcherStorage;,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,111,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,"public void mockingStarted(Object mock, Class classToMock) {",112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,if (listener instanceof MockingStartedListener) {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,"((MockingStartedListener) listener).mockingStarted(mock, classToMock);",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,validateMostStuff();,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,public void setListener(MockingProgressListener listener) {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,this.listener = listener;,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\MockingProgressImpl.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,package org.mockito.internal.progress;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,public class SequenceNumber {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,private static int sequenceNumber = 1;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,public static synchronized int next() {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,return sequenceNumber++;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\SequenceNumber.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,package org.mockito.internal.progress;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,import org.mockito.internal.listeners.MockingProgressListener;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,import org.mockito.verification.VerificationMode;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,import java.io.Serializable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,"public class ThreadSafeMockingProgress implements MockingProgress, Serializable {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,private static final long serialVersionUID = 6839454041642082618L;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,private static final ThreadLocal<MockingProgress> mockingProgress = new ThreadLocal<MockingProgress>();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,static MockingProgress threadSafely() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,if (mockingProgress.get() == null) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,mockingProgress.set(new MockingProgressImpl());,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,return mockingProgress.get();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().reportOngoingStubbing(iOngoingStubbing);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public IOngoingStubbing pullOngoingStubbing() {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,return threadSafely().pullOngoingStubbing();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void verificationStarted(VerificationMode verify) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().verificationStarted(verify);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public VerificationMode pullVerificationMode() {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,return threadSafely().pullVerificationMode();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void stubbingStarted() {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().stubbingStarted();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void validateState() {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().validateState();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void stubbingCompleted(Invocation invocation) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().stubbingCompleted(invocation);,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public String toString() {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,return threadSafely().toString();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void reset() {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().reset();,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void resetOngoingStubbing() {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().resetOngoingStubbing();,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public ArgumentMatcherStorage getArgumentMatcherStorage() {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,return threadSafely().getArgumentMatcherStorage();,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,"public void mockingStarted(Object mock, Class classToMock) {",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,"threadSafely().mockingStarted(mock, classToMock);",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,public void setListener(MockingProgressListener listener) {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,threadSafely().setListener(listener);,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\progress\ThreadSafeMockingProgress.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,package org.mockito.internal.reporting;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,public class Discrepancy {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,private final int wantedCount;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,private final int actualCount;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,"public Discrepancy(int wantedCount, int actualCount) {",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,this.wantedCount = wantedCount;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,this.actualCount = actualCount;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,public int getWantedCount() {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,return wantedCount;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,public String getPluralizedWantedCount() {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,return Pluralizer.pluralize(wantedCount);,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,public int getActualCount() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,return actualCount;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,public String getPluralizedActualCount() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,return Pluralizer.pluralize(actualCount);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Discrepancy.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,package org.mockito.internal.reporting;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,public class Pluralizer {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,public static String pluralize(int number) {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,"return number == 1 ? ""1 time"" : number + "" times"";",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,},11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\Pluralizer.java,},12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,package org.mockito.internal.reporting;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.hamcrest.Matcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.mockito.internal.invocation.ArgumentsProcessor;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.mockito.internal.matchers.MatchersPrinter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.mockito.internal.util.MockUtil;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import org.mockito.invocation.Invocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import java.util.Arrays;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import java.util.LinkedList;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,import java.util.List;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public class PrintSettings {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public static final int MAX_LINE_LENGTH = 45;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,private boolean multiline;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,private List<Integer> withTypeInfo = new LinkedList<Integer>();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public void setMultiline(boolean multiline) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,this.multiline = multiline;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public boolean isMultiline() {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,return multiline;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public static PrintSettings verboseMatchers(Integer ... indexesOfMatchers) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,PrintSettings settings = new PrintSettings();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,settings.setMatchersToBeDescribedWithExtraTypeInfo(indexesOfMatchers);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,return settings;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public boolean extraTypeInfoFor(int argumentIndex) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,return withTypeInfo.contains(argumentIndex);,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public void setMatchersToBeDescribedWithExtraTypeInfo(Integer[] indexesOfMatchers) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,this.withTypeInfo = Arrays.asList(indexesOfMatchers);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"public String print(List<Matcher> matchers, Invocation invocation) {",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,MatchersPrinter matchersPrinter = new MatchersPrinter();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"String qualifiedName = new MockUtil().getMockName(invocation.getMock()) + ""."" + invocation.getMethod().getName();",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"String invocationString = qualifiedName + matchersPrinter.getArgumentsLine(matchers, this);",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,if (isMultiline() || (!matchers.isEmpty() && invocationString.length() > MAX_LINE_LENGTH)) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"return qualifiedName + matchersPrinter.getArgumentsBlock(matchers, this);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,} else {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,return invocationString;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public String print(Invocation invocation) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"return print(ArgumentsProcessor.argumentsToMatchers(invocation.getArguments()), invocation);",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,public String print(InvocationMatcher invocationMatcher) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,"return print(invocationMatcher.getMatchers(), invocationMatcher.getInvocation());",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\PrintSettings.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,package org.mockito.internal.reporting;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,import org.mockito.internal.invocation.InvocationMatcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,* Makes sure both wanted and actual are printed consistently (single line or multiline),12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,* Makes arguments printed with types if necessary,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,public class SmartPrinter {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,private final String wanted;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,private final String actual;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,"public SmartPrinter(InvocationMatcher wanted, Invocation actual, Integer ... indexesOfMatchersToBeDescribedWithExtraTypeInfo) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,PrintSettings printSettings = new PrintSettings();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,"printSettings.setMultiline(wanted.toString().contains(""\n"") || actual.toString().contains(""\n""));",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,printSettings.setMatchersToBeDescribedWithExtraTypeInfo(indexesOfMatchersToBeDescribedWithExtraTypeInfo);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,this.wanted = printSettings.print(wanted);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,this.actual = printSettings.print(actual);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,public String getWanted() {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,return wanted;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,public String getActual() {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,return actual;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\reporting\SmartPrinter.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,package org.mockito.internal.runners;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.internal.runners.InitializationError;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.internal.runners.JUnit4ClassRunner;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.runner.Description;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.runner.manipulation.Filter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.runner.manipulation.NoTestsRemainException;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.junit.runner.notification.RunNotifier;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.mockito.MockitoAnnotations;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,import org.mockito.internal.runners.util.FrameworkUsageValidator;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,"@SuppressWarnings(""deprecation"")",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,public class JUnit44RunnerImpl implements RunnerImpl {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,JUnit4ClassRunner runner;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,public JUnit44RunnerImpl(Class<?> klass) throws InitializationError {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,this.runner = new JUnit4ClassRunner(klass) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,@Override,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,protected Object createTest() throws Exception {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,Object test = super.createTest();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,MockitoAnnotations.initMocks(test);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,return test;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,};,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,public void run(RunNotifier notifier) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,// add listener that validates framework usage at the end of each test,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,notifier.addListener(new FrameworkUsageValidator(notifier));,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,runner.run(notifier);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,public Description getDescription() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,return runner.getDescription();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,public void filter(Filter filter) throws NoTestsRemainException {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,runner.filter(filter);,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit44RunnerImpl.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,package org.mockito.internal.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runner.manipulation.Filter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runner.manipulation.NoTestsRemainException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runner.notification.RunNotifier;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runners.BlockJUnit4ClassRunner;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runners.model.FrameworkMethod;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runners.model.InitializationError;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.junit.runners.model.Statement;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.mockito.MockitoAnnotations;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,import org.mockito.internal.runners.util.FrameworkUsageValidator;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,public class JUnit45AndHigherRunnerImpl implements RunnerImpl {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,private final BlockJUnit4ClassRunner runner;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,public JUnit45AndHigherRunnerImpl(Class<?> klass) throws InitializationError {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,runner = new BlockJUnit4ClassRunner(klass) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,"protected Statement withBefores(FrameworkMethod method, Object target,",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,Statement statement) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,// init annotated mocks before tests,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,MockitoAnnotations.initMocks(target);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,"return super.withBefores(method, target, statement);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,};,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,public void run(final RunNotifier notifier) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,// add listener that validates framework usage at the end of each test,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,notifier.addListener(new FrameworkUsageValidator(notifier));,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,runner.run(notifier);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,public Description getDescription() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,return runner.getDescription();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,public void filter(Filter filter) throws NoTestsRemainException {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,runner.filter(filter);,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\JUnit45AndHigherRunnerImpl.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,package org.mockito.internal.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,import org.mockito.internal.runners.util.RunnerProvider;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,import org.mockito.internal.runners.util.TestMethodsFinder;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,import java.lang.reflect.InvocationTargetException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,public class RunnerFactory {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,private final RunnerProvider runnerProvider;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,RunnerFactory(RunnerProvider runnerProvider) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,this.runnerProvider = runnerProvider;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,public RunnerFactory() {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,this(new RunnerProvider());,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,public RunnerImpl create(Class<?> klass) throws InvocationTargetException {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,try {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,if (runnerProvider.isJUnit45OrHigherAvailable()) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"return runnerProvider.newInstance(""org.mockito.internal.runners.JUnit45AndHigherRunnerImpl"", klass);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,} else {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"return runnerProvider.newInstance(""org.mockito.internal.runners.JUnit44RunnerImpl"", klass);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,} catch (InvocationTargetException e) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,if (!new TestMethodsFinder().hasTestMethods(klass)) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,throw new MockitoException(,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""\n"" +",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""\n"" +",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""No tests found in "" + klass.getSimpleName() + ""\n"" +",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""Haven't you forgot @Test annotation?\n""",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,", e);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,throw e;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,} catch (Throwable t) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,throw new MockitoException(,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""\n"" +",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""\n"" +",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""MockitoRunner can only be used with JUnit 4.4 or higher.\n"" +",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\n"" +",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\n"" +",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,"""If you get this error despite using JUnit 4.4 or higher then please report this error to the mockito mailing list.\n""",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,", t);",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerFactory.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,package org.mockito.internal.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,import org.junit.runner.manipulation.Filterable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,import org.junit.runner.notification.RunNotifier;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,* I'm using this surrogate interface to hide internal Runner implementations.,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,* Surrogate cannot be used with &#064;RunWith therefore it is less likely clients will use interal runners.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,public interface RunnerImpl extends Filterable{,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,void run(RunNotifier notifier);,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,Description getDescription();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\RunnerImpl.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,package org.mockito.internal.runners.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,import org.junit.runner.notification.Failure;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,import org.junit.runner.notification.RunListener;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,import org.junit.runner.notification.RunNotifier;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,import org.mockito.Mockito;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,public class FrameworkUsageValidator extends RunListener {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,private final RunNotifier notifier;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,public FrameworkUsageValidator(RunNotifier notifier) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,this.notifier = notifier;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,@Override,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,public void testFinished(Description description) throws Exception {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,super.testFinished(description);,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,try {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,Mockito.validateMockitoUsage();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,} catch(Throwable t) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,"notifier.fireTestFailure(new Failure(description, t));",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\FrameworkUsageValidator.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,package org.mockito.internal.runners.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,import java.lang.reflect.Constructor;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,import java.lang.reflect.InvocationTargetException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,import org.mockito.internal.runners.RunnerImpl;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,public class RunnerProvider {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,private static boolean hasJUnit45OrHigher;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,static {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,try {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,"Class.forName(""org.junit.runners.BlockJUnit4ClassRunner"");",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,hasJUnit45OrHigher = true;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,} catch (Throwable t) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,hasJUnit45OrHigher = false;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,public boolean isJUnit45OrHigherAvailable() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,return hasJUnit45OrHigher;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,"public RunnerImpl newInstance(String runnerClassName, Class<?> constructorParam) throws Exception {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,Constructor<?> constructor;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,try {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,Class<?> runnerClass = Class.forName(runnerClassName);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,constructor = runnerClass.getConstructor(Class.class.getClass());,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,} catch (Exception e) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,throw new RuntimeException(e);,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,try {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,return (RunnerImpl) constructor.newInstance(constructorParam);,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,} catch (InvocationTargetException e) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,throw e;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,} catch (Exception e) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,throw new RuntimeException(e);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\RunnerProvider.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,package org.mockito.internal.runners.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,import org.junit.Test;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,import java.lang.reflect.Method;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,public class TestMethodsFinder {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,public boolean hasTestMethods(Class<?> klass) {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,Method[] methods = klass.getMethods();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,for(Method m:methods) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,if (m.isAnnotationPresent(Test.class)) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,return true;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,return false;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\runners\util\TestMethodsFinder.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.internal.stubbing.answers.CallsRealMethods;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.internal.stubbing.answers.Returns;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.internal.stubbing.answers.ThrowsException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.internal.stubbing.answers.ThrowsExceptionClass;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.stubbing.DeprecatedOngoingStubbing;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,import org.mockito.stubbing.OngoingStubbing;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,"public abstract class BaseStubbing<T> implements OngoingStubbing<T>, DeprecatedOngoingStubbing<T> {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,//TODO why we need this method? The other thenReturn covers it.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public OngoingStubbing<T> thenReturn(T value) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return thenAnswer(new Returns(value));,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,"public OngoingStubbing<T> thenReturn(T value, T... values) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,OngoingStubbing<T> stubbing = thenReturn(value);,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,if (values == null) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,//TODO below does not seem right,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return stubbing.thenReturn(null);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,for (T v: values) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,stubbing = stubbing.thenReturn(v);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return stubbing;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,private OngoingStubbing<T> thenThrow(Throwable throwable) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return thenAnswer(new ThrowsException(throwable));,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public OngoingStubbing<T> thenThrow(Throwable... throwables) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,if (throwables == null) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,thenThrow((Throwable) null);,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,OngoingStubbing<T> stubbing = null;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,for (Throwable t: throwables) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,if (stubbing == null) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,stubbing = thenThrow(t);,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,} else {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,stubbing = stubbing.thenThrow(t);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return stubbing;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,private OngoingStubbing<T> thenThrow(Class<? extends Throwable> throwableClass) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return thenAnswer(new ThrowsExceptionClass(throwableClass));,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public OngoingStubbing<T> thenThrow(Class<? extends Throwable>... throwableClasses) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,if (throwableClasses == null) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,thenThrow((Throwable) null);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,OngoingStubbing<T> stubbing = null;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,for (Class<? extends Throwable> t: throwableClasses) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,if (stubbing == null) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,stubbing = thenThrow(t);,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,} else {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,stubbing = stubbing.thenThrow(t);,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return stubbing;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public OngoingStubbing<T> thenCallRealMethod() {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return thenAnswer(new CallsRealMethods());,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public DeprecatedOngoingStubbing<T> toReturn(T value) {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return toAnswer(new Returns(value));,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,public DeprecatedOngoingStubbing<T> toThrow(Throwable throwable) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,return toAnswer(new ThrowsException(throwable));,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\BaseStubbing.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,import org.mockito.stubbing.Answer;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,import org.mockito.stubbing.DeprecatedOngoingStubbing;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,import org.mockito.stubbing.OngoingStubbing;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public class ConsecutiveStubbing<T> extends BaseStubbing<T> {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,private final InvocationContainerImpl invocationContainerImpl;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public ConsecutiveStubbing(InvocationContainerImpl invocationContainerImpl) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,this.invocationContainerImpl = invocationContainerImpl;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public OngoingStubbing<T> thenAnswer(Answer<?> answer) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,invocationContainerImpl.addConsecutiveAnswer(answer);,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,return this;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public OngoingStubbing<T> then(Answer<?> answer) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,return thenAnswer(answer);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,invocationContainerImpl.addConsecutiveAnswer(answer);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,return this;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,public <M> M getMock() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,return (M) invocationContainerImpl.invokedMock();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\ConsecutiveStubbing.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,import org.mockito.invocation.Invocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,import java.util.List;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,//TODO move to different package,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,public interface InvocationContainer {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,List<Invocation> getInvocations();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,List<StubbedInvocationMatcher> getStubbedInvocations();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainer.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.invocation.InvocationMatcher;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.invocation.StubInfoImpl;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.progress.MockingProgress;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.stubbing.answers.AnswersValidator;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.verification.DefaultRegisteredInvocations;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.verification.RegisteredInvocations;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.internal.verification.SingleRegisteredInvocation;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.mock.MockCreationSettings;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import org.mockito.stubbing.Answer;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import java.io.Serializable;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import java.util.ArrayList;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import java.util.LinkedList;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,import java.util.List;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"@SuppressWarnings(""unchecked"")",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"public class InvocationContainerImpl implements InvocationContainer, Serializable {",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private static final long serialVersionUID = -5334301962749537177L;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private final LinkedList<StubbedInvocationMatcher> stubbed = new LinkedList<StubbedInvocationMatcher>();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private final MockingProgress mockingProgress;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private final List<Answer> answersForStubbing = new ArrayList<Answer>();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private final RegisteredInvocations registeredInvocations;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private InvocationMatcher invocationForStubbing;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"public InvocationContainerImpl(MockingProgress mockingProgress, MockCreationSettings mockSettings) {",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,this.mockingProgress = mockingProgress;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,this.registeredInvocations = createRegisteredInvocations(mockSettings);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void setInvocationForPotentialStubbing(InvocationMatcher invocation) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,registeredInvocations.add(invocation.getInvocation());,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,this.invocationForStubbing = invocation;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void resetInvocationForPotentialStubbing(InvocationMatcher invocationMatcher) {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,this.invocationForStubbing = invocationMatcher;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void addAnswer(Answer answer) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,registeredInvocations.removeLast();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"addAnswer(answer, false);",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void addConsecutiveAnswer(Answer answer) {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"addAnswer(answer, true);",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"public void addAnswer(Answer answer, boolean isConsecutive) {",57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,Invocation invocation = invocationForStubbing.getInvocation();,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,mockingProgress.stubbingCompleted(invocation);,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,AnswersValidator answersValidator = new AnswersValidator();,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"answersValidator.validate(answer, invocation);",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,synchronized (stubbed) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,if (isConsecutive) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,stubbed.getFirst().addAnswer(answer);,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,} else {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"stubbed.addFirst(new StubbedInvocationMatcher(invocationForStubbing, answer));",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,Object answerTo(Invocation invocation) throws Throwable {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return findAnswerFor(invocation).answer(invocation);,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public StubbedInvocationMatcher findAnswerFor(Invocation invocation) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,synchronized (stubbed) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,for (StubbedInvocationMatcher s : stubbed) {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,if (s.matches(invocation)) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,s.markStubUsed(invocation);,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,invocation.markStubbed(new StubInfoImpl(s));,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return s;,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return null;,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void addAnswerForVoidMethod(Answer answer) {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,answersForStubbing.add(answer);,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void setAnswersForStubbing(List<Answer> answers) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,answersForStubbing.addAll(answers);,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public boolean hasAnswersForStubbing() {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return !answersForStubbing.isEmpty();,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public boolean hasInvocationForPotentialStubbing() {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return !registeredInvocations.isEmpty();,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,105,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public void setMethodForStubbing(InvocationMatcher invocation) {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,invocationForStubbing = invocation;,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,assert hasAnswersForStubbing();,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,for (int i = 0; i < answersForStubbing.size(); i++) {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"addAnswer(answersForStubbing.get(i), i != 0);",110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,answersForStubbing.clear();,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,114,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,@Override,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public String toString() {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,"return ""invocationForStubbing: "" + invocationForStubbing;",117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,119,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public List<Invocation> getInvocations() {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return registeredInvocations.getAll();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public List<StubbedInvocationMatcher> getStubbedInvocations() {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return stubbed;,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,127,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public Object invokedMock() {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return invocationForStubbing.getInvocation().getMock();,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,131,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,public InvocationMatcher getInvocationForStubbing() {,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return invocationForStubbing;,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,,135,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,private RegisteredInvocations createRegisteredInvocations(MockCreationSettings mockSettings) {,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,return mockSettings.isStubOnly(),137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,? new SingleRegisteredInvocation(),138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,: new DefaultRegisteredInvocations();,139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},140,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\InvocationContainerImpl.java,},141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import org.mockito.stubbing.DeprecatedOngoingStubbing;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import org.mockito.stubbing.OngoingStubbing;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public class OngoingStubbingImpl<T> extends BaseStubbing<T> {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,private final InvocationContainerImpl invocationContainerImpl;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,this.invocationContainerImpl = invocationContainerImpl;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public OngoingStubbing<T> thenAnswer(Answer<?> answer) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,if(!invocationContainerImpl.hasInvocationForPotentialStubbing()) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,new Reporter().incorrectUseOfApi();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,invocationContainerImpl.addAnswer(answer);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,return new ConsecutiveStubbing<T>(invocationContainerImpl);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public OngoingStubbing<T> then(Answer<?> answer) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,return thenAnswer(answer);,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,invocationContainerImpl.addAnswer(answer);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,return new ConsecutiveStubbing<T>(invocationContainerImpl);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public List<Invocation> getRegisteredInvocations() {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,//TODO interface for tests,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,return invocationContainerImpl.getInvocations();,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,public <M> M getMock() {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,return (M) invocationContainerImpl.invokedMock();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\OngoingStubbingImpl.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import java.util.Queue;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import java.util.concurrent.ConcurrentLinkedQueue;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import org.mockito.invocation.DescribedInvocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import org.mockito.invocation.InvocationOnMock;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,import org.mockito.stubbing.Answer;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,"@SuppressWarnings(""unchecked"")",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,"public class StubbedInvocationMatcher extends InvocationMatcher implements Answer, Serializable {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,private static final long serialVersionUID = 4919105134123672727L;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,private final Queue<Answer> answers = new ConcurrentLinkedQueue<Answer>();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,private DescribedInvocation usedAt;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,"public StubbedInvocationMatcher(InvocationMatcher invocation, Answer answer) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,"super(invocation.getInvocation(), invocation.getMatchers());",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,this.answers.add(answer);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,public Object answer(InvocationOnMock invocation) throws Throwable {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,//see ThreadsShareGenerouslyStubbedMockTest,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,Answer a;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,synchronized(answers) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,a = answers.size() == 1 ? answers.peek() : answers.poll();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,return a.answer(invocation);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,public void addAnswer(Answer answer) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,answers.add(answer);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,public void markStubUsed(DescribedInvocation usedAt) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,this.usedAt = usedAt;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,public boolean wasUsed() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,return usedAt != null;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,@Override,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,public String toString() {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,"return super.toString() + "" stubbed with: "" + answers;",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubbedInvocationMatcher.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import org.mockito.internal.stubbing.answers.*;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import org.mockito.internal.util.MockUtil;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import org.mockito.stubbing.Stubber;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import java.util.LinkedList;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,import java.util.List;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,"@SuppressWarnings(""unchecked"")",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public class StubberImpl implements Stubber {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,final List<Answer> answers = new LinkedList<Answer>();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,private final Reporter reporter = new Reporter();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public <T> T when(T mock) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,MockUtil mockUtil = new MockUtil();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,if (mock == null) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,reporter.nullPassedToWhenMethod();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,} else {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,if (!mockUtil.isMock(mock)) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,reporter.notAMockPassedToWhenMethod();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,mockUtil.getMockHandler(mock).setAnswersForStubbing(answers);,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return mock;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doReturn(Object toBeReturned) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(new Returns(toBeReturned));,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doThrow(Throwable toBeThrown) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(new ThrowsException(toBeThrown));,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doThrow(Class<? extends Throwable> toBeThrown) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(new ThrowsExceptionClass(toBeThrown));,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doNothing() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(new DoesNothing());,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doAnswer(Answer answer) {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(answer);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,public Stubber doCallRealMethod() {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,answers.add(new CallsRealMethods());,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,return this;,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\StubberImpl.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,package org.mockito.internal.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,import org.mockito.internal.stubbing.answers.DoesNothing;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,import org.mockito.internal.stubbing.answers.ThrowsException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,import org.mockito.stubbing.VoidMethodStubbable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,public class VoidMethodStubbableImpl<T> implements VoidMethodStubbable<T> {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,private final T mock;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,private final InvocationContainerImpl invocationContainerImpl;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,"public VoidMethodStubbableImpl(T mock, InvocationContainerImpl invocationContainerImpl) {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,this.mock = mock;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,this.invocationContainerImpl = invocationContainerImpl;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,public VoidMethodStubbable<T> toThrow(Throwable throwable) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,invocationContainerImpl.addAnswerForVoidMethod(new ThrowsException(throwable));,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,return this;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,public VoidMethodStubbable<T> toReturn() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,invocationContainerImpl.addAnswerForVoidMethod(new DoesNothing());,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,return this;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,public VoidMethodStubbable<T> toAnswer(Answer<?> answer) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,invocationContainerImpl.addAnswerForVoidMethod(answer);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,return this;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,public T on() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,return mock;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\VoidMethodStubbableImpl.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,import org.mockito.ReturnValues;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,import org.mockito.invocation.InvocationOnMock;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,import org.mockito.stubbing.Answer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,//It's ok to suppress deprecation because this class goes away as soon as ReturnValues disappears in future release,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,"@SuppressWarnings(""deprecation"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,"public class AnswerReturnValuesAdapter implements Answer<Object>, Serializable {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,private static final long serialVersionUID = 1418158596876713469L;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,private final ReturnValues returnValues;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,public AnswerReturnValuesAdapter(ReturnValues returnValues) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,this.returnValues = returnValues;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,public Object answer(InvocationOnMock invocation) throws Throwable {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,return returnValues.valueFor(invocation);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswerReturnValuesAdapter.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,public class AnswersValidator {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,private final Reporter reporter = new Reporter();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"public void validate(Answer<?> answer, Invocation invocation) {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,MethodInfo methodInfo = new MethodInfo(invocation);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer instanceof ThrowsException) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"validateException((ThrowsException) answer, methodInfo);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer instanceof Returns) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"validateReturnValue((Returns) answer, methodInfo);",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer instanceof DoesNothing) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"validateDoNothing((DoesNothing) answer, methodInfo);",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer instanceof CallsRealMethods) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"validateMockingConcreteClass((CallsRealMethods) answer, methodInfo);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer instanceof ReturnsArgumentAt) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,ReturnsArgumentAt returnsArgumentAt = (ReturnsArgumentAt) answer;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"validateReturnArgIdentity(returnsArgumentAt, invocation);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"private void validateReturnArgIdentity(ReturnsArgumentAt returnsArgumentAt, Invocation invocation) {",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,returnsArgumentAt.validateIndexWithinInvocationRange(invocation);,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,MethodInfo methodInfo = new MethodInfo(invocation);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (!methodInfo.isValidReturnType(returnsArgumentAt.returnedTypeOnSignature(invocation))) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"new Reporter().wrongTypeOfArgumentToReturn(invocation, methodInfo.printMethodReturnType(),",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"returnsArgumentAt.returnedTypeOnSignature(invocation),",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,returnsArgumentAt.wantedArgumentPosition());,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"private void validateMockingConcreteClass(CallsRealMethods answer, MethodInfo methodInfo) {",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (methodInfo.isAbstract()) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.cannotCallAbstractRealMethod();,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"private void validateDoNothing(DoesNothing answer, MethodInfo methodInfo) {",57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (!methodInfo.isVoid()) {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.onlyVoidMethodsCanBeSetToDoNothing();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"private void validateReturnValue(Returns answer, MethodInfo methodInfo) {",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (methodInfo.isVoid()) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName());,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (answer.returnsNull() && methodInfo.returnsPrimitive()) {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"reporter.wrongTypeOfReturnValue(methodInfo.printMethodReturnType(), ""null"", methodInfo.getMethodName());",69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (!answer.returnsNull() && !methodInfo.isValidReturnType(answer.getReturnType())) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"reporter.wrongTypeOfReturnValue(methodInfo.printMethodReturnType(), answer.printReturnType(), methodInfo.getMethodName());",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"private void validateException(ThrowsException answer, MethodInfo methodInfo) {",77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,Throwable throwable = answer.getThrowable();,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (throwable == null) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.cannotStubWithNullThrowable();,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (throwable instanceof RuntimeException || throwable instanceof Error) {,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,return;,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (!methodInfo.isValidException(throwable)) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.checkedExceptionInvalid(throwable);,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"public void validateDefaultAnswerReturnedValue(Invocation invocation, Object returnedValue) {",92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,MethodInfo methodInfo = new MethodInfo(invocation);,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,if (returnedValue != null && !methodInfo.isValidReturnType(returnedValue.getClass())) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,reporter.wrongTypeReturnedByDefaultAnswer(,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"invocation.getMock(),",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"methodInfo.printMethodReturnType(),",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,"returnedValue.getClass().getSimpleName(),",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,methodInfo.getMethodName());,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\AnswersValidator.java,},102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,import static org.mockito.Answers.RETURNS_DEFAULTS;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,import java.lang.reflect.Modifier;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,import org.mockito.invocation.InvocationOnMock;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,import org.mockito.stubbing.Answer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* Optional Answer that adds partial mocking support,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* {@link Answer} can be used to define the return values of unstubbed invocations.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* This implementation can be helpful when working with legacy code.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* When this implementation is used, unstubbed methods will delegate to the real implementation.",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* This is a way to create a partial mock object that calls real methods by default.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* As usual you are going to read <b>the partial mock warning</b>:,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* In most cases, this is not the way you want to design your application.",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* <p>,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* However, there are rare cases when partial mocks come handy:",28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,* <p>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,*/,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,"public class CallsRealMethods implements Answer<Object>, Serializable {",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,private static final long serialVersionUID = 9057165148930624087L;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,public Object answer(InvocationOnMock invocation) throws Throwable {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,if (Modifier.isAbstract(invocation.getMethod().getModifiers())) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,return RETURNS_DEFAULTS.answer(invocation);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,return invocation.callRealMethod();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\CallsRealMethods.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,import org.mockito.internal.util.reflection.LenientCopyTool;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,import org.objenesis.ObjenesisHelper;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,//TODO this needs documentation and further analysis - what if someone changes the answer?,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,//we might think about implementing it straight on MockSettings,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,public class ClonesArguments implements Answer<Object> {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,public Object answer(InvocationOnMock invocation) throws Throwable {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,Object[] arguments = invocation.getArguments();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,for (int i = 0; i < arguments.length; i++) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,Object from = arguments[i];,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,Object newInstance = ObjenesisHelper.newInstance(from.getClass());,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,"new LenientCopyTool().copyToRealObject(from, newInstance);",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,arguments[i] = newInstance;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,return new ReturnsEmptyValues().answer(invocation);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ClonesArguments.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,"public class DoesNothing implements Answer<Object>, Serializable {",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,private static final long serialVersionUID = 4840880517740698416L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,public Object answer(InvocationOnMock invocation) throws Throwable {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,return null;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\DoesNothing.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,import org.mockito.internal.invocation.AbstractAwareMethod;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,import org.mockito.internal.util.Primitives;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,import java.lang.reflect.Method;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,import java.lang.reflect.Modifier;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,"* by Szczepan Faber, created at: 3/31/12",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public class MethodInfo implements AbstractAwareMethod {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,private final Method method;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public MethodInfo(Invocation theInvocation) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,this.method = theInvocation.getMethod();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean isValidException(Throwable throwable) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,Class<?>[] exceptions = method.getExceptionTypes();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,Class<?> throwableClass = throwable.getClass();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,for (Class<?> exception : exceptions) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,if (exception.isAssignableFrom(throwableClass)) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return true;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return false;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean isValidReturnType(Class clazz) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,if (method.getReturnType().isPrimitive() || clazz.isPrimitive()) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return Primitives.primitiveTypeOf(clazz) == Primitives.primitiveTypeOf(method.getReturnType());,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,} else {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method.getReturnType().isAssignableFrom(clazz);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean isVoid() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return this.method.getReturnType() == Void.TYPE;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public String printMethodReturnType() {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method.getReturnType().getSimpleName();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public String getMethodName() {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method.getName();,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean returnsPrimitive() {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method.getReturnType().isPrimitive();,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,60,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public Method getMethod() {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method;,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean isDeclaredOnInterface() {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return method.getDeclaringClass().isInterface();,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,public boolean isAbstract() {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,return (method.getModifiers() & Modifier.ABSTRACT) != 0;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\MethodInfo.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,"public class Returns implements Answer<Object>, Serializable {",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,private static final long serialVersionUID = -6245608253574215396L;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,private final Object value;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public Returns(Object value) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,this.value = value;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public Object answer(InvocationOnMock invocation) throws Throwable {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,return value;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public String printReturnType() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,return value.getClass().getSimpleName();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public Class<?> getReturnType() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,return value.getClass();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public boolean returnsNull() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,return value == null;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,@Override,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,public String toString() {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,"return ""Returns: "" + value;",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\Returns.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,import org.mockito.invocation.InvocationOnMock;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* Returns the passed parameter identity at specified index.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* <p>The <code>argumentIndex</code> represents the index in the argument array of the invocation.</p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* <p>If this number equals -1 then the last argument is returned.</p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* @see org.mockito.AdditionalAnswers,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* @since 1.9.5,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,"public class ReturnsArgumentAt implements Answer<Object>, Serializable {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private static final long serialVersionUID = -589315085166295101L;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public static final int LAST_ARGUMENT = -1;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private final int wantedArgumentPosition;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* Build the identity answer to return the argument at the given position in the argument array.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,* @param wantedArgumentPosition The position of the argument identity to return in the invocation.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*                      Using <code>-1</code> indicates the last argument.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public ReturnsArgumentAt(int wantedArgumentPosition) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,this.wantedArgumentPosition = checkWithinAllowedRange(wantedArgumentPosition);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public Object answer(InvocationOnMock invocation) throws Throwable {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,validateIndexWithinInvocationRange(invocation);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return invocation.getArguments()[actualArgumentPosition(invocation)];,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private int actualArgumentPosition(InvocationOnMock invocation) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return returningLastArg() ?,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,lastArgumentIndexOf(invocation) :,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,argumentIndexOf(invocation);,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private boolean returningLastArg() {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return wantedArgumentPosition == LAST_ARGUMENT;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private int argumentIndexOf(InvocationOnMock invocation) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return wantedArgumentPosition;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private int lastArgumentIndexOf(InvocationOnMock invocation) {,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return invocation.getArguments().length - 1;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private int checkWithinAllowedRange(int argumentPosition) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if (argumentPosition != LAST_ARGUMENT && argumentPosition < 0) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,new Reporter().invalidArgumentRangeAtIdentityAnswerCreationTime();,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return argumentPosition;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public int wantedArgumentPosition() {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return wantedArgumentPosition;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public void validateIndexWithinInvocationRange(InvocationOnMock invocation) {,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if (!argumentPositionInRange(invocation)) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,"new Reporter().invalidArgumentPositionRangeAtInvocationTime(invocation,",77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,"returningLastArg(),",78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,wantedArgumentPosition);,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,private boolean argumentPositionInRange(InvocationOnMock invocation) {,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,int actualArgumentPosition = actualArgumentPosition(invocation);,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if (actualArgumentPosition < 0) {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return false;,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if (!invocation.getMethod().isVarArgs()) {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return invocation.getArguments().length > actualArgumentPosition;,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,// for all varargs accepts positive ranges,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return true;,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,94,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,public Class returnedTypeOnSignature(InvocationOnMock invocation) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,int actualArgumentPosition = actualArgumentPosition(invocation);,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if(!invocation.getMethod().isVarArgs()) {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return invocation.getMethod().getParameterTypes()[actualArgumentPosition];,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,Class<?>[] parameterTypes = invocation.getMethod().getParameterTypes();,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,int varargPosition = parameterTypes.length - 1;,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,,104,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,if(actualArgumentPosition < varargPosition) {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return parameterTypes[actualArgumentPosition];,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,} else {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,return parameterTypes[varargPosition].getComponentType();,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsArgumentAt.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,import java.util.Collection;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,import java.util.LinkedList;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,import org.mockito.exceptions.base.MockitoException;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,import org.mockito.invocation.InvocationOnMock;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,import org.mockito.stubbing.Answer;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* Returns elements of the collection. Keeps returning the last element forever.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* Might be useful on occasion when you have a collection of elements to return.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* <p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,"* <pre class=""code""><code class=""java"">",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*   //this:,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,"*   when(mock.foo()).thenReturn(1, 2, 3);",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*   //is equivalent to:,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,"*   when(mock.foo()).thenAnswer(new ReturnsElementsOf(Arrays.asList(1, 2, 3)));",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* </code></pre>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* </p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* <p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* Also you might better want to use the static factory there,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* {@link org.mockito.AdditionalAnswers#returnsElementsOf(java.util.Collection)},27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* </p>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,* @see org.mockito.AdditionalAnswers,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,public class ReturnsElementsOf implements Answer<Object> {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,private final LinkedList<Object> elements;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,public ReturnsElementsOf(Collection<?> elements) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,if (elements == null) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,"throw new MockitoException(""ReturnsElementsOf does not accept null as constructor argument.\n"" +",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,"""Please pass a collection instance"");",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,this.elements = new LinkedList<Object>(elements);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,public Object answer(InvocationOnMock invocation) throws Throwable {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,if (elements.size() == 1),45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,return elements.get(0);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,else,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,return elements.poll();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ReturnsElementsOf.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,package org.mockito.internal.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,import org.mockito.internal.util.MockUtil;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,import java.io.Serializable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,"public class ThrowsException implements Answer<Object>, Serializable {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,private static final long serialVersionUID = 1128820328555183980L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,private final Throwable throwable;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,private final ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,public ThrowsException(Throwable throwable) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,this.throwable = throwable;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,public Object answer(InvocationOnMock invocation) throws Throwable {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,if (new MockUtil().isMock(throwable)) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,throw throwable;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,Throwable t = throwable.fillInStackTrace();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,filter.filter(t);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,throw t;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,public Throwable getThrowable() {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,return throwable;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsException.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,package org.mockito.internal.stubbing.answers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,import org.objenesis.ObjenesisHelper;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,import java.io.Serializable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,"public class ThrowsExceptionClass implements Answer<Object>, Serializable {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,private final Class<? extends Throwable> throwableClass;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,private final ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,public ThrowsExceptionClass(Class<? extends Throwable> throwableClass) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,this.throwableClass = throwableClass;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,public Object answer(InvocationOnMock invocation) throws Throwable {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,//TODO centralize the use of Objenesis. Why do we use ObjenesisHelper?,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,Throwable throwable = (Throwable) ObjenesisHelper.newInstance(throwableClass);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,throwable.fillInStackTrace();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,filter.filter(throwable);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,throw throwable;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,public Class<? extends Throwable> getThrowableClass() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,return throwableClass;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\answers\ThrowsExceptionClass.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,import org.mockito.internal.stubbing.answers.CallsRealMethods;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,import org.mockito.stubbing.Answer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* Enumeration of pre-configured mock answers,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* @deprecated - please use Answers from top Mockito package: {@link org.mockito.Answers},14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* <b>WARNING</b> Those answers no longer are used by the framework!!! Please use {@link org.mockito.Answers},16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,* See {@link Mockito} for more information.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,*/,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,@Deprecated,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,public enum Answers {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,"RETURNS_DEFAULTS(new GloballyConfiguredAnswer()),",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,"RETURNS_SMART_NULLS(new ReturnsSmartNulls()),",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,"RETURNS_MOCKS(new ReturnsMocks()),",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,"RETURNS_DEEP_STUBS(new ReturnsDeepStubs()),",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,CALLS_REAL_METHODS(new CallsRealMethods()),27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,private final Answer<Object> implementation;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,private Answers(Answer<Object> implementation) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,this.implementation = implementation;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,public Answer<Object> get() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,return implementation;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\Answers.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import java.lang.reflect.InvocationTargetException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import java.lang.reflect.Method;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.exceptions.Reporter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.exceptions.base.MockitoException;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.internal.stubbing.answers.MethodInfo;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.internal.util.Primitives;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.invocation.InvocationOnMock;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,import org.mockito.stubbing.Answer;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,* Internal answer to forward invocations on a real instance.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,*,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,* @since 1.9.5,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"public class ForwardsInvocations implements Answer<Object>, Serializable {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,private static final long serialVersionUID = -8343690268123254910L;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,private Object delegatedObject = null ;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,public ForwardsInvocations(Object delegatedObject) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,this.delegatedObject = delegatedObject ;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,public Object answer(InvocationOnMock invocation) throws Throwable {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,Method mockMethod = invocation.getMethod();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,Object result = null;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,try {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,Method delegateMethod = getDelegateMethod(mockMethod);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"if (!compatibleReturnTypes(mockMethod.getReturnType(), delegateMethod.getReturnType())) {",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"new Reporter().delegatedMethodHasWrongReturnType(mockMethod, delegateMethod, invocation.getMock(), delegatedObject);",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"result = delegateMethod.invoke(delegatedObject, invocation.getArguments());",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,} catch (NoSuchMethodException e) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"new Reporter().delegatedMethodDoesNotExistOnDelegate(mockMethod, invocation.getMock(), delegatedObject);",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,} catch (InvocationTargetException e) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,// propagate the original exception from the delegate,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,throw e.getCause();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,return result;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,private Method getDelegateMethod(Method mockMethod) throws NoSuchMethodException {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,if (mockMethod.getDeclaringClass().isAssignableFrom(delegatedObject.getClass())) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,// Compatible class. Return original method.,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,return mockMethod;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,} else {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,// Return method of delegate object with the same signature as mockMethod.,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"return delegatedObject.getClass().getMethod(mockMethod.getName(), mockMethod.getParameterTypes());",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,"private static boolean compatibleReturnTypes(Class<?> superType, Class<?> subType) {",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,return superType.equals(subType) || superType.isAssignableFrom(subType);,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ForwardsInvocations.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,import org.mockito.configuration.IMockitoConfiguration;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,import org.mockito.internal.configuration.GlobalConfiguration;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,import org.mockito.invocation.InvocationOnMock;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,import org.mockito.stubbing.Answer;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,* Globally configured Answer.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,* <p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,* See javadoc for {@link IMockitoConfiguration},17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,"public class GloballyConfiguredAnswer implements Answer<Object>, Serializable {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,private static final long serialVersionUID = 3585893470101750917L;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,public Object answer(InvocationOnMock invocation) throws Throwable {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,return new GlobalConfiguration().getDefaultAnswer().answer(invocation);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\GloballyConfiguredAnswer.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.MockSettings;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.InternalMockHandler;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.MockitoCore;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.creation.settings.CreationSettings;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.stubbing.InvocationContainerImpl;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.stubbing.StubbedInvocationMatcher;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.util.MockUtil;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.internal.util.reflection.GenericMetadataSupport;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.invocation.InvocationOnMock;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.mock.MockCreationSettings;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import org.mockito.stubbing.Answer;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import java.io.IOException;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import java.io.Serializable;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,import static org.mockito.Mockito.withSettings;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,/**,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* Returning deep stub implementation.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* Will return previously created mock if the invocation matches.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"* <p>Supports nested generic information, with this answer you can write code like this :",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"* <pre class=""code""><code class=""java"">",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"*     interface GenericsNest&lt;K extends Comparable&lt;K&gt; & Cloneable&gt; extends Map&lt;K, Set&lt;Number&gt;&gt; {}",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"*     GenericsNest&lt;?&gt; mock = mock(GenericsNest.class, new ReturnsGenericDeepStubs());",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*     Number number = mock.entrySet().iterator().next().getValue().iterator().next();,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* </code></pre>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* </p>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* @see org.mockito.Mockito#RETURNS_DEEP_STUBS,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* @see org.mockito.Answers#RETURNS_DEEP_STUBS,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"public class ReturnsDeepStubs implements Answer<Object>, Serializable {",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static final long serialVersionUID = -7105341425736035847L;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,public Object answer(InvocationOnMock invocation) throws Throwable {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,GenericMetadataSupport returnTypeGenericMetadata =,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,Class<?> rawType = returnTypeGenericMetadata.rawType();,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,if (!mockitoCore().isTypeMockable(rawType)) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return delegate().returnValueFor(rawType);,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"return deepStub(invocation, returnTypeGenericMetadata);",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private Object deepStub(InvocationOnMock invocation, GenericMetadataSupport returnTypeGenericMetadata) throws Throwable {",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,// matches invocation for verification,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return stubbedInvocationMatcher.answer(invocation);,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,// record deep stub answer,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return recordDeepStubAnswer(,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,container,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,);,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,/**,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* Creates a mock using the Generics Metadata.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"* <li>Finally as we want to mock the actual type, but we want to pass along the contextual generics meta-data",80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"* that was resolved for the current return type, for this to happen we associate to the mock an new instance of",81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* {@link ReturnsDeepStubs} answer in which we will store the returned type generic metadata.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* @param returnTypeGenericMetadata The metadata to use to create the new mock.,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* @param parentMock The parent of the current deep stub mock.,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,* @return The mock,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,*/,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata, Object parentMock) {",88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,MockCreationSettings parentMockSettings = new MockUtil().getMockSettings(parentMock);,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return mockitoCore().mock(,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"returnTypeGenericMetadata.rawType(),",91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"withSettingsUsing(returnTypeGenericMetadata, parentMockSettings)",92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,);,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,95,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata, MockCreationSettings parentMockSettings) {",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()),98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,: withSettings();,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,100,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"return propagateSerializationSettings(mockSettings, parentMockSettings)",101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,104,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private MockSettings propagateSerializationSettings(MockSettings mockSettings, MockCreationSettings parentMockSettings) {",105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return mockSettings.serializable(parentMockSettings.getSerializableMode());,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,108,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,112,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private Object recordDeepStubAnswer(final Object mock, InvocationContainerImpl container) throws Throwable {",113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"container.addAnswer(new DeeplyStubbedAnswer(mock), false);",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return mock;,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,protected GenericMetadataSupport actualParameterizedType(Object mock) {,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,CreationSettings mockSettings = (CreationSettings) new MockUtil().getMockHandler(mock).getMockSettings();,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock());,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static class ReturnsDeepStubsSerializationFallback extends ReturnsDeepStubs implements Serializable {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"@SuppressWarnings(""serial"") // not gonna be serialized",125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private final GenericMetadataSupport returnTypeGenericMetadata;,126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,127,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata) {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,this.returnTypeGenericMetadata = returnTypeGenericMetadata;,129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,131,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,@Override,132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,protected GenericMetadataSupport actualParameterizedType(Object mock) {,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return returnTypeGenericMetadata;,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private Object writeReplace() throws IOException {,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return Mockito.RETURNS_DEEP_STUBS;,137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,140,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,141,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"private static class DeeplyStubbedAnswer implements Answer<Object>, Serializable {",142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,"@SuppressWarnings(""serial"") // serialization will fail with a nice message if mock not serializable",143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private final Object mock;,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,145,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,DeeplyStubbedAnswer(Object mock) {,146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,this.mock = mock;,147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,public Object answer(InvocationOnMock invocation) throws Throwable {,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return mock;,150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},151,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,153,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,154,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static MockitoCore mockitoCore() {,155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return LazyHolder.MOCKITO_CORE;,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,158,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static ReturnsEmptyValues delegate() {,159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,return LazyHolder.DELEGATE;,160,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,,162,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static class LazyHolder {,163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static final MockitoCore MOCKITO_CORE = new MockitoCore();,164,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,private static final ReturnsEmptyValues DELEGATE = new ReturnsEmptyValues();,165,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},166,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsDeepStubs.java,},167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,package org.mockito.internal.stubbing.defaultanswers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.ArrayList;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.Collection;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.HashMap;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.HashSet;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.LinkedHashMap;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.LinkedHashSet;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.LinkedList;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.List;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.Map;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.Set;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.SortedMap;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.SortedSet;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.TreeMap;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import java.util.TreeSet;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.internal.util.MockUtil;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.internal.util.ObjectMethodsGuru;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.internal.util.Primitives;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.invocation.InvocationOnMock;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.mock.MockName;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,import org.mockito.stubbing.Answer;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* Default answer of every Mockito mock.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <ul>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*  Returns appropriate primitive for primitive-returning methods,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"*  Returns consistent values for primitive wrapper classes (e.g. int-returning method returns 0 <b>and</b> Integer-returning method returns 0, too)",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*  Returns empty collection for collection-returning methods (works for most commonly used collection types),40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*  Returns description of mock for toString() method,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*  Returns zero if references are equals otherwise non-zero for Comparable#compareTo(T other) method (see issue 184),46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* <li>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*  Returns null for everything else,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </li>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* </ul>,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*/,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"public class ReturnsEmptyValues implements Answer<Object>, Serializable {",53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,private static final long serialVersionUID = 1998191268711234347L;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,MockUtil mockUtil = new MockUtil();,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,/* (non-Javadoc),59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,* @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock),60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,public Object answer(InvocationOnMock invocation) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,if (methodsGuru.isToString(invocation.getMethod())) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,Object mock = invocation.getMock();,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,MockName name = mockUtil.getMockName(mock);,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,if (name.isDefault()) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return ""Mock for "" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + "", hashCode: "" + mock.hashCode();",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return name.toString();,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,//see issue 184.,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"//mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).",73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,//Only for compareTo() method by the Comparable interface,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,77,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,Class<?> returnType = invocation.getMethod().getReturnType();,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return returnValueFor(returnType);,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,81,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,Object returnValueFor(Class<?> type) {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,if (Primitives.isPrimitiveOrWrapper(type)) {,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return Primitives.defaultValueForPrimitiveOrWrapper(type);,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"//new instances are used instead of Collections.emptyList(), etc.",85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,//to avoid UnsupportedOperationException if code under test modifies returned collection,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == Iterable.class) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new ArrayList<Object>(0);,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == Collection.class) {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new LinkedList<Object>();,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == Set.class) {,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new HashSet<Object>();,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == HashSet.class) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new HashSet<Object>();,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == SortedSet.class) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new TreeSet<Object>();,96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == TreeSet.class) {,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new TreeSet<Object>();,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == LinkedHashSet.class) {,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new LinkedHashSet<Object>();,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == List.class) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new LinkedList<Object>();,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == LinkedList.class) {,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new LinkedList<Object>();,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == ArrayList.class) {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return new ArrayList<Object>();,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == Map.class) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return new HashMap<Object, Object>();",108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == HashMap.class) {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return new HashMap<Object, Object>();",110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == SortedMap.class) {,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return new TreeMap<Object, Object>();",112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == TreeMap.class) {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return new TreeMap<Object, Object>();",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,} else if (type == LinkedHashMap.class) {,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,"return new LinkedHashMap<Object, Object>();",116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,//Let's not care about the rest of collections.,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,return null;,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,,121,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsEmptyValues.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,import org.mockito.internal.MockitoCore;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,import org.mockito.internal.creation.MockSettingsImpl;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,import java.io.Serializable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,"public class ReturnsMocks implements Answer<Object>, Serializable {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,private static final long serialVersionUID = -6755257986994634579L;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,private final MockitoCore mockitoCore = new MockitoCore();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,private final Answer<Object> delegate = new ReturnsMoreEmptyValues();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,public Object answer(InvocationOnMock invocation) throws Throwable {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,Object ret = delegate.answer(invocation);,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,if (ret != null) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,return ret;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,return returnValueFor(invocation.getMethod().getReturnType());,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,Object returnValueFor(Class<?> clazz) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,if (!mockitoCore.isTypeMockable(clazz)) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,return null;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,"return mockitoCore.mock(clazz, new MockSettingsImpl().defaultAnswer(this));",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMocks.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,package org.mockito.internal.stubbing.defaultanswers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,import org.mockito.invocation.InvocationOnMock;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,import java.io.Serializable;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,import java.lang.reflect.Array;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* It's likely this implementation will be used by default by every Mockito 2.0 mock.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* Currently <b>used only</b> by {@link Mockito#RETURNS_SMART_NULLS},18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* Current version of Mockito mocks by deafult use {@link ReturnsEmptyValues},20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <ul>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns appropriate primitive for primitive-returning methods,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,"*  Returns consistent values for primitive wrapper classes (e.g. int-returning method retuns 0 <b>and</b> Integer-returning method returns 0, too)",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns empty collection for collection-returning methods (works for most commonly used collection types),29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns empty array for array-returning methods,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,"*  Returns """" for String-returning method",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns description of mock for toString() method,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns non-zero for Comparable#compareTo(T other) method (see issue 184),41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* <li>,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*  Returns null for everything else,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </li>,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* </ul>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*/,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,"public class ReturnsMoreEmptyValues implements Answer<Object>, Serializable {",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,private static final long serialVersionUID = -2816745041482698471L;,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,private final Answer<Object> delegate = new ReturnsEmptyValues();,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,/* (non-Javadoc),53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,* @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock),54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,public Object answer(InvocationOnMock invocation) throws Throwable {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,Object ret = delegate.answer(invocation);,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,if (ret != null) {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,return ret;,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,Class<?> returnType = invocation.getMethod().getReturnType();,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,return returnValueFor(returnType);,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,Object returnValueFor(Class<?> type) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,if (type == String.class) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,"return """";",68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,}  else if (type.isArray()) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,Class<?> componenetType = type.getComponentType();,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,"return Array.newInstance(componenetType, 0);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,return null;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsMoreEmptyValues.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,package org.mockito.internal.stubbing.defaultanswers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import java.lang.reflect.Modifier;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.Mockito;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.exceptions.Reporter;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.internal.debugging.LocationImpl;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.invocation.Location;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.internal.util.ObjectMethodsGuru;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.invocation.InvocationOnMock;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,import org.mockito.stubbing.Answer;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* Optional Answer that can be used with,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"* {@link Mockito#mock(Class, Answer)}",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* <p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* This implementation can be helpful when working with legacy code. Unstubbed,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* methods often return null. If your code uses the object returned by an,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* unstubbed call you get a NullPointerException. This implementation of,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* Answer returns SmartNulls instead of nulls.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* SmartNull gives nicer exception message than NPE because it points out the,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* line where unstubbed method was called. You just click on the stack trace.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* <p>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* ReturnsSmartNulls first tries to return ordinary return values (see,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* {@link ReturnsMoreEmptyValues}) then it tries to return SmartNull. If the,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* return type is not mockable (e.g. final) then ordinary null is returned.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* <p>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* ReturnsSmartNulls will be probably the default return values strategy in,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,* Mockito 2.0,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"public class ReturnsSmartNulls implements Answer<Object>, Serializable {",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,private static final long serialVersionUID = 7618312406617949441L;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,private final Answer<Object> delegate = new ReturnsMoreEmptyValues();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,public Object answer(final InvocationOnMock invocation) throws Throwable {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,Object defaultReturnValue = delegate.answer(invocation);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,if (defaultReturnValue != null) {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,return defaultReturnValue;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,Class<?> type = invocation.getMethod().getReturnType();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,if (!type.isPrimitive() && !Modifier.isFinal(type.getModifiers())) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,final Location location = new LocationImpl();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"return Mockito.mock(type, new ThrowsSmartNullPointer(invocation, location));",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,return null;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,private static class ThrowsSmartNullPointer implements Answer {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,private final InvocationOnMock unstubbedInvocation;,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,private final Location location;,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"public ThrowsSmartNullPointer(InvocationOnMock unstubbedInvocation, Location location) {",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,this.unstubbedInvocation = unstubbedInvocation;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,this.location = location;,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,public Object answer(InvocationOnMock currentInvocation) throws Throwable {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,if (new ObjectMethodsGuru().isToString(currentInvocation.getMethod())) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"return ""SmartNull returned by this unstubbed method call on a mock:\n"" +",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,unstubbedInvocation.toString();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,"new Reporter().smartNullPointerException(unstubbedInvocation.toString(), location);",70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,return null;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\stubbing\defaultanswers\ReturnsSmartNulls.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,package org.mockito.internal.util;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,* Pre-made preconditions,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,*/,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,public class Checks {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,"public static <T> T checkNotNull(T value, String checkedValue) {",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,if(value == null) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,"throw new NullPointerException(checkedValue + "" should not be null"");",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,return value;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,"public static <T extends Iterable> T checkItemsNotNull(T iterable, String checkedIterable) {",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,"checkNotNull(iterable, checkedIterable);",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,for (Object item : iterable) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,"checkNotNull(item, ""item in "" + checkedIterable);",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,return iterable;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Checks.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,public class ConsoleMockitoLogger implements MockitoLogger {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,/* (non-Javadoc),9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,* @see org.mockito.internal.util.Logger#print(java.lang.Object),10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,*/,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,public void log(Object what) {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,System.out.println(what);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ConsoleMockitoLogger.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,package org.mockito.internal.util;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,import java.util.regex.Matcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,import java.util.regex.Pattern;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,public class Decamelizer {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,"private static final Pattern CAPS = Pattern.compile(""([A-Z\\d][^A-Z\\d]*)"");",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,public static String decamelizeMatcher(String className) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,if (className.length() == 0) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,"return ""<custom argument matcher>"";",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,String decamelized = decamelizeClassName(className);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,if (decamelized.length() == 0) {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,"return ""<"" + className + "">"";",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,"return ""<"" + decamelized + "">"";",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,private static String decamelizeClassName(String className) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,Matcher match = CAPS.matcher(className);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,StringBuilder deCameled = new StringBuilder();,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,while(match.find()) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,if (deCameled.length() == 0) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,deCameled.append(match.group());,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,} else {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,"deCameled.append("" "");",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,deCameled.append(match.group().toLowerCase());,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,return deCameled.toString();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Decamelizer.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,import java.util.Collection;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,import org.mockito.MockingDetails;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,"* Class to inspect any object, and identify whether a particular object is either a mock or a spy.  This is",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* a wrapper for {@link org.mockito.internal.util.MockUtil}.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,public class DefaultMockingDetails implements MockingDetails {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,private final Object toInspect;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,private final MockUtil delegate;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,"public DefaultMockingDetails(Object toInspect, MockUtil delegate){",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,this.toInspect = toInspect;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,this.delegate = delegate;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* Find out whether the object is a mock.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* @return true if the object is a mock or a spy.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,public boolean isMock(){,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,return delegate.isMock( toInspect );,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,/**,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* Find out whether the object is a spy.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,* @return true if the object is a spy.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,public boolean isSpy(){,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,return delegate.isSpy( toInspect );,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,public Collection<Invocation> getInvocations() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,return delegate.getMockHandler(toInspect).getInvocationContainer().getInvocations();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\DefaultMockingDetails.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,import org.mockito.internal.util.reflection.Constructors;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,import org.mockito.mock.SerializableMode;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,import java.io.Serializable;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,import java.util.Collection;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,public class MockCreationValidator {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,private final MockUtil mockUtil = new MockUtil();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,public void validateType(Class classToMock) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (!mockUtil.isTypeMockable(classToMock)) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,new Reporter().cannotMockFinalClass(classToMock);,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"public void validateExtraInterfaces(Class classToMock, Collection<Class> extraInterfaces) {",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (extraInterfaces == null) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,return;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,for (Class i : extraInterfaces) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (classToMock == i) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,new Reporter().extraInterfacesCannotContainMockedType(classToMock);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"public void validateMockedType(Class classToMock, Object spiedInstance) {",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (classToMock == null || spiedInstance == null) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,return;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (!classToMock.equals(spiedInstance.getClass())) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"new Reporter().mockedTypeIsInconsistentWithSpiedInstanceType(classToMock, spiedInstance);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"public void validateDelegatedInstance(Class classToMock, Object delegatedInstance) {",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (classToMock == null || delegatedInstance == null) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,return;,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (delegatedInstance.getClass().isAssignableFrom(classToMock)) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"new Reporter().mockedTypeIsInconsistentWithDelegatedInstanceType(classToMock, delegatedInstance);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"public void validateSerializable(Class classToMock, boolean serializable) {",55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,// We can't catch all the errors with this piece of code,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,// Having a **superclass that do not implements Serializable** might fail as well when serialized,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,// Though it might prevent issues when mockito is mocking a class without superclass.,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if(serializable,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,&& !classToMock.isInterface(),60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,&& !(Serializable.class.isAssignableFrom(classToMock)),61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,&& Constructors.noArgConstructorOf(classToMock) == null,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(classToMock);,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,"public void validateConstructorUse(boolean usingConstructor, SerializableMode mode) {",68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,if (usingConstructor && mode == SerializableMode.ACROSS_CLASSLOADERS) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,new Reporter().usingConstructorWithFancySerializable(mode);,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockCreationValidator.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,import org.mockito.mock.MockName;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,import java.io.Serializable;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,"public class MockNameImpl implements MockName, Serializable {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,private static final long serialVersionUID = 8014974700844306925L;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,private final String mockName;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,private boolean defaultName;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,"@SuppressWarnings(""unchecked"")",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,"public MockNameImpl(String mockName, Class classToMock) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,if (mockName == null) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,this.mockName = toInstanceName(classToMock);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,this.defaultName = true;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,} else {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,this.mockName = mockName;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,public MockNameImpl(String mockName) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,this.mockName = mockName;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,private static String toInstanceName(Class<?> clazz) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,String className = clazz.getSimpleName();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,if (className.length() == 0) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,"//it's an anonymous class, let's get name from the parent",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,className = clazz.getSuperclass().getSimpleName();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,//lower case first letter,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,"return className.substring(0, 1).toLowerCase() + className.substring(1);",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,40,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,public boolean isDefault() {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,return defaultName;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,@Override,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,public String toString() {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,return mockName;,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockNameImpl.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.exceptions.misusing.NotAMockException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.internal.InternalMockHandler;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.internal.configuration.plugins.Plugins;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.internal.creation.settings.CreationSettings;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.internal.handler.MockHandlerFactory;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.internal.util.reflection.LenientCopyTool;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.invocation.MockHandler;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.mock.MockCreationSettings;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.mock.MockName;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import org.mockito.plugins.MockMaker;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,import java.lang.reflect.Modifier;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"@SuppressWarnings(""unchecked"")",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public class MockUtil {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,private static final MockMaker mockMaker = Plugins.getMockMaker();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public boolean isTypeMockable(Class<?> type) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public <T> T createMock(MockCreationSettings<T> settings) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,MockHandler mockHandler = new MockHandlerFactory().create(settings);,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"T mock = mockMaker.createMock(settings, mockHandler);",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,Object spiedInstance = settings.getSpiedInstance();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,if (spiedInstance != null) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"new LenientCopyTool().copyToMock(spiedInstance, mock);",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return mock;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public <T> void resetMock(T mock) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,MockCreationSettings settings = oldHandler.getMockSettings();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,MockHandler newHandler = new MockHandlerFactory().create(settings);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"mockMaker.resetMock(mock, newHandler, settings);",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public <T> InternalMockHandler<T> getMockHandler(T mock) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,if (mock == null) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"throw new NotAMockException(""Argument should be a mock, but is null!"");",53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,if (isMockitoMock(mock)) {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,MockHandler handler = mockMaker.getHandler(mock);,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return (InternalMockHandler) handler;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,} else {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"throw new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public boolean isMock(Object mock) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"// double check to avoid classes that have the same interfaces, could be great to have a custom mockito field in the proxy instead of relying on instance fields",65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return isMockitoMock(mock);,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public boolean isSpy(Object mock) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return isMockitoMock(mock) && getMockSettings(mock).getDefaultAnswer() == Mockito.CALLS_REAL_METHODS;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,private <T> boolean isMockitoMock(T mock) {,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return mockMaker.getHandler(mock) != null;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public MockName getMockName(Object mock) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return getMockHandler(mock).getMockSettings().getMockName();,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,80,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,"public void maybeRedefineMockName(Object mock, String newName) {",81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,MockName mockName = getMockName(mock);,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,//TODO SF hacky...,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,if (mockName.isDefault() && getMockHandler(mock).getMockSettings() instanceof CreationSettings) {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,((CreationSettings) getMockHandler(mock).getMockSettings()).setMockName(new MockNameImpl(newName));,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,,88,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,public MockCreationSettings getMockSettings(Object mock) {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,return getMockHandler(mock).getMockSettings();,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockUtil.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,public interface MockitoLogger {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,void log(Object what);,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\MockitoLogger.java,},11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,import org.mockito.internal.creation.DelegatingMethod;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,import org.mockito.internal.invocation.MockitoMethod;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,import java.io.Serializable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,import java.lang.reflect.Method;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public class ObjectMethodsGuru implements Serializable {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,private static final long serialVersionUID = -1286718569065470494L;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public boolean isToString(Method method) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,return isToString(new DelegatingMethod(method));,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public boolean isToString(MockitoMethod method) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,return method.getReturnType() == String.class,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes().length == 0,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,"&& method.getName().equals(""toString"");",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public boolean isEqualsMethod(Method method) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,"return method.getName().equals(""equals"")",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes().length == 1,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes()[0] == Object.class;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public boolean isHashCodeMethod(Method method) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,"return method.getName().equals(""hashCode"")",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes().length == 0;,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,public boolean isCompareToMethod(Method method) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,return Comparable.class.isAssignableFrom(method.getDeclaringClass()),39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,"&& method.getName().equals(""compareTo"")",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes().length == 1,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,&& method.getParameterTypes()[0] == method.getDeclaringClass();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\ObjectMethodsGuru.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,import java.util.HashMap;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,import java.util.Map;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"@SuppressWarnings(""unchecked"")",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,public class Primitives {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"private static final Map<Class<?>, Class<?>> PRIMITIVE_TYPES = new HashMap<Class<?>, Class<?>>();",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"private static final Map<Class<?>, Object> PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES = new HashMap<Class<?>, Object>();",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* Returns the primitive type of the given class.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* <p/>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"* The passed class can be any class : <code>boolean.class</code>, <code>Integer.class</code>",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"* in witch case this method will return <code>boolean.class</code>, even <code>SomeObject.class</code>",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* in which case <code>null</code> will be returned.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* @param clazz The class from which primitive type has to be retrieved,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* @param <T>   The type,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"* @return The primitive type if relevant, otherwise <code>null</code>",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,public static <T> Class<T> primitiveTypeOf(Class<T> clazz) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,if (clazz.isPrimitive()) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,return clazz;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,return (Class<T>) PRIMITIVE_TYPES.get(clazz);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* Indicates if the given class is primitive type or a primitive wrapper.,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* @param type The type to check,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"* @return <code>true</code> if primitive or wrapper, <code>false</code> otherwise.",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*/,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,public static boolean isPrimitiveOrWrapper(Class<?> type) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,return PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.containsKey(type);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,/**,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* Returns the boxed default value for a primitive or a primitive wrapper.,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,* @param primitiveOrWrapperType The type to lookup the default value,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"* @return The boxed default values as defined in Java Language Specification,",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*         <code>null</code> if the type is neither a primitive nor a wrapper,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,*/,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,public static <T> T defaultValueForPrimitiveOrWrapper(Class<T> primitiveOrWrapperType) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,return (T) PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.get(primitiveOrWrapperType);,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,static {,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Boolean.class, Boolean.TYPE);",58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Character.class, Character.TYPE);",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Byte.class, Byte.TYPE);",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Short.class, Short.TYPE);",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Integer.class, Integer.TYPE);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Long.class, Long.TYPE);",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Float.class, Float.TYPE);",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_TYPES.put(Double.class, Double.TYPE);",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,static {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Boolean.class, false);",69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Character.class, '\u0000');",70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Byte.class, (byte) 0);",71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Short.class, (short) 0);",72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Integer.class, 0);",73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Long.class, 0L);",74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Float.class, 0F);",75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Double.class, 0D);",76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,,77,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(boolean.class, false);",78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(char.class, '\u0000');",79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(byte.class, (byte) 0);",80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(short.class, (short) 0);",81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(int.class, 0);",82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(long.class, 0L);",83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(float.class, 0F);",84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,"PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(double.class, 0D);",85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Primitives.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,public class RemoveFirstLine {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,* @param text to have the first line removed,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,* @return less first line,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,public String of(String text) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,"return text.replaceFirst("".*?\n"", """");",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\RemoveFirstLine.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,package org.mockito.internal.util;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,public class SimpleMockitoLogger extends ConsoleMockitoLogger {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,StringBuilder loggedInfo = new StringBuilder();,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,public void log(Object what) {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,//            can be uncommented when debugging this test,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,//            super.log(what);,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,loggedInfo.append(what);,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,public String getLoggedInfo() {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,return loggedInfo.toString();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\SimpleMockitoLogger.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,package org.mockito.internal.util;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,public class StringJoiner {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,public static String join(Object ... linesToBreak) {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"StringBuilder out = new StringBuilder(""\n"");",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"return join(out, linesToBreak);",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"private static String join(StringBuilder out, Object[] linesToBreak) {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,for (Object line : linesToBreak) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"out.append(line.toString()).append(""\n"");",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"int lastBreak = out.lastIndexOf(""\n"");",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,"return out.replace(lastBreak, lastBreak+1, """").toString();",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\StringJoiner.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,package org.mockito.internal.util;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,import org.mockito.exceptions.Reporter;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,public class Timer {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,private final long durationMillis;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,private long startTime = -1;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,public Timer(long durationMillis) {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,validateInput(durationMillis);,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,this.durationMillis = durationMillis;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,* Informs whether the timer is still counting down.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,public boolean isCounting() {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,assert startTime != -1;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,return System.currentTimeMillis() - startTime <= durationMillis;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,/**,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,* Starts the timer count down.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,*/,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,public void start() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,startTime = System.currentTimeMillis();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,private void validateInput(long durationMillis) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,if (durationMillis < 0) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,new Reporter().cannotCreateTimerWithNegativeDurationTime(durationMillis);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,public long duration() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,return durationMillis;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\Timer.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,package org.mockito.internal.util.collections;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,"@SuppressWarnings(""unchecked"")",7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,public class ArrayUtils {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,public <T> boolean isEmpty(T[] array) {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,return array == null || array.length == 0;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,},12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ArrayUtils.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,package org.mockito.internal.util.collections;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,import org.mockito.internal.util.MockUtil;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* hashCode and equals safe mock wrapper.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*     It doesn't use the actual mock {@link Object#hashCode} and {@link Object#equals} method as they might,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*     throw an NPE if those method cannot be stubbed <em>even internally</em>.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* </p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* <p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*     Instead the strategy is :,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*     <ul>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*         <li>For hashCode : <strong>use {@link System#identityHashCode}</strong></li>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*         <li>For equals : <strong>use the object reference equality</strong></li>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*     </ul>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* </p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,* @see HashCodeAndEqualsSafeSet,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public class HashCodeAndEqualsMockWrapper {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,private final Object mockInstance;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public HashCodeAndEqualsMockWrapper(Object mockInstance) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,this.mockInstance = mockInstance;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public Object get() {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,return mockInstance;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,@Override,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public boolean equals(Object o) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,if (this == o) return true;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,if (!(o instanceof HashCodeAndEqualsMockWrapper)) return false;,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,HashCodeAndEqualsMockWrapper that = (HashCodeAndEqualsMockWrapper) o;,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,return mockInstance == that.mockInstance;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,@Override,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public int hashCode() {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,return System.identityHashCode(mockInstance);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,public static HashCodeAndEqualsMockWrapper of(Object mock) {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,return new HashCodeAndEqualsMockWrapper(mock);,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,@Override public String toString() {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,MockUtil mockUtil = new MockUtil();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,"return ""HashCodeAndEqualsMockWrapper{"" +",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,"""mockInstance="" + (mockUtil.isMock(mockInstance) ? mockUtil.getMockName(mockInstance) : typeInstanceString()) +",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,'}';,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,private String typeInstanceString() {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,"return mockInstance.getClass().getSimpleName() + ""("" + System.identityHashCode(mockInstance) + "")"";",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsMockWrapper.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,package org.mockito.internal.util.collections;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import org.mockito.internal.util.Checks;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import java.util.Arrays;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import java.util.Collection;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import java.util.HashSet;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import java.util.Iterator;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import java.util.Set;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,import static java.lang.reflect.Array.*;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* hashCode and equals safe hash based set.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,"*     Useful for holding mocks that have un-stubbable hashCode or equals method,",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*     meaning that in this scenario the real code is always called and will most probably,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*     cause an {@link NullPointerException}.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* </p>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* <p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*     This collection wraps the mock in an augmented type {@link HashCodeAndEqualsMockWrapper},26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*     that have his own implementation.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* </p>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,* @see HashCodeAndEqualsMockWrapper,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public class HashCodeAndEqualsSafeSet implements Set<Object> {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,private final HashSet<HashCodeAndEqualsMockWrapper> backingHashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public Iterator<Object> iterator() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return new Iterator<Object>() {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,private final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean hasNext() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return iterator.hasNext();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public Object next() {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return iterator.next().get();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public void remove() {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,iterator.remove();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,};,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public int size() {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.size();,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean isEmpty() {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.isEmpty();,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean contains(Object mock) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.contains(HashCodeAndEqualsMockWrapper.of(mock));,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean add(Object mock) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean remove(Object mock) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.remove(HashCodeAndEqualsMockWrapper.of(mock));,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,73,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public void clear() {,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,backingHashSet.clear();,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,77,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,@Override public Object clone() throws CloneNotSupportedException {,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,throw new CloneNotSupportedException();,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,81,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,@Override public boolean equals(Object o) {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,if (!(o instanceof HashCodeAndEqualsSafeSet)) {,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return false;,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,HashCodeAndEqualsSafeSet that = (HashCodeAndEqualsSafeSet) o;,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.equals(that.backingHashSet);,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,@Override public int hashCode() {,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.hashCode();,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public Object[] toArray() {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return unwrapTo(new Object[size()]);,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,private <T> T[] unwrapTo(T[] array) {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,Iterator<Object> iterator = iterator();,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,"for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {",100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,if (iterator.hasNext()) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,array[i] = (T) iterator.next();,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return array;,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,107,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,108,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public <T> T[] toArray(T[] typedArray) {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,T[] array = typedArray.length >= size() ? typedArray :,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,"(T[]) newInstance(typedArray.getClass().getComponentType(), size());",111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return unwrapTo(array);,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,114,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean removeAll(Collection<?> mocks) {,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.removeAll(asWrappedMocks(mocks));,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,118,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean containsAll(Collection<?> mocks) {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.containsAll(asWrappedMocks(mocks));,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean addAll(Collection<?> mocks) {,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.addAll(asWrappedMocks(mocks));,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public boolean retainAll(Collection<?> mocks) {,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.retainAll(asWrappedMocks(mocks));,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,130,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,private HashSet<HashCodeAndEqualsMockWrapper> asWrappedMocks(Collection<?> mocks) {,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,"Checks.checkNotNull(mocks, ""Passed collection should notify() be null"");",132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,HashSet<HashCodeAndEqualsMockWrapper> hashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,133,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,for (Object mock : mocks) {,134,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,"assert ! (mock instanceof HashCodeAndEqualsMockWrapper) : ""WRONG"";",135,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,hashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return hashSet;,138,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},139,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,140,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,@Override public String toString() {,141,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return backingHashSet.toString();,142,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,144,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public static HashCodeAndEqualsSafeSet of(Object... mocks) {,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return of(Arrays.asList(mocks));,146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,,148,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,public static HashCodeAndEqualsSafeSet of(Iterable<Object> objects) {,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();,150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,if (objects != null) {,151,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,for (Object mock : objects) {,152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,hashCodeAndEqualsSafeSet.add(mock);,153,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},154,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},155,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,return hashCodeAndEqualsSafeSet;,156,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\HashCodeAndEqualsSafeSet.java,},158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,package org.mockito.internal.util.collections;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,import java.util.LinkedList;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,"@SuppressWarnings(""unchecked"")",9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,public class IdentitySet {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,LinkedList list = new LinkedList();,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,public boolean contains(Object o) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,for(Object existing:list) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,if (existing == o) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,return true;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,return false;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,public void add(Object o) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,list.add(o);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\IdentitySet.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,package org.mockito.internal.util.collections;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,import java.util.Enumeration;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,import java.util.LinkedList;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,import java.util.List;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,* Utilities for Iterables,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,public class Iterables {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,* Converts enumeration into iterable,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,public static <T> Iterable<T> toIterable(Enumeration<T> in) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,List<T> out = new LinkedList<T>();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,while(in.hasMoreElements()) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,out.add(in.nextElement());,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,return out;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Iterables.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,package org.mockito.internal.util.collections;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,import java.util.Collection;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,import java.util.LinkedList;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,public class ListUtil {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,"public static <T> LinkedList<T> filter(Collection<T> collection, Filter<T> filter) {",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,LinkedList<T> filtered = new LinkedList<T>();,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,for (T t : collection) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,if (!filter.isOut(t)) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,filtered.add(t);,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,return filtered;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,public interface Filter<T> {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,boolean isOut(T object);,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\ListUtil.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,package org.mockito.internal.util.collections;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,import java.util.HashSet;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,import java.util.LinkedHashSet;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,import java.util.Set;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,import static java.util.Arrays.asList;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,public abstract class Sets {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,public static Set<Object> newMockSafeHashSet(Iterable<Object> mocks) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,return HashCodeAndEqualsSafeSet.of(mocks);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,public static Set<Object> newMockSafeHashSet(Object... mocks) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,return HashCodeAndEqualsSafeSet.of(mocks);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,public static IdentitySet newIdentitySet() {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,return new IdentitySet();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,public static <T> Set<T> newSet(T ... elements) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,if (elements == null) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,"throw new IllegalArgumentException(""Expected an array of elements (or empty array) but received a null."");",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,return new LinkedHashSet<T>(asList(elements));,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\collections\Sets.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,package org.mockito.internal.util.io;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,import org.mockito.exceptions.base.MockitoException;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,import java.io.*;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,import java.util.Collection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,import java.util.LinkedList;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,* IO utils. A bit of reinventing the wheel but we don't want extra dependencies at this stage and we want to be java.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,public class IOUtil {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,* Writes text to file,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"public static void writeText(String text, File output) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,PrintWriter pw = null;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,try {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,pw = new PrintWriter(new FileWriter(output));,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,pw.write(text);,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,} catch (Exception e) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"throw new MockitoException(""Problems writing text to file: "" + output, e);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,} finally {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,close(pw);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,public static Collection<String> readLines(InputStream is) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,List<String> out = new LinkedList<String>();,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,BufferedReader r = new BufferedReader(new InputStreamReader(is));,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,String line;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,try {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,while((line = r.readLine()) != null) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,out.add(line);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,} catch (IOException e) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"throw new MockitoException(""Problems reading from: "" + is, e);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,return out;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,* Closes the target. Does nothing when target is null. Is silent.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"* @param closeable the target, may be null",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*/,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,public static void closeQuietly(Closeable closeable) {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,try {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,close(closeable);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,} catch (MockitoException ignored) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"//ignore, for backwards compatibility",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,/**,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,* Closes the target. Does nothing when target is null. Is not silent and exceptions are rethrown.,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"* @param closeable the target, may be null",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,public static void close(Closeable closeable) {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,if (closeable != null) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,try {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,closeable.close();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,} catch (IOException e) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,"throw new MockitoException(""Problems closing stream: "" + closeable, e);",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\io\IOUtil.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,package org.mockito.internal.util.junit;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,import org.junit.runner.notification.Failure;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,import org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,import org.mockito.internal.util.reflection.Whitebox;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,public class JUnitFailureHacker {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"public void appendWarnings(Failure failure, String warnings) {",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,if (isEmpty(warnings)) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,return;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,//TODO: this has to protect the use in case jUnit changes and this internal state logic fails,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"Throwable throwable = (Throwable) Whitebox.getInternalState(failure, ""fThrownException"");",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"String newMessage = ""contains both: actual test failure *and* Mockito warnings.\n"" +",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"warnings + ""\n *** The actual failure is because of: ***\n"";",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"ExceptionIncludingMockitoWarnings e = new ExceptionIncludingMockitoWarnings(newMessage, throwable);",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,e.setStackTrace(throwable.getStackTrace());,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"Whitebox.setInternalState(failure, ""fThrownException"", e);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,private boolean isEmpty(String warnings) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,"return warnings == null || """".equals(warnings); // isEmpty() is in JDK 6+",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\junit\JUnitFailureHacker.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,import java.lang.reflect.AccessibleObject;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,public class AccessibilityChanger {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,private Boolean wasAccessible = null;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,* safely disables access,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,public void safelyDisableAccess(AccessibleObject accessibleObject) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,"assert wasAccessible != null : ""accessibility info shall not be null"";",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,try {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,accessibleObject.setAccessible(wasAccessible);,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,} catch (Throwable t) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,//ignore,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,/**,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,* changes the accessibleObject accessibility and returns true if accessibility was changed,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,public void enableAccess(AccessibleObject accessibleObject) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,wasAccessible = accessibleObject.isAccessible();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,accessibleObject.setAccessible(true);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\AccessibilityChanger.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,import java.lang.reflect.InvocationTargetException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,import java.lang.reflect.Method;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,import java.util.Locale;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* This utility class will call the setter of the property to inject a new value.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,public class BeanPropertySetter {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"private static final String SET_PREFIX = ""set"";",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,private final Object target;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,private final boolean reportNoSetterFound;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,private final Field field;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/**,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* New BeanPropertySetter,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param target The target on which the setter must be invoked,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param propertyField The field that should be accessed with the setter,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param reportNoSetterFound Allow the set method to raise an Exception if the setter cannot be found,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"public BeanPropertySetter(final Object target, final Field propertyField, boolean reportNoSetterFound) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,this.field = propertyField;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,this.target = target;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,this.reportNoSetterFound = reportNoSetterFound;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* New BeanPropertySetter that don't report failure,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param target The target on which the setter must be invoked,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param propertyField The propertyField that must be accessed through a setter,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"public BeanPropertySetter(final Object target, final Field propertyField) {",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"this(target, propertyField, false);",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* Set the value to the property represented by this {@link BeanPropertySetter},45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param value the new value to pass to the property setter,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"* @return <code>true</code> if the value has been injected, <code>false</code> otherwise",47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"* @throws RuntimeException Can be thrown if the setter threw an exception, if the setter is not accessible",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"*          or, if <code>reportNoSetterFound</code> and setter could not be found.",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,public boolean set(final Object value) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,AccessibilityChanger changer = new AccessibilityChanger();,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,Method writeMethod = null;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,try {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"writeMethod = target.getClass().getMethod(setterName(field.getName()), field.getType());",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,changer.enableAccess(writeMethod);,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"writeMethod.invoke(target, value);",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,return true;,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,} catch (InvocationTargetException e) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"throw new RuntimeException(""Setter '"" + writeMethod + ""' of '"" + target + ""' with value '"" + value + ""' threw exception : '"" + e.getTargetException() + ""'"", e);",62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,} catch (IllegalAccessException e) {,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"throw new RuntimeException(""Access not authorized on field '"" + field + ""' of object '"" + target + ""' with value: '"" + value + ""'"", e);",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,} catch (NoSuchMethodException e) {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,reportNoSetterFound();,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,} finally {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,if(writeMethod != null) {,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,changer.safelyDisableAccess(writeMethod);,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,reportNoSetterFound();,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,return false;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,/**,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* Retrieve the setter name from the field name.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* <p>Implementation is based on the code of {@link java.beans.Introspector}.</p>,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @param fieldName the Field name,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,* @return Setter name.,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,*/,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,private String setterName(String fieldName) {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,return new StringBuilder(SET_PREFIX),86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,".append(fieldName.substring(0, 1).toUpperCase(Locale.ENGLISH))",87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,.append(fieldName.substring(1)),88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,.toString();,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,private void reportNoSetterFound() {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,if(reportNoSetterFound) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,"throw new RuntimeException(""Problems setting value on object: ["" + target + ""] for property : ["" + field.getName() + ""], setter not found"");",94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\BeanPropertySetter.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,package org.mockito.internal.util.reflection;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,import java.lang.reflect.Constructor;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,public abstract class Constructors {,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,* Returns the no arg constructor of the type if any.,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,*,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,* @param classToMock The type to look for a no-arg constructor,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,* @return The no-arg constructor or null if none is declared.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,*/,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,public static Constructor<?> noArgConstructorOf(Class<?> classToMock) {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,try {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,return classToMock.getDeclaredConstructor();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,} catch (NoSuchMethodException e) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,return null;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Constructors.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,public class FieldCopier {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,"public <T> void copyValue(T from, T to, Field field) throws IllegalAccessException {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,Object value = field.get(from);,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,"field.set(to, value);",13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldCopier.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,package org.mockito.internal.util.reflection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/**,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Report on field initialization,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,public class FieldInitializationReport {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,private final Object fieldInstance;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,private final boolean wasInitialized;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,private final boolean wasInitializedUsingConstructorArgs;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,"public FieldInitializationReport(Object fieldInstance, boolean wasInitialized, boolean wasInitializedUsingConstructorArgs) {",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,this.fieldInstance = fieldInstance;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,this.wasInitialized = wasInitialized;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,this.wasInitializedUsingConstructorArgs = wasInitializedUsingConstructorArgs;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Returns the actual field instance.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* @return the actual instance,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,public Object fieldInstance() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,return fieldInstance;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/**,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Indicate wether the field was created during the process or not.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,"* @return <code>true</code> if created, <code>false</code> if the field did already hold an instance.",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,public boolean fieldWasInitialized() {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,return wasInitialized;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/**,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Indicate wether the field was created using constructor args.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* @return <code>true</code> if field was created using constructor parameters.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,public boolean fieldWasInitializedUsingContructorArgs() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,return wasInitializedUsingConstructorArgs;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,/**,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* Returns the class of the actual instance in the field.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,* @return Class of the instance,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,*/,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,public Class<?> fieldClass() {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,return fieldInstance != null ? fieldInstance.getClass() : null;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializationReport.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import org.mockito.internal.util.MockUtil;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.lang.reflect.Constructor;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.lang.reflect.Field;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.lang.reflect.InvocationTargetException;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.lang.reflect.Modifier;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.util.Arrays;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.util.Collections;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.util.Comparator;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,import java.util.List;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Initialize a field with type instance if a default constructor can be found.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* If the given field is already initialized, then <strong>the actual instance is returned</strong>.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* This initializer doesn't work with inner classes, local classes, interfaces or abstract types.",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,public class FieldInitializer {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Object fieldOwner;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Field field;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final ConstructorInstantiator instantiator;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Prepare initializer with the given field on the given instance.,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* This constructor fail fast if the field type cannot be handled.,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @param fieldOwner Instance of the test.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @param field Field to be initialize.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"public FieldInitializer(Object fieldOwner, Field field) {",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"this(fieldOwner, field, new NoArgConstructorInstantiator(fieldOwner, field));",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Prepare initializer with the given field on the given instance.,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* This constructor fail fast if the field type cannot be handled.,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @param fieldOwner Instance of the test.,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @param field Field to be initialize.,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @param argResolver Constructor parameters resolver,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"public FieldInitializer(Object fieldOwner, Field field, ConstructorArgumentResolver argResolver) {",60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"this(fieldOwner, field, new ParameterizedConstructorInstantiator(fieldOwner, field, argResolver));",61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"private FieldInitializer(Object fieldOwner, Field field, ConstructorInstantiator instantiator) {",64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"if(new FieldReader(fieldOwner, field).isNull()) {",65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,checkNotLocal(field);,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,checkNotInner(field);,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,checkNotInterface(field);,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,checkNotAbstract(field);,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.fieldOwner = fieldOwner;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.field = field;,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.instantiator = instantiator;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,75,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Initialize field if not initialized and return the actual instance.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* @return Actual field instance.,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,public FieldInitializationReport initialize() {,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final AccessibilityChanger changer = new AccessibilityChanger();,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.enableAccess(field);,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,84,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,try {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return acquireFieldInstance();,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch(IllegalAccessException e) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""Problems initializing field '"" + field.getName() + ""' of type '"" + field.getType().getSimpleName() + ""'"", e);",88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} finally {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.safelyDisableAccess(field);,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private void checkNotLocal(Field field) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(field.getType().isLocalClass()) {,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is a local class."");",96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private void checkNotInner(Field field) {,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an inner class."");",102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,105,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private void checkNotInterface(Field field) {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(field.getType().isInterface()) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an interface."");",108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,111,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private void checkNotAbstract(Field field) {,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(Modifier.isAbstract(field.getType().getModifiers())) {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + "" is an abstract class."");",114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private FieldInitializationReport acquireFieldInstance() throws IllegalAccessException {,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Object fieldInstance = field.get(fieldOwner);,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(fieldInstance != null) {,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"return new FieldInitializationReport(fieldInstance, false, false);",121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,123,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return instantiator.instantiate();,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,126,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Represents the strategy used to resolve actual instances,128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* to be given to a constructor given the argument types.,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,public interface ConstructorArgumentResolver {,131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,132,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Try to resolve instances from types.,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Checks on the real argument type or on the correct argument number,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* will happen during the field initialization {@link FieldInitializer#initialize()}.,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* I.e the only responsibility of this method, is to provide instances <strong>if possible</strong>.",139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* @param argTypes Constructor argument types, should not be null.",142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* @return The argument instances to be given to the constructor, should not be null.",143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Object[] resolveTypeInstances(Class<?>... argTypes);,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,147,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private interface ConstructorInstantiator {,148,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,FieldInitializationReport instantiate();,149,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,151,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Constructor instantiating strategy for no-arg constructor.,153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* If a no-arg constructor can be found then the instance is created using,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* this constructor.,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Otherwise a technical MockitoException is thrown.,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,static class NoArgConstructorInstantiator implements ConstructorInstantiator {,161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Object testClass;,162,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Field field;,163,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,164,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* Internal, checks are done by FieldInitializer.",166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Fields are assumed to be accessible.,167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"NoArgConstructorInstantiator(Object testClass, Field field) {",169,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.testClass = testClass;,170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.field = field;,171,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},172,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,173,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,public FieldInitializationReport instantiate() {,174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final AccessibilityChanger changer = new AccessibilityChanger();,175,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Constructor<?> constructor = null;,176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,try {,177,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,constructor = field.getType().getDeclaredConstructor();,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.enableAccess(constructor);,179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,180,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final Object[] noArg = new Object[0];,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Object newFieldInstance = constructor.newInstance(noArg);,182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"new FieldSetter(testClass, field).set(newFieldInstance);",183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,184,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"return new FieldInitializationReport(field.get(testClass), true, false);",185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (NoSuchMethodException e) {,186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' has no default constructor"", e);",187,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (InvocationTargetException e) {,188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the default constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",189,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (InstantiationException e) {,190,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",191,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (IllegalAccessException e) {,192,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",193,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} finally {,194,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(constructor != null) {,195,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.safelyDisableAccess(constructor);,196,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},197,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},198,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},199,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},200,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,201,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,202,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Constructor instantiating strategy for parameterized constructors.,203,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*,204,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* <p>,205,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* Choose the constructor with the highest number of parameters, then",206,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* call the ConstructorArgResolver to get actual argument instances.,207,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* If the argResolver fail, then a technical MockitoException is thrown is thrown.",208,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Otherwise the instance is created with the resolved arguments.,209,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* </p>,210,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,211,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,static class ParameterizedConstructorInstantiator implements ConstructorInstantiator {,212,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Object testClass;,213,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Field field;,214,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final ConstructorArgumentResolver argResolver;,215,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final MockUtil mockUtil = new MockUtil();,216,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private final Comparator<Constructor<?>> byParameterNumber = new Comparator<Constructor<?>>() {,217,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"public int compare(Constructor<?> constructorA, Constructor<?> constructorB) {",218,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,int argLengths = constructorB.getParameterTypes().length - constructorA.getParameterTypes().length;,219,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if (argLengths == 0) {,220,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,int constructorAMockableParamsSize = countMockableParams(constructorA);,221,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,int constructorBMockableParamsSize = countMockableParams(constructorB);,222,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return constructorBMockableParamsSize - constructorAMockableParamsSize;,223,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},224,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return argLengths;,225,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},226,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,227,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private int countMockableParams(Constructor<?> constructor) {,228,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,int constructorMockableParamsSize = 0;,229,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,for (Class<?> aClass : constructor.getParameterTypes()) {,230,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(mockUtil.isTypeMockable(aClass)){,231,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,constructorMockableParamsSize++;,232,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},233,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},234,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return constructorMockableParamsSize;,235,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},236,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,};,237,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,238,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,/**,239,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"* Internal, checks are done by FieldInitializer.",240,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,* Fields are assumed to be accessible.,241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,*/,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"ParameterizedConstructorInstantiator(Object testClass, Field field, ConstructorArgumentResolver argumentResolver) {",243,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.testClass = testClass;,244,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.field = field;,245,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,this.argResolver = argumentResolver;,246,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},247,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,248,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,public FieldInitializationReport instantiate() {,249,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final AccessibilityChanger changer = new AccessibilityChanger();,250,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Constructor<?> constructor = null;,251,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,try {,252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,constructor = biggestConstructor(field.getType());,253,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.enableAccess(constructor);,254,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,255,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final Object[] args = argResolver.resolveTypeInstances(constructor.getParameterTypes());,256,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Object newFieldInstance = constructor.newInstance(args);,257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"new FieldSetter(testClass, field).set(newFieldInstance);",258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,259,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"return new FieldInitializationReport(field.get(testClass), false, true);",260,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (IllegalArgumentException e) {,261,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""internal error : argResolver provided incorrect types for constructor "" + constructor + "" of type "" + field.getType().getSimpleName(), e);",262,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (InvocationTargetException e) {,263,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",264,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (InstantiationException e) {,265,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",266,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} catch (IllegalAccessException e) {,267,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,} finally {,269,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(constructor != null) {,270,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,changer.safelyDisableAccess(constructor);,271,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},272,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},273,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},274,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,275,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"private void checkParameterized(Constructor<?> constructor, Field field) {",276,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,if(constructor.getParameterTypes().length == 0) {,277,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"throw new MockitoException(""the field "" + field.getName() + "" of type "" + field.getType() + "" has no parameterized constructor"");",278,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},279,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},280,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,281,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,private Constructor<?> biggestConstructor(Class<?> clazz) {,282,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,final List<Constructor<?>> constructors = Arrays.asList(clazz.getDeclaredConstructors());,283,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"Collections.sort(constructors, byParameterNumber);",284,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,,285,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,Constructor<?> constructor = constructors.get(0);,286,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,"checkParameterized(constructor, field);",287,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,return constructor;,288,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},289,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},290,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldInitializer.java,},291,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,import org.mockito.exceptions.base.MockitoException;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,import java.lang.reflect.Field;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,public class FieldReader {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,final Object target;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,final Field field;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,final AccessibilityChanger changer = new AccessibilityChanger();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,"public FieldReader(Object target, Field field) {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,this.target = target;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,this.field = field;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,changer.enableAccess(field);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,public boolean isNull() {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,return read() == null;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,public Object read() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,try {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,return field.get(target);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,} catch (Exception e) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,"throw new MockitoException(""Cannot read state from field: "" + field + "", on instance: "" + target);",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldReader.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,public class FieldSetter {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,private final Object target;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,private final Field field;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,"public FieldSetter(Object target, Field field) {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,this.target = target;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,this.field = field;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,public void set(Object value) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,AccessibilityChanger changer = new AccessibilityChanger();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,changer.enableAccess(field);,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,try {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,"field.set(target, value);",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,} catch (IllegalAccessException e) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,"throw new RuntimeException(""Access not authorized on field '"" + field + ""' of object '"" + target + ""' with value: '"" + value + ""'"", e);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,} catch (IllegalArgumentException e) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,"throw new RuntimeException(""Wrong argument on field '"" + field + ""' of object '"" + target + ""' with value: '"" + value + ""', \n"" +",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,"""reason : "" + e.getMessage(), e);",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,changer.safelyDisableAccess(field);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\FieldSetter.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import org.mockito.internal.util.Checks;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import org.mockito.internal.util.collections.ListUtil;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import org.mockito.internal.util.collections.ListUtil.Filter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import java.lang.annotation.Annotation;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import java.lang.reflect.Field;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import java.util.ArrayList;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,import java.util.List;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Small fluent reflection tools to work with fields.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Code is very new and might need rework.,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public abstract class Fields {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/**,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Instance fields declared in the class and superclasses of the given instance.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @param instance Instance from which declared fields will be retrieved.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @return InstanceFields of this object instance.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public static InstanceFields allDeclaredFieldsOf(Object instance) {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,List<InstanceField> instanceFields = new ArrayList<InstanceField>();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,for (Class<?> clazz = instance.getClass(); clazz != Object.class; clazz = clazz.getSuperclass()) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"instanceFields.addAll(instanceFieldsIn(instance, clazz.getDeclaredFields()));",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"return new InstanceFields(instance, instanceFields);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/**,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Instance fields declared in the class of the given instance.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @param instance Instance from which declared fields will be retrieved.,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @return InstanceFields of this object instance.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public static InstanceFields declaredFieldsOf(Object instance) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,List<InstanceField> instanceFields = new ArrayList<InstanceField>();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"instanceFields.addAll(instanceFieldsIn(instance, instance.getClass().getDeclaredFields()));",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"return new InstanceFields(instance, instanceFields);",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"private static List<InstanceField> instanceFieldsIn(Object instance, Field[] fields) {",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,List<InstanceField> instanceDeclaredFields = new ArrayList<InstanceField>();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,for (Field field : fields) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"InstanceField instanceField = new InstanceField(field, instance);",52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,instanceDeclaredFields.add(instanceField);,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return instanceDeclaredFields;,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/**,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Accept fields annotated by the given annotations.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @param annotations Annotation types to check.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @return The filter.,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public static Filter<InstanceField> annotatedBy(final Class<? extends Annotation>... annotations) {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return new Filter<InstanceField>() {,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public boolean isOut(InstanceField instanceField) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"Checks.checkNotNull(annotations, ""Provide at least one annotation class"");",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,for (Class<? extends Annotation> annotation : annotations) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,if(instanceField.isAnnotatedBy(annotation)) {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return false;,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return true;,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,};,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,/**,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* Accept fields with non null value.,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,* @return The filter.,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,*/,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,private static Filter<InstanceField> nullField() {,84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return new Filter<InstanceField>() {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public boolean isOut(InstanceField instanceField) {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return instanceField.isNull();,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,};,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public static class InstanceFields {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,private final Object instance;,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,94,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,private final List<InstanceField> instanceFields;,95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,96,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"public InstanceFields(Object instance, List<InstanceField> instanceFields) {",97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,this.instance = instance;,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,this.instanceFields = instanceFields;,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public InstanceFields filter(Filter<InstanceField> withFilter) {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,"return new InstanceFields(instance, ListUtil.filter(instanceFields, withFilter));",103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,105,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public InstanceFields notNull() {,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return filter(nullField());,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,109,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public List<InstanceField> instanceFields() {,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return new ArrayList<InstanceField>(instanceFields);,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public List<Object> assignedValues() {,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,List<Object> values = new ArrayList<Object>(instanceFields.size());,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,for (InstanceField instanceField : instanceFields) {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,values.add(instanceField.read());,117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return values;,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,,121,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,public List<String> names() {,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,List<String> fieldNames = new ArrayList<String>(instanceFields.size());,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,for (InstanceField instanceField : instanceFields) {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,fieldNames.add(instanceField.name());,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,return fieldNames;,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Fields.java,},130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,import java.lang.reflect.ParameterizedType;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,import java.lang.reflect.Type;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,"@SuppressWarnings(""unchecked"")",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,public class GenericMaster {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,* Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,* @param field,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,public Class getGenericType(Field field) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,Type generic = field.getGenericType();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,if (generic instanceof ParameterizedType) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,if (actual instanceof Class) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,return (Class) actual;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,} else if (actual instanceof ParameterizedType) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,//in case of nested generics we don't go deep,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,return (Class) ((ParameterizedType) actual).getRawType();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,return Object.class;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMaster.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,import org.mockito.internal.util.Checks;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,import java.lang.reflect.*;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,import java.util.*;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* This class can retrieve generic meta-data that the compiler stores on classes,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* and accessible members.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     The main idea of this code is to create a Map that will help to resolve return types.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*     In order to actually work with nested generics, this map will have to be passed along new instances",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     as a type context.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </p>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* <p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     Hence :,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     <ul>,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*         <li>A new instance representing the metadata is created using the {@link #inferFrom(Type)} method from a real,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*         <code>Class</code> or from a <code>ParameterizedType</code>, other types are not yet supported.</li>",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*         <li>Then from this metadata, we can extract meta-data for a generic return type of a method, using",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*         {@link #resolveGenericReturnType(Method)}.</li>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     </ul>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </p>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* <p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* For now this code support the following kind of generic declarations :,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* <pre class=""code""><code class=""java"">",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* interface GenericsNest&lt;K extends Comparable&lt;K&gt; & Cloneable&gt; extends Map&lt;K, Set&lt;Number&gt;&gt; {",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     Set&lt;Number&gt; remove(Object key); // override with fixed ParameterizedType,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     List&lt;? super Integer&gt; returning_wildcard_with_class_lower_bound();,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     List&lt;? super K&gt; returning_wildcard_with_typeVar_lower_bound();,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     List&lt;? extends K&gt; returning_wildcard_with_typeVar_upper_bound();,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     K returningK();,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     &lt;O extends K&gt; List&lt;O&gt; paramType_with_type_params();,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*     &lt;S, T extends S&gt; T two_type_params();",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     &lt;O extends K&gt; O typeVar_with_type_params();,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     Number returningNonGeneric();,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* },49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </code></pre>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see #inferFrom(Type),52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see #resolveGenericReturnType(Method),53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public abstract class GenericMetadataSupport {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,// public static MockitoLogger logger = new ConsoleMockitoLogger();,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Represents actual type variables resolved for current class.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,65,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,protected void registerTypeVariablesOn(Type classType) {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (!(classType instanceof ParameterizedType)) {,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return;,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,ParameterizedType parameterizedType = (ParameterizedType) classType;,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (int i = 0; i < actualTypeArguments.length; i++) {,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,TypeVariable typeParameter = typeParameters[i];,74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type actualTypeArgument = actualTypeArguments[i];,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,76,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (actualTypeArgument instanceof WildcardType) {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));",78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,} else if (typeParameter != actualTypeArgument) {,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"contextualActualTypeParameters.put(typeParameter, actualTypeArgument);",80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"// logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' }"");",82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,85,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,protected void registerTypeParametersOn(TypeVariable[] typeParameters) {,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (TypeVariable type : typeParameters) {,87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariableIfNotPresent(type);,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void registerTypeVariableIfNotPresent(TypeVariable typeVariable) {,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (!contextualActualTypeParameters.containsKey(typeVariable)) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));",94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"// logger.log(""For '"" + typeVariable.getGenericDeclaration() + ""' found type variable : { '"" + typeVariable + ""("" + System.identityHashCode(typeVariable) + "")"" + ""' : '"" + boundsOf(typeVariable) + ""' }"");",95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,98,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @param typeParameter The TypeVariable parameter,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return A {@link BoundedType} for easy bound information, if first bound is a TypeVariable",101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*         then retrieve BoundedType of this TypeVariable,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private BoundedType boundsOf(TypeVariable typeParameter) {,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (typeParameter.getBounds()[0] instanceof TypeVariable) {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return boundsOf((TypeVariable) typeParameter.getBounds()[0]);,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new TypeVarBoundedType(typeParameter);,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @param wildCard The WildCard type,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return A {@link BoundedType} for easy bound information, if first bound is a TypeVariable",113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*         then retrieve BoundedType of this TypeVariable,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private BoundedType boundsOf(WildcardType wildCard) {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/*,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*  According to JLS(http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1):,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*  - Lower and upper can't coexist: (for instance, this is not allowed: <? extends List<String> & super MyInterface>)",119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*  - Multiple bounds are not supported (for instance, this is not allowed: <? extends List<String> & MyInterface>)",120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,WildCardBoundedType wildCardBoundedType = new WildCardBoundedType(wildCard);,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (wildCardBoundedType.firstBound() instanceof TypeVariable) {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return boundsOf((TypeVariable) wildCardBoundedType.firstBound());,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,127,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return wildCardBoundedType;,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},129,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,130,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,131,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,132,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return Raw type of the current instance.,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public abstract Class<?> rawType();,136,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,137,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,138,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,139,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return Returns extra interfaces <strong>if relevant</strong>, otherwise empty List.",141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public List<Type> extraInterfaces() {,143,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return Collections.emptyList();,144,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,146,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return Returns an array with the raw types of {@link #extraInterfaces()} <strong>if relevant</strong>.,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?>[] rawExtraInterfaces() {,150,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new Class[0];,151,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},152,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,153,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return Returns true if metadata knows about extra-interfaces {@link #extraInterfaces()} <strong>if relevant</strong>.,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public boolean hasRawExtraInterfaces() {,157,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return rawExtraInterfaces().length > 0;,158,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},159,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,160,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,161,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,162,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return Actual type arguments matching the type variables of the raw type represented by this {@link GenericMetadataSupport} instance.,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"public Map<TypeVariable, Type> actualTypeArguments() {",166,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,TypeVariable[] typeParameters = rawType().getTypeParameters();,167,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"LinkedHashMap<TypeVariable, Type> actualTypeArguments = new LinkedHashMap<TypeVariable, Type>();",168,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,169,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (TypeVariable typeParameter : typeParameters) {,170,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,171,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type actualType = getActualTypeArgumentFor(typeParameter);,172,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,173,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"actualTypeArguments.put(typeParameter, actualType);",174,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"// logger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");",175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},176,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,177,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return actualTypeArguments;,178,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},179,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,180,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,protected Type getActualTypeArgumentFor(TypeVariable typeParameter) {,181,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type type = this.contextualActualTypeParameters.get(typeParameter);,182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof TypeVariable) {,183,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,TypeVariable typeVariable = (TypeVariable) type;,184,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return getActualTypeArgumentFor(typeVariable);,185,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},186,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,187,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return type;,188,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},189,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,190,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,191,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,192,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Resolve current method generic return type to a {@link GenericMetadataSupport}.,194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @param method Method to resolve the return type.,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return {@link GenericMetadataSupport} representing this generic return type.,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public GenericMetadataSupport resolveGenericReturnType(Method method) {,199,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type genericReturnType = method.getGenericReturnType();,200,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"// logger.log(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);",201,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,202,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (genericReturnType instanceof Class) {,203,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new NotGenericReturnTypeSupport(genericReturnType);,204,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},205,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (genericReturnType instanceof ParameterizedType) {,206,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return new ParameterizedReturnType(this, method.getTypeParameters(), (ParameterizedType) method.getGenericReturnType());",207,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},208,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (genericReturnType instanceof TypeVariable) {,209,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return new TypeVariableReturnType(this, method.getTypeParameters(), (TypeVariable) genericReturnType);",210,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},211,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,212,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"throw new MockitoException(""Ouch, it shouldn't happen, type '"" + genericReturnType.getClass().getCanonicalName() + ""' on method : '"" + method.toGenericString() + ""' is not supported : "" + genericReturnType);",213,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},214,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,215,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,216,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Create an new instance of {@link GenericMetadataSupport} inferred from a {@link Type}.,217,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,218,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* <p>,219,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"*     At the moment <code>type</code> can only be a {@link Class} or a {@link ParameterizedType}, otherwise",220,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     it'll throw a {@link MockitoException}.,221,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </p>,222,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,223,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @param type The class from which the {@link GenericMetadataSupport} should be built.,224,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return The new {@link GenericMetadataSupport}.,225,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @throws MockitoException Raised if type is not a {@link Class} or a {@link ParameterizedType}.,226,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,227,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public static GenericMetadataSupport inferFrom(Type type) {,228,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"Checks.checkNotNull(type, ""type"");",229,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof Class) {,230,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new FromClassGenericMetadataSupport((Class<?>) type);,231,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},232,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof ParameterizedType) {,233,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new FromParameterizedTypeGenericMetadataSupport((ParameterizedType) type);,234,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},235,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,236,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"throw new MockitoException(""Type meta-data for this Type ("" + type.getClass().getCanonicalName() + "") is not supported : "" + type);",237,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},238,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,239,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,240,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,////////////////////////////////////////////////////////////////////////////////////////////////////////////////////,241,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,//// Below are specializations of GenericMetadataSupport that could handle retrieval of possible Types,242,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,////////////////////////////////////////////////////////////////////////////////////////////////////////////////////,243,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,244,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,245,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Generic metadata implementation for {@link Class}.,246,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,247,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Offer support to retrieve generic metadata on a {@link Class} by reading type parameters and type variables on,248,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* the class and its ancestors and interfaces.,249,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,250,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private static class FromClassGenericMetadataSupport extends GenericMetadataSupport {,251,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final Class<?> clazz;,252,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,253,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public FromClassGenericMetadataSupport(Class<?> clazz) {,254,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.clazz = clazz;,255,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,256,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (Class currentExploredClass = clazz;,257,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,currentExploredClass != null && currentExploredClass != Object.class;,258,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,currentExploredClass = superClassOf(currentExploredClass),259,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,) {,260,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readActualTypeParametersOnDeclaringClass(currentExploredClass);,261,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},262,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},263,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,264,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private Class superClassOf(Class currentExploredClass) {,265,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type genericSuperclass = currentExploredClass.getGenericSuperclass();,266,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (genericSuperclass instanceof ParameterizedType) {,267,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type rawType = ((ParameterizedType) genericSuperclass).getRawType();,268,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class) rawType;,269,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},270,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class) genericSuperclass;,271,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},272,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,273,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readActualTypeParametersOnDeclaringClass(Class<?> clazz) {,274,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeParametersOn(clazz.getTypeParameters());,275,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(clazz.getGenericSuperclass());,276,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (Type genericInterface : clazz.getGenericInterfaces()) {,277,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(genericInterface);,278,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},279,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},280,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,281,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,282,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?> rawType() {,283,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return clazz;,284,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},285,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},286,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,287,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,288,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,289,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* Generic metadata implementation for ""standalone"" {@link ParameterizedType}.",290,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,291,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Offer support to retrieve generic metadata on a {@link ParameterizedType} by reading type variables of,292,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* the related raw type and declared type variable of this parameterized type.,293,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,294,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* This class is not designed to work on ParameterizedType returned by {@link Method#getGenericReturnType()}, as",295,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* the ParameterizedType instance return in these cases could have Type Variables that refer to type declaration(s).,296,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* That's what meant the ""standalone"" word at the beginning of the Javadoc.",297,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Instead use {@link ParameterizedReturnType}.,298,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,299,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private static class FromParameterizedTypeGenericMetadataSupport extends GenericMetadataSupport {,300,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final ParameterizedType parameterizedType;,301,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,302,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public FromParameterizedTypeGenericMetadataSupport(ParameterizedType parameterizedType) {,303,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.parameterizedType = parameterizedType;,304,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readActualTypeParameters();,305,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},306,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,307,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readActualTypeParameters() {,308,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(parameterizedType.getRawType());,309,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(parameterizedType);,310,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},311,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,312,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,313,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?> rawType() {,314,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class<?>) parameterizedType.getRawType();,315,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},316,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},317,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,318,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,319,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,320,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Generic metadata specific to {@link ParameterizedType} returned via {@link Method#getGenericReturnType()}.,321,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,322,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private static class ParameterizedReturnType extends GenericMetadataSupport {,323,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final ParameterizedType parameterizedType;,324,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final TypeVariable[] typeParameters;,325,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,326,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"public ParameterizedReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, ParameterizedType parameterizedType) {",327,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.parameterizedType = parameterizedType;,328,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.typeParameters = typeParameters;,329,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.contextualActualTypeParameters = source.contextualActualTypeParameters;,330,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,331,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readTypeParameters();,332,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readTypeVariables();,333,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},334,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,335,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readTypeParameters() {,336,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeParametersOn(typeParameters);,337,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},338,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,339,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readTypeVariables() {,340,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(parameterizedType);,341,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},342,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,343,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,344,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?> rawType() {,345,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class<?>) parameterizedType.getRawType();,346,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},347,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,348,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},349,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,350,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,351,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,352,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Generic metadata for {@link TypeVariable} returned via {@link Method#getGenericReturnType()}.,353,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,354,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private static class TypeVariableReturnType extends GenericMetadataSupport {,355,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final TypeVariable typeVariable;,356,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final TypeVariable[] typeParameters;,357,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private Class<?> rawType;,358,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,359,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,360,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,361,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable) {",362,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.typeParameters = typeParameters;,363,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.typeVariable = typeVariable;,364,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.contextualActualTypeParameters = source.contextualActualTypeParameters;,365,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,366,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readTypeParameters();,367,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,readTypeVariables();,368,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},369,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,370,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readTypeParameters() {,371,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeParametersOn(typeParameters);,372,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},373,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,374,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private void readTypeVariables() {,375,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (Type type : typeVariable.getBounds()) {,376,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(type);,377,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},378,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeParametersOn(new TypeVariable[] { typeVariable });,379,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));,380,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},381,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,382,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,383,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?> rawType() {,384,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (rawType == null) {,385,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,rawType = extractRawTypeOf(typeVariable);,386,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},387,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return rawType;,388,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},389,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,390,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private Class<?> extractRawTypeOf(Type type) {,391,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof Class) {,392,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class<?>) type;,393,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},394,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof ParameterizedType) {,395,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return (Class<?>) ((ParameterizedType) type).getRawType();,396,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},397,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof BoundedType) {,398,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return extractRawTypeOf(((BoundedType) type).firstBound());,399,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},400,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof TypeVariable) {,401,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/*,402,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* If type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared",403,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* on the class definition, such as such as List<E>.",404,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,405,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return extractRawTypeOf(contextualActualTypeParameters.get(type));,406,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},407,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"throw new MockitoException(""Raw extraction not supported for : '"" + type + ""'"");",408,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},409,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,410,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,411,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public List<Type> extraInterfaces() {,412,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type type = extractActualBoundedTypeOf(typeVariable);,413,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof BoundedType) {,414,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return Arrays.asList(((BoundedType) type).interfaceBounds());,415,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},416,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof ParameterizedType) {,417,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return Collections.singletonList(type);,418,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},419,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof Class) {,420,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return Collections.emptyList();,421,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},422,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"throw new MockitoException(""Cannot extract extra-interfaces from '"" + typeVariable + ""' : '"" + type + ""'"");",423,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},424,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,425,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,426,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @return Returns an array with the extracted raw types of {@link #extraInterfaces()}.,427,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see #extractRawTypeOf(java.lang.reflect.Type),428,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,429,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?>[] rawExtraInterfaces() {,430,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,List<Type> extraInterfaces = extraInterfaces();,431,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();,432,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,for (Type extraInterface : extraInterfaces) {,433,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Class<?> rawInterface = extractRawTypeOf(extraInterface);,434,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"// avoid interface collision with actual raw type (with typevariables, resolution ca be quite aggressive)",435,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if(!rawType().equals(rawInterface)) {,436,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,rawExtraInterfaces.add(rawInterface);,437,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},438,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},439,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);,440,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},441,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,442,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private Type extractActualBoundedTypeOf(Type type) {,443,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof TypeVariable) {,444,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/*,445,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"If type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared",446,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"on the class definition, such as such as List<E>.",447,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,448,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return extractActualBoundedTypeOf(contextualActualTypeParameters.get(type));,449,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},450,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (type instanceof BoundedType) {,451,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type actualFirstBound = extractActualBoundedTypeOf(((BoundedType) type).firstBound());,452,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (!(actualFirstBound instanceof BoundedType)) {,453,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return type; // avoid going one step further, ie avoid : O(TypeVar) -> K(TypeVar) -> Some ParamType",454,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},455,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return actualFirstBound;,456,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},457,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return type; // irrelevant, we don't manage other types as they are not bounded.",458,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},459,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},460,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,461,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,462,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,463,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,464,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Non-Generic metadata for {@link Class} returned via {@link Method#getGenericReturnType()}.,465,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,466,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private static class NotGenericReturnTypeSupport extends GenericMetadataSupport {,467,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final Class<?> returnType;,468,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,469,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public NotGenericReturnTypeSupport(Type genericReturnType) {,470,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,returnType = (Class<?>) genericReturnType;,471,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},472,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,473,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,474,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Class<?> rawType() {,475,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return returnType;,476,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},477,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},478,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,479,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,480,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,481,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,482,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* Type representing bounds of a type,483,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,484,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see TypeVarBoundedType,485,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>",486,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* @see WildCardBoundedType,487,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1</a>",488,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,489,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public interface BoundedType extends Type {,490,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type firstBound();,491,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,492,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type[] interfaceBounds();,493,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},494,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,495,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,496,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* Type representing bounds of a type variable, allows to keep all bounds information.",497,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,498,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* <p>It uses the first bound in the array, as this array is never null and always contains at least",499,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* one element (Object is always here if no bounds are declared).</p>,500,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,501,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and",502,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* interfacesBound will be an array of the additional interfaces.,503,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,504,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* i.e. <code>SomeClass</code>.,505,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* <pre class=""code""><code class=""java"">",506,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {,507,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*         E get();,508,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     },509,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*     // will return Comparable type,510,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </code></pre>,511,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* </p>,512,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,513,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>",514,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,515,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public static class TypeVarBoundedType implements BoundedType {,516,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final TypeVariable typeVariable;,517,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,518,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,519,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public TypeVarBoundedType(TypeVariable typeVariable) {,520,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.typeVariable = typeVariable;,521,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},522,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,523,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,524,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return either a class or an interface (parameterized or not), if no bounds declared Object is returned.",525,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,526,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Type firstBound() {,527,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return typeVariable.getBounds()[0]; //,528,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},529,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,530,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,531,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* On a Type Variable (typeVar extends C_0 & I_1 & I_2 & etc), will return an array",532,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* containing I_1 and I_2.,533,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,534,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return other bounds for this type, these bounds can only be only interfaces as the JLS says,",535,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* empty array if no other bound declared.,536,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,537,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Type[] interfaceBounds() {,538,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];,539,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);",540,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return interfaceBounds;,541,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},542,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,543,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,544,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public boolean equals(Object o) {,545,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (this == o) return true;,546,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (o == null || getClass() != o.getClass()) return false;,547,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,548,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return typeVariable.equals(((TypeVarBoundedType) o).typeVariable);,549,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,550,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},551,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,552,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,553,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public int hashCode() {,554,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return typeVariable.hashCode();,555,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},556,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,557,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,558,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public String toString() {,559,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return ""{firstBound="" + firstBound() + "", interfaceBounds="" + Arrays.deepToString(interfaceBounds()) + '}';",560,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},561,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,562,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public TypeVariable typeVariable() {,563,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return typeVariable;,564,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},565,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},566,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,567,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,568,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* Type representing bounds of a wildcard, allows to keep all bounds information.",569,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,570,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* <p>The JLS says that lower bound and upper bound are mutually exclusive, and that multiple bounds",571,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,* are not allowed.,572,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*,573,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>",574,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,575,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public static class WildCardBoundedType implements BoundedType {,576,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,private final WildcardType wildcard;,577,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,578,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,579,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public WildCardBoundedType(WildcardType wildcard) {,580,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,this.wildcard = wildcard;,581,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},582,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,583,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,584,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return The first bound, either a type or a reference to a TypeVariable",585,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,586,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Type firstBound() {,587,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type[] lowerBounds = wildcard.getLowerBounds();,588,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,Type[] upperBounds = wildcard.getUpperBounds();,589,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,590,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return lowerBounds.length != 0 ? lowerBounds[0] : upperBounds[0];,591,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},592,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,593,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,/**,594,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"* @return An empty array as, wildcard don't support multiple bounds.",595,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,*/,596,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public Type[] interfaceBounds() {,597,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return new Type[0];,598,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},599,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,600,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,601,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public boolean equals(Object o) {,602,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (this == o) return true;,603,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,if (o == null || getClass() != o.getClass()) return false;,604,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,605,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return wildcard.equals(((TypeVarBoundedType) o).typeVariable);,606,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,607,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},608,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,609,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,610,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public int hashCode() {,611,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return wildcard.hashCode();,612,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},613,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,614,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,@Override,615,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public String toString() {,616,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,"return ""{firstBound="" + firstBound() + "", interfaceBounds=[]}"";",617,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},618,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,619,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,public WildcardType wildCard() {,620,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,return wildcard;,621,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},622,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},623,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,624,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,},625,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,626,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\GenericMetadataSupport.java,,627,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,import org.mockito.internal.util.Checks;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,import java.lang.annotation.Annotation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,import java.lang.reflect.Field;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Represents an accessible instance field.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Contains the instance reference on which the field can be read adn write.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public class InstanceField {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,private final Field field;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,private final Object instance;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,private FieldReader fieldReader;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Create a new InstanceField.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"* @param field The field that should be accessed, note that no checks are performed to ensure",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*              the field belong to this instance class.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @param instance The instance from which the field shall be accessed.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"public InstanceField(Field field, Object instance) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"this.field = Checks.checkNotNull(field, ""field"");",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"this.instance = Checks.checkNotNull(instance, ""instance"");",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Safely read the field.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @return the field value.,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @see FieldReader,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public Object read() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return reader().read();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Set the given value to the field of this instance.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @param value The value that should be written to the field.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @see FieldSetter,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public void set(Object value) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"new FieldSetter(instance, field).set(value);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Check that the field is not null.,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"* @return <code>true</code> if <code>null</code>, else <code>false</code>.",57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public boolean isNull() {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return reader().isNull();,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Check if the field is annotated by the given annotation.,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @param annotationClass The annotation type to check.,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"* @return <code>true</code> if the field is annotated by this annotation, else <code>false</code>.",67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public boolean isAnnotatedBy(Class<? extends Annotation> annotationClass) {,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return field.isAnnotationPresent(annotationClass);,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Returns the annotation instance for the given annotation type.,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @param annotationClass Tha annotation type to retrieve.,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @param <A> Type of the annotation.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @return The annotation instance.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public <A extends Annotation> A annotation(Class<A> annotationClass) {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return field.getAnnotation(annotationClass);,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,83,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Returns the JDK {@link Field} instance.,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @return The actual {@link Field} instance.,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public Field jdkField() {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return field;,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,private FieldReader reader() {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,if (fieldReader == null) {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,"fieldReader = new FieldReader(instance, field);",95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return fieldReader;,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,99,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,/**,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* Returns the name of the field.,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,* @return Name of the field.,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,*/,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public String name() {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return field.getName();,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,108,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,@Override,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public boolean equals(Object o) {,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,if (this == o) return true;,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,if (o == null || getClass() != o.getClass()) return false;,112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,113,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,InstanceField that = (InstanceField) o;,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return field.equals(that.field) && instance.equals(that.instance);,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,@Override,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,public int hashCode() {,119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,int result = field.hashCode();,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,result = 31 * result + instance.hashCode();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,return result;,122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\InstanceField.java,},124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,import java.lang.reflect.Modifier;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"@SuppressWarnings(""unchecked"")",10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,public class LenientCopyTool {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,FieldCopier fieldCopier = new FieldCopier();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"public <T> void copyToMock(T from, T mock) {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"copy(from, mock, from.getClass(), mock.getClass().getSuperclass());",16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"public <T> void copyToRealObject(T from, T to) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"copy(from, to, from.getClass(), to.getClass());",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"private <T> void copy(T from, T to, Class fromClazz, Class toClass) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,while (fromClazz != Object.class) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"copyValues(from, to, fromClazz);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,fromClazz = fromClazz.getSuperclass();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"private <T> void copyValues(T from, T mock, Class classFrom) {",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,Field[] fields = classFrom.getDeclaredFields();,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,for (int i = 0; i < fields.length; i++) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,// ignore static fields,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,Field field = fields[i];,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,if (Modifier.isStatic(field.getModifiers())) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,continue;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,AccessibilityChanger accessibilityChanger = new AccessibilityChanger();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,try {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,accessibilityChanger.enableAccess(field);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,"fieldCopier.copyValue(from, mock, field);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,} catch (Throwable t) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,//Ignore - be lenient - if some field cannot be copied then let's be it,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,} finally {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,accessibilityChanger.safelyDisableAccess(field);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\LenientCopyTool.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,* Copyright (c) 2015 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,package org.mockito.internal.util.reflection;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.lang.reflect.Field;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.util.ArrayList;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.util.Collection;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.util.Collections;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.util.Comparator;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,"* Sort fields in an order suitable for injection, by name with superclasses",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,* moved after their subclasses.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,public class SuperTypesLastSorter,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,{,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,/**,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,"* Return a new collection with the fields sorted first by name,",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,* then with any fields moved after their supertypes.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,public List<Field> sort(Collection<? extends Field> unsortedFields),25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,{,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,List<Field> fields = new ArrayList<Field>(unsortedFields);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,"Collections.sort(fields, compareFieldsByName);",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,int i = 0;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,while (i < fields.size() - 1) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,Field f = fields.get(i);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,Class<?> ft = f.getType();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,int newPos = i;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,for (int j = i + 1; j < fields.size(); j++) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,Class<?> t = fields.get(j).getType();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,if (ft != t && ft.isAssignableFrom(t)) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,newPos = j;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,if (newPos == i) {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,i++;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,} else {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,fields.remove(i);,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,"fields.add(newPos, f);",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,return fields;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,private static Comparator<Field> compareFieldsByName = new Comparator<Field>(),57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,{,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,"public int compare(Field o1, Field o2)",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,{,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,return o1.getName().compareTo(o2.getName());,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,};,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\SuperTypesLastSorter.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,package org.mockito.internal.util.reflection;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,import java.lang.reflect.Field;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,public class Whitebox {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"public static Object getInternalState(Object target, String field) {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,Class<?> c = target.getClass();,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,try {,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"Field f = getFieldFromHierarchy(c, field);",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,f.setAccessible(true);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,return f.get(target);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,} catch (Exception e) {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"throw new RuntimeException(""Unable to get internal state on a private field. Please report to mockito mailing list."", e);",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"public static void setInternalState(Object target, String field, Object value) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,Class<?> c = target.getClass();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,try {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"Field f = getFieldFromHierarchy(c, field);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,f.setAccessible(true);,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"f.set(target, value);",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,} catch (Exception e) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"throw new RuntimeException(""Unable to set internal state on a private field. Please report to mockito mailing list."", e);",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"private static Field getFieldFromHierarchy(Class<?> clazz, String field) {",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"Field f = getField(clazz, field);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,while (f == null && clazz != Object.class) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,clazz = clazz.getSuperclass();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"f = getField(clazz, field);",37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,if (f == null) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,throw new RuntimeException(,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"""You want me to get this field: '"" + field +",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"""' on this class: '"" + clazz.getSimpleName() +",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"""' but this field is not declared withing hierarchy of this class!"");",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,return f;,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,"private static Field getField(Class<?> clazz, String field) {",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,try {,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,return clazz.getDeclaredField(field);,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,} catch (NoSuchFieldException e) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,return null;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\util\reflection\Whitebox.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.exceptions.base.MockitoException;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.api.VerificationData;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.api.VerificationDataInOrder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsChecker;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.checkers.AtLeastXNumberOfInvocationsInOrderChecker;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.checkers.MissingInvocationChecker;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.internal.verification.checkers.MissingInvocationInOrderChecker;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.invocation.Invocation;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,import org.mockito.verification.VerificationMode;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"public class AtLeast implements VerificationInOrderMode, VerificationMode {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,final int wantedCount;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,public AtLeast(int wantedNumberOfInvocations) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,if (wantedNumberOfInvocations < 0) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"throw new MockitoException(""Negative value is not allowed here"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,this.wantedCount = wantedNumberOfInvocations;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,public void verify(VerificationData data) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,MissingInvocationChecker missingInvocation = new MissingInvocationChecker();,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,AtLeastXNumberOfInvocationsChecker numberOfInvocations = new AtLeastXNumberOfInvocationsChecker();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,if (wantedCount == 1) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"missingInvocation.check(data.getAllInvocations(), data.getWanted());",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"numberOfInvocations.check(data.getAllInvocations(), data.getWanted(), wantedCount);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,42,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,public void verifyInOrder(VerificationDataInOrder data) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,List<Invocation> allInvocations = data.getAllInvocations();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,InvocationMatcher wanted = data.getWanted();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,AtLeastXNumberOfInvocationsInOrderChecker numberOfCalls = new AtLeastXNumberOfInvocationsInOrderChecker(data.getOrderingContext());,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,if (wantedCount == 1) {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"missingInvocation.check(allInvocations, wanted, this, data.getOrderingContext());",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"numberOfCalls.check(allInvocations, wanted, wantedCount);",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,@Override,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,public String toString() {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,"return ""Wanted invocations count: at least "" + wantedCount;",59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtLeast.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.exceptions.base.MockitoException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.internal.invocation.InvocationMatcher;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.internal.invocation.InvocationMarker;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.internal.invocation.InvocationsFinder;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.internal.verification.api.VerificationData;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.invocation.Invocation;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,import org.mockito.verification.VerificationMode;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,public class AtMost implements VerificationMode {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,private final int maxNumberOfInvocations;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,private final InvocationMarker invocationMarker = new InvocationMarker();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,public AtMost(int maxNumberOfInvocations) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,if (maxNumberOfInvocations < 0) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,"throw new MockitoException(""Negative value is not allowed here"");",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,this.maxNumberOfInvocations = maxNumberOfInvocations;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,public void verify(VerificationData data) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,List<Invocation> invocations = data.getAllInvocations();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,InvocationMatcher wanted = data.getWanted();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,InvocationsFinder finder = new InvocationsFinder();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,"List<Invocation> found = finder.findInvocations(invocations, wanted);",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,int foundSize = found.size();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,if (foundSize > maxNumberOfInvocations) {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,"new Reporter().wantedAtMostX(maxNumberOfInvocations, foundSize);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,"invocationMarker.markVerified(found, wanted);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\AtMost.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.exceptions.base.MockitoException;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.internal.verification.api.VerificationData;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.internal.verification.api.VerificationDataInOrder;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.internal.verification.checkers.*;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import org.mockito.verification.VerificationMode;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,import java.util.List;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"public class Calls implements VerificationMode, VerificationInOrderMode {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,final int wantedCount;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,public Calls(int wantedNumberOfInvocations) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,if( wantedNumberOfInvocations <= 0 ) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"throw new MockitoException( ""Negative and zero values are not allowed here"" );",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,this.wantedCount = wantedNumberOfInvocations;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,public void verify(VerificationData data) {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"throw new MockitoException( ""calls is only intended to work with InOrder"" );",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,public void verifyInOrder(VerificationDataInOrder data) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,List<Invocation> allInvocations = data.getAllInvocations();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,InvocationMatcher wanted = data.getWanted();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"missingInvocation.check( allInvocations, wanted, this, data.getOrderingContext());",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,NonGreedyNumberOfInvocationsInOrderChecker numberOfCalls = new NonGreedyNumberOfInvocationsInOrderChecker();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"numberOfCalls.check( allInvocations, wanted, wantedCount, data.getOrderingContext());",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,@Override,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,public String toString() {,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,"return ""Wanted invocations count (non-greedy): "" + wantedCount;",46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,,48,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Calls.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import org.mockito.internal.util.ObjectMethodsGuru;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import org.mockito.internal.util.collections.ListUtil;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import org.mockito.internal.util.collections.ListUtil.Filter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import org.mockito.invocation.Invocation;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import java.io.Serializable;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import java.util.LinkedList;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,"public class DefaultRegisteredInvocations implements RegisteredInvocations, Serializable {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,private static final long serialVersionUID = -2674402327380736290L;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,private final LinkedList<Invocation> invocations = new LinkedList<Invocation>();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,public void add(Invocation invocation) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,synchronized (invocations) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,invocations.add(invocation);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,public void removeLast() {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,//TODO: add specific test for synchronization of this block (it is tested by InvocationContainerImplTest at the moment),30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,synchronized (invocations) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,if (! invocations.isEmpty()) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,invocations.removeLast();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,37,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,public List<Invocation> getAll() {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,List<Invocation> copiedList;,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,synchronized (invocations) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,copiedList = new LinkedList<Invocation>(invocations) ;,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,"return ListUtil.filter(copiedList, new RemoveToString());",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,public boolean isEmpty() {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,synchronized (invocations) {,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,return invocations.isEmpty();,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,private static class RemoveToString implements Filter<Invocation> {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,public boolean isOut(Invocation invocation) {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,return new ObjectMethodsGuru().isToString(invocation.getMethod());,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,,58,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\DefaultRegisteredInvocations.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,import org.mockito.internal.util.collections.IdentitySet;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,import org.mockito.internal.verification.api.InOrderContext;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,import org.mockito.invocation.Invocation;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,public class InOrderContextImpl implements InOrderContext {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,final IdentitySet verified = new IdentitySet();,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,public boolean isVerified(Invocation invocation) {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,return verified.contains(invocation);,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,public void markVerified(Invocation i) {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,verified.add(i);,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderContextImpl.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.internal.InOrderImpl;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.internal.invocation.finder.VerifiableInvocationsFinder;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.internal.verification.api.VerificationData;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.internal.verification.api.VerificationDataInOrderImpl;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.invocation.Invocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import org.mockito.verification.VerificationMode;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,import java.util.List;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,public class InOrderWrapper implements VerificationMode {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,private final VerificationInOrderMode mode;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,private final InOrderImpl inOrder;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,"public InOrderWrapper(VerificationInOrderMode mode, InOrderImpl inOrder) {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,this.mode = mode;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,this.inOrder = inOrder;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,public void verify(VerificationData data) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,List<Invocation> invocations = new VerifiableInvocationsFinder().find(inOrder.getMocksToBeVerifiedInOrder());,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,"VerificationDataInOrderImpl dataInOrder = new VerificationDataInOrderImpl(inOrder, invocations, data.getWanted());",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,mode.verifyInOrder(dataInOrder);,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\InOrderWrapper.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,import org.mockito.internal.verification.api.VerificationData;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,import org.mockito.verification.VerificationMode;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,public class MockAwareVerificationMode implements VerificationMode {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,private final Object mock;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,private final VerificationMode mode;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,"public MockAwareVerificationMode(Object mock, VerificationMode mode) {",15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,this.mock = mock;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,this.mode = mode;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,public void verify(VerificationData data) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,mode.verify(data);,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,public Object getMock() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,return mock;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\MockAwareVerificationMode.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.internal.invocation.InvocationsFinder;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.internal.verification.api.VerificationData;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.internal.verification.api.VerificationDataInOrder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.invocation.Invocation;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,import org.mockito.verification.VerificationMode;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,"public class NoMoreInteractions implements VerificationMode, VerificationInOrderMode {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,"@SuppressWarnings(""unchecked"")",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,public void verify(VerificationData data) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,Invocation unverified = new InvocationsFinder().findFirstUnverified(data.getAllInvocations());,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,if (unverified != null) {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,"new Reporter().noMoreInteractionsWanted(unverified, (List) data.getAllInvocations());",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,public void verifyInOrder(VerificationDataInOrder data) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,List<Invocation> invocations = data.getAllInvocations();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,"Invocation unverified = new InvocationsFinder().findFirstUnverifiedInOrder(data.getOrderingContext(), invocations);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,if (unverified != null) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,new Reporter().noMoreInteractionsWantedInOrder(unverified);,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\NoMoreInteractions.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.exceptions.Reporter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.internal.invocation.InvocationMarker;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.internal.invocation.InvocationsFinder;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.internal.verification.api.VerificationData;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,import org.mockito.verification.VerificationMode;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,public class Only implements VerificationMode {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,private final InvocationsFinder finder = new InvocationsFinder();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,private final InvocationMarker marker = new InvocationMarker();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,private final Reporter reporter = new Reporter();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,"@SuppressWarnings(""unchecked"")",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,public void verify(VerificationData data) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,InvocationMatcher wantedMatcher = data.getWanted();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,List<Invocation> invocations = data.getAllInvocations();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,"List<Invocation> chunk = finder.findInvocations(invocations,wantedMatcher);",27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,if (invocations.size() != 1 && chunk.size() > 0) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,Invocation unverified = finder.findFirstUnverified(invocations);,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,"reporter.noMoreInteractionsWanted(unverified, (List) invocations);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,} else if (invocations.size() != 1 || chunk.size() == 0) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,reporter.wantedButNotInvoked(wantedMatcher);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,"marker.markVerified(chunk.get(0), wantedMatcher);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Only.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,import org.mockito.internal.util.ObjectMethodsGuru;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,import org.mockito.internal.util.collections.ListUtil;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,import org.mockito.internal.util.collections.ListUtil.Filter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,import org.mockito.invocation.Invocation;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,import java.util.List;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,public interface RegisteredInvocations {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,void add(Invocation invocation);,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,void removeLast();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,List<Invocation> getAll();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,boolean isEmpty();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\RegisteredInvocations.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,import org.mockito.invocation.Invocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,import java.io.Serializable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,import java.util.Collections;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,"public class SingleRegisteredInvocation implements RegisteredInvocations, Serializable {",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,private Invocation invocation;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,public void add(Invocation invocation) {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,this.invocation = invocation;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,public void removeLast() {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,invocation = null;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,public List<Invocation> getAll() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,return Collections.emptyList();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,public boolean isEmpty() {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,return invocation == null;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\SingleRegisteredInvocation.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.exceptions.base.MockitoException;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.api.VerificationData;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.api.VerificationDataInOrder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.api.VerificationInOrderMode;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.checkers.MissingInvocationChecker;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.checkers.MissingInvocationInOrderChecker;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.checkers.NumberOfInvocationsChecker;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderChecker;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.invocation.Invocation;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,import org.mockito.verification.VerificationMode;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"public class Times implements VerificationInOrderMode, VerificationMode {",22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,final int wantedCount;,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,public Times(int wantedNumberOfInvocations) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,if (wantedNumberOfInvocations < 0) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"throw new MockitoException(""Negative value is not allowed here"");",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,this.wantedCount = wantedNumberOfInvocations;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,public void verify(VerificationData data) {,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,if (wantedCount > 0) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,MissingInvocationChecker missingInvocation = new MissingInvocationChecker();,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"missingInvocation.check(data.getAllInvocations(), data.getWanted());",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,NumberOfInvocationsChecker numberOfInvocations = new NumberOfInvocationsChecker();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"numberOfInvocations.check(data.getAllInvocations(), data.getWanted(), wantedCount);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,public void verifyInOrder(VerificationDataInOrder data) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,List<Invocation> allInvocations = data.getAllInvocations();,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,InvocationMatcher wanted = data.getWanted();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,if (wantedCount > 0) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,MissingInvocationInOrderChecker missingInvocation = new MissingInvocationInOrderChecker();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"missingInvocation.check(allInvocations, wanted, this, data.getOrderingContext());",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,NumberOfInvocationsInOrderChecker numberOfCalls = new NumberOfInvocationsInOrderChecker();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"numberOfCalls.check(allInvocations, wanted, wantedCount, data.getOrderingContext());",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,@Override,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,public String toString() {,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,"return ""Wanted invocations count: "" + wantedCount;",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\Times.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.internal.invocation.InvocationMatcher;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.internal.stubbing.InvocationContainer;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.internal.util.ObjectMethodsGuru;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.internal.verification.api.VerificationData;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import org.mockito.invocation.Invocation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,import java.util.List;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,public class VerificationDataImpl implements VerificationData {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,private final InvocationMatcher wanted;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,private final InvocationContainer invocations;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,"public VerificationDataImpl(InvocationContainer invocations, InvocationMatcher wanted) {",21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,this.invocations = invocations;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,this.wanted = wanted;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,this.assertWantedIsVerifiable();,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,public List<Invocation> getAllInvocations() {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,return invocations.getInvocations();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,public InvocationMatcher getWanted() {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,return wanted;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,private void assertWantedIsVerifiable() {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,if (wanted == null) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,return;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,ObjectMethodsGuru o =  new ObjectMethodsGuru();,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,if (o.isToString(wanted.getMethod())) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,new Reporter().cannotVerifyToString();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationDataImpl.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,package org.mockito.internal.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,import org.mockito.verification.VerificationMode;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public class VerificationModeFactory {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static VerificationMode atLeastOnce() {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return atLeast(1);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static VerificationMode atLeast(int minNumberOfInvocations) {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new AtLeast(minNumberOfInvocations);,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static VerificationMode only() {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new Only(); //TODO make exception message nicer,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static Times times(int wantedNumberOfInvocations) {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new Times(wantedNumberOfInvocations);,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static Calls calls(int wantedNumberOfInvocations) {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new Calls( wantedNumberOfInvocations );,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static NoMoreInteractions noMoreInteractions() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new NoMoreInteractions();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,public static VerificationMode atMost(int maxNumberOfInvocations) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,return new AtMost(maxNumberOfInvocations);,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationModeFactory.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,package org.mockito.internal.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,import org.mockito.exceptions.base.MockitoAssertionError;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,import org.mockito.internal.util.Timer;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,import org.mockito.internal.verification.api.VerificationData;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,import org.mockito.verification.VerificationMode;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* Verifies that another verification mode (the delegate) is satisfied within a certain timeframe,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* (before timeoutMillis has passed, measured from the call to verify()), and either returns immediately",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* once it does, or waits until it is definitely satisfied once the full time has passed.",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,public class VerificationOverTimeImpl implements VerificationMode {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private final long pollingPeriodMillis;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private final VerificationMode delegate;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private final boolean returnOnSuccess;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private final Timer timer;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* Create this verification mode, to be used to verify invocation ongoing data later.",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* @param pollingPeriodMillis The frequency to poll delegate.verify(), to check whether the delegate has been satisfied",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param durationMillis The max time to wait (in millis) for the delegate verification mode to be satisfied,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param delegate The verification mode to delegate overall success or failure to,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param returnOnSuccess Whether to immediately return successfully once the delegate is satisfied (as in,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"*                        {@link org.mockito.verification.VerificationWithTimeout}, or to only return once",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*                        the delegate is satisfied and the full duration has passed (as in,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*                        {@link org.mockito.verification.VerificationAfterDelay}).,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*/,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"public VerificationOverTimeImpl(long pollingPeriodMillis, long durationMillis, VerificationMode delegate, boolean returnOnSuccess) {",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"this(pollingPeriodMillis, delegate, returnOnSuccess, new Timer(durationMillis));",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,/**,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* Create this verification mode, to be used to verify invocation ongoing data later.",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* @param pollingPeriodMillis The frequency to poll delegate.verify(), to check whether the delegate has been satisfied",42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param delegate The verification mode to delegate overall success or failure to,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param returnOnSuccess Whether to immediately return successfully once the delegate is satisfied (as in,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"*                        {@link org.mockito.verification.VerificationWithTimeout}, or to only return once",45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*                        the delegate is satisfied and the full duration has passed (as in,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*                        {@link org.mockito.verification.VerificationAfterDelay}).,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @param timer Checker of whether the duration of the verification is still acceptable,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*/,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"public VerificationOverTimeImpl(long pollingPeriodMillis, VerificationMode delegate, boolean returnOnSuccess, Timer timer) {",50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,this.pollingPeriodMillis = pollingPeriodMillis;,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,this.delegate = delegate;,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,this.returnOnSuccess = returnOnSuccess;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,this.timer = timer;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,56,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,/**,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode",58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* before the full duration has passed.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once",61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* the full duration has passed, the last error returned by the delegate verification mode will be thrown",62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* to never recover from this situation (e.g. {@link AtMost}).,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter",66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If",67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"* false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.",68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,* @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,*/,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,public void verify(VerificationData data) {,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,AssertionError error = null;,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,timer.start();,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,while (timer.isCounting()) {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,try {,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,delegate.verify(data);,78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,if (returnOnSuccess) {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,return;,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,} else {,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,error = null;,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,} catch (MockitoAssertionError e) {,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,error = handleVerifyException(e);,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},87,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,catch (AssertionError e) {,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,error = handleVerifyException(e);,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,92,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,if (error != null) {,93,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,throw error;,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private AssertionError handleVerifyException(AssertionError e) {,98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,if (canRecoverFromFailure(delegate)) {,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,sleep(pollingPeriodMillis);,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,return e;,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,} else {,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,throw e;,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,106,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,protected boolean canRecoverFromFailure(VerificationMode verificationMode) {,107,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,return !(verificationMode instanceof AtMost || verificationMode instanceof NoMoreInteractions);,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,110,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,public VerificationOverTimeImpl copyWithVerificationMode(VerificationMode verificationMode) {,111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"return new VerificationOverTimeImpl(pollingPeriodMillis, timer.duration(), verificationMode, returnOnSuccess);",112,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,,114,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,private void sleep(long sleep) {,115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,try {,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,Thread.sleep(sleep);,117,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,} catch (InterruptedException ie) {,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,"throw new RuntimeException(""Thread sleep has been interrupted"", ie);",119,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\VerificationOverTimeImpl.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,package org.mockito.internal.verification.api;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,import org.mockito.invocation.Invocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,public interface InOrderContext {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,boolean isVerified(Invocation invocation);,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,void markVerified(Invocation i);,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\InOrderContext.java,},15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,package org.mockito.internal.verification.api;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,public interface VerificationData {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,List<Invocation> getAllInvocations();,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,InvocationMatcher getWanted();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationData.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,package org.mockito.internal.verification.api;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,public interface VerificationDataInOrder {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,List<Invocation> getAllInvocations();,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,InvocationMatcher getWanted();,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,InOrderContext getOrderingContext();,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrder.java,},20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,package org.mockito.internal.verification.api;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,import java.util.List;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,import org.mockito.internal.invocation.InvocationMatcher;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,import org.mockito.invocation.Invocation;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,public class VerificationDataInOrderImpl implements VerificationDataInOrder {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,private final InOrderContext inOrder;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,private final List<Invocation> allInvocations;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,private final InvocationMatcher wanted;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,"public VerificationDataInOrderImpl(InOrderContext inOrder, List<Invocation> allInvocations, InvocationMatcher wanted) {",18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,this.inOrder = inOrder;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,this.allInvocations = allInvocations;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,this.wanted = wanted;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,public List<Invocation> getAllInvocations() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,return allInvocations;,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,public InOrderContext getOrderingContext() {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,return inOrder;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,public InvocationMatcher getWanted() {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,return wanted;,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationDataInOrderImpl.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,package org.mockito.internal.verification.api;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,public interface VerificationInOrderMode {,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,void verifyInOrder(VerificationDataInOrder data);,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\api\VerificationInOrderMode.java,},10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,package org.mockito.internal.verification.argumentmatching;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,import java.util.LinkedList;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,import org.hamcrest.Matcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,import org.hamcrest.StringDescription;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,import org.mockito.internal.matchers.ContainsExtraTypeInformation;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"@SuppressWarnings(""unchecked"")",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,public class ArgumentMatchingTool {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"* Suspiciously not matching arguments are those that don't match, the toString() representation is the same but types are different.",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,*/,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers, Object[] arguments) {",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,if (matchers.size() != arguments.length) {,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,return new Integer[0];,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,List<Integer> suspicious = new LinkedList<Integer>();,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,int i = 0;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,for (Matcher m : matchers) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,if (m instanceof ContainsExtraTypeInformation,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"&& !safelyMatches(m, arguments[i])",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"&& toStringEquals(m, arguments[i])",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,&& !((ContainsExtraTypeInformation) m).typeMatches(arguments[i])) {,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,suspicious.add(i);,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,i++;,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,return suspicious.toArray(new Integer[0]);,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"private boolean safelyMatches(Matcher m, Object arg) {",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,try {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,return m.matches(arg);,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,} catch (Throwable t) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,return false;,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"private boolean toStringEquals(Matcher m, Object arg) {",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,"return StringDescription.toString(m).equals(arg == null? ""null"" : arg.toString());",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\argumentmatching\ArgumentMatchingTool.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,package org.mockito.internal.verification.checkers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,import org.mockito.internal.reporting.Discrepancy;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,public class AtLeastDiscrepancy extends Discrepancy {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,"public AtLeastDiscrepancy(int wantedCount, int actualCount) {",11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,"super(wantedCount, actualCount);",12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,},13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,@Override,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,public String getPluralizedWantedCount() {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,"return ""*at least* "" + super.getPluralizedWantedCount();",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastDiscrepancy.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationMarker;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,import org.mockito.invocation.Location;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,public class AtLeastXNumberOfInvocationsChecker {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,Reporter reporter = new Reporter();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,InvocationsFinder finder = new InvocationsFinder();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,InvocationMarker invocationMarker = new InvocationMarker();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,"List<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,int actualCount = actualInvocations.size();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,if (wantedCount > actualCount) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,Location lastLocation = finder.getLastLocation(actualInvocations);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,"reporter.tooLittleActualInvocations(new AtLeastDiscrepancy(wantedCount, actualCount), wanted, lastLocation);",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,"invocationMarker.markVerified(actualInvocations, wanted);",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsChecker.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMarker;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.verification.api.InOrderContext;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Invocation;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Location;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,public class AtLeastXNumberOfInvocationsInOrderChecker {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,private final Reporter reporter = new Reporter();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,private final InvocationsFinder finder = new InvocationsFinder();,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,private final InvocationMarker invocationMarker = new InvocationMarker();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,private final InOrderContext orderingContext;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,public AtLeastXNumberOfInvocationsInOrderChecker(InOrderContext orderingContext) {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,this.orderingContext = orderingContext;,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,"List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks(invocations, wanted, orderingContext);",30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,int actualCount = chunk.size();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,if (wantedCount > actualCount) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,Location lastLocation = finder.getLastLocation(chunk);,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,"reporter.tooLittleActualInvocationsInOrder(new AtLeastDiscrepancy(wantedCount, actualCount), wanted, lastLocation);",36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,"invocationMarker.markVerifiedInOrder(chunk, wanted, orderingContext);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\AtLeastXNumberOfInvocationsInOrderChecker.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.internal.reporting.SmartPrinter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,import org.mockito.invocation.Invocation;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,public class MissingInvocationChecker {,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,private final Reporter reporter;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,private final InvocationsFinder finder;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,public MissingInvocationChecker() {,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"this(new InvocationsFinder(), new Reporter());",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,25,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"MissingInvocationChecker(InvocationsFinder finder, Reporter reporter) {",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,this.finder = finder;,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,this.reporter = reporter;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted) {",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"List<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,if (actualInvocations.isEmpty()) {,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"Invocation similar = finder.findSimilarInvocation(invocations, wanted);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,if (similar != null) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,ArgumentMatchingTool argumentMatchingTool = new ArgumentMatchingTool();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"Integer[] indexesOfSuspiciousArgs = argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(), similar.getArguments());",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"SmartPrinter smartPrinter = new SmartPrinter(wanted, similar, indexesOfSuspiciousArgs);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"reporter.argumentsAreDifferent(smartPrinter.getWanted(), smartPrinter.getActual(), similar.getLocation());",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,} else {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,"reporter.wantedButNotInvoked(wanted, invocations);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationChecker.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.internal.reporting.SmartPrinter;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.internal.verification.api.InOrderContext;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.invocation.Invocation;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,import org.mockito.verification.VerificationMode;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,public class MissingInvocationInOrderChecker {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,private final Reporter reporter;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,private final InvocationsFinder finder;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,public MissingInvocationInOrderChecker() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"this(new InvocationsFinder(), new Reporter());",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"MissingInvocationInOrderChecker(InvocationsFinder finder, Reporter reporter) {",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,this.finder = finder;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,this.reporter = reporter;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, VerificationMode mode, InOrderContext context) {",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks(invocations, wanted, context);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,if (!chunk.isEmpty()) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,return;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"Invocation previousInOrder = finder.findPreviousVerifiedInOrder(invocations, context);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,if (previousInOrder == null) {,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,/**,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* It is of course possible to have an issue where the arguments are different,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* rather that not invoked in order. Issue related to,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* http://code.google.com/p/mockito/issues/detail?id=27. If the previous order,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"* is missing, then this method checks if the arguments are different or if the order",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,* is not invoked.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,*/,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"List<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);",49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,if (actualInvocations == null || actualInvocations.isEmpty())  {,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"Invocation similar = finder.findSimilarInvocation(invocations, wanted);",51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,if (similar != null) {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,Integer[] indicesOfSimilarMatchingArguments =,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"new ArgumentMatchingTool().getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),",54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,similar.getArguments());,55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"SmartPrinter smartPrinter = new SmartPrinter(wanted, similar, indicesOfSimilarMatchingArguments);",56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"reporter.argumentsAreDifferent(smartPrinter.getWanted(), smartPrinter.getActual(), similar.getLocation());",57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,} else {,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,reporter.wantedButNotInvoked(wanted);,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,} else {,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,"reporter.wantedButNotInvokedInOrder(wanted, previousInOrder);",63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\MissingInvocationInOrderChecker.java,},66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.exceptions.Reporter;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMarker;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.reporting.Discrepancy;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.internal.verification.api.InOrderContext;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Invocation;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Location;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,import java.util.List;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,public class NonGreedyNumberOfInvocationsInOrderChecker {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,private final InvocationsFinder finder;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,private final Reporter reporter;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,private final InvocationMarker marker;,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,public NonGreedyNumberOfInvocationsInOrderChecker() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"this(new InvocationsFinder(), new Reporter(), new InvocationMarker());",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"NonGreedyNumberOfInvocationsInOrderChecker(InvocationsFinder finder, Reporter reporter, InvocationMarker marker ) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,this.finder = finder;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,this.reporter = reporter;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,this.marker = marker;,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount, InOrderContext context) {",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,int actualCount = 0;,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,Location lastLocation = null;,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,while( actualCount < wantedCount ){,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"Invocation next = finder.findFirstMatchingUnverifiedInvocation( invocations, wanted, context );",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,if( next == null ){,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"reporter.tooLittleActualInvocationsInOrder(new Discrepancy(wantedCount, actualCount), wanted, lastLocation );",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,"marker.markVerified( next, wanted );",43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,context.markVerified( next );,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,lastLocation = next.getLocation();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,actualCount++;,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NonGreedyNumberOfInvocationsInOrderChecker.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationMarker;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.internal.reporting.Discrepancy;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.invocation.Invocation;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,import org.mockito.invocation.Location;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,public class NumberOfInvocationsChecker {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,private final Reporter reporter;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,private final InvocationsFinder finder;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,private final InvocationMarker invocationMarker = new InvocationMarker();,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,public NumberOfInvocationsChecker() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"this(new Reporter(), new InvocationsFinder());",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"NumberOfInvocationsChecker(Reporter reporter, InvocationsFinder finder) {",28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,this.reporter = reporter;,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,this.finder = finder;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,},31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,32,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {",33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"List<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,int actualCount = actualInvocations.size();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,if (wantedCount > actualCount) {,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,Location lastInvocation = finder.getLastLocation(actualInvocations);,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"reporter.tooLittleActualInvocations(new Discrepancy(wantedCount, actualCount), wanted, lastInvocation);",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,} else if (wantedCount == 0 && actualCount > 0) {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,Location firstUndesired = actualInvocations.get(wantedCount).getLocation();,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"reporter.neverWantedButInvoked(wanted, firstUndesired);",42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,} else if (wantedCount < actualCount) {,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,Location firstUndesired = actualInvocations.get(wantedCount).getLocation();,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"reporter.tooManyActualInvocations(wantedCount, actualCount, wanted, firstUndesired);",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,},46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,"invocationMarker.markVerified(actualInvocations, wanted);",48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsChecker.java,},50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,package org.mockito.internal.verification.checkers;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import java.util.List;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.exceptions.Reporter;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMarker;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationMatcher;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.internal.invocation.InvocationsFinder;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.internal.reporting.Discrepancy;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.internal.verification.api.InOrderContext;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Invocation;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,import org.mockito.invocation.Location;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,public class NumberOfInvocationsInOrderChecker {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,private final Reporter reporter;,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,private final InvocationsFinder finder;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,private final InvocationMarker invocationMarker = new InvocationMarker();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,public NumberOfInvocationsInOrderChecker() {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"this(new InvocationsFinder(), new Reporter());",26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"NumberOfInvocationsInOrderChecker(InvocationsFinder finder, Reporter reporter) {",29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,this.finder = finder;,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,this.reporter = reporter;,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,},32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount, InOrderContext context) {",34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"List<Invocation> chunk = finder.findMatchingChunk(invocations, wanted, wantedCount, context);",35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,int actualCount = chunk.size();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,if (wantedCount > actualCount) {,39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,Location lastInvocation = finder.getLastLocation(chunk);,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"reporter.tooLittleActualInvocationsInOrder(new Discrepancy(wantedCount, actualCount), wanted, lastInvocation);",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,} else if (wantedCount < actualCount) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,Location firstUndesired = chunk.get(wantedCount).getLocation();,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"reporter.tooManyActualInvocationsInOrder(wantedCount, actualCount, wanted, firstUndesired);",44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,},45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,"invocationMarker.markVerifiedInOrder(chunk, wanted, context);",47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\internal\verification\checkers\NumberOfInvocationsInOrderChecker.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,package org.mockito.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,import org.mockito.exceptions.PrintableInvocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,"* Provides information about the invocation, specifically a human readable description and the location.",10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*/,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,public interface DescribedInvocation extends PrintableInvocation {,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* Describes the invocation in the human friendly way.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* @return the description of this invocation.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,String toString();,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,/**,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* The place in the code where the invocation happened.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,* @return the location of the invocation.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,*/,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,Location getLocation();,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\DescribedInvocation.java,},27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,package org.mockito.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* A method call on a mock object. Contains all information and state needed for the Mockito framework to operate.,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* This API might be useful for developers who extend Mockito.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* <p>,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* The javadoc does not have lots of examples or documentation because its audience is different.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Vast majority of users don't need to use the Invocation. It's mostly useful for other framework authors,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* that extend Mockito.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @since 1.9.5,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,"public interface Invocation extends InvocationOnMock, DescribedInvocation {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @return whether the invocation has been already verified.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Needed for {@link org.mockito.Mockito#verifyNoMoreInteractions(Object...)},21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,boolean isVerified();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @return the sequence number of the Invocation. Useful to determine the order of invocations.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Used by verification in order.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,int getSequenceNumber();,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @return the location in code of this invocation.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,Location getLocation();,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Returns unprocessed arguments whereas {@link #getArguments()} returns,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,"* arguments already processed (e.g. varargs expended, etc.).",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,"* @return unprocessed arguments, exactly as provided to this invocation.",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,Object[] getRawArguments();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Returns unprocessed arguments whereas {@link #getArguments()} returns,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,"* arguments already processed (e.g. varargs expended, etc.).",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,"* @return unprocessed arguments, exactly as provided to this invocation.",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,Class getRawReturnType();,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Marks this invocation as verified so that it will not cause verification error at,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* {@link org.mockito.Mockito#verifyNoMoreInteractions(Object...)},54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,void markVerified();,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @return the stubbing information for this invocation. May return null - this means,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* the invocation was not stubbed.,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,StubInfo stubInfo();,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Marks this invocation as stubbed.,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @param stubInfo the information about stubbing.,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,void markStubbed(StubInfo stubInfo);,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Informs if the invocation participates in verify-no-more-invocations or verification in order.,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* @return whether this invocation should be ignored for the purposes of,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* verify-no-more-invocations or verification in order.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,boolean isIgnoredForVerification();,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,,78,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,/**,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* Configures this invocation to be ignored for verify-no-more-invocations or verification in order.,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,* See also {@link #isIgnoredForVerification()},81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,*/,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,void ignoreForVerification();,83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Invocation.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,package org.mockito.invocation;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,import java.io.Serializable;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,import java.lang.reflect.Method;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* An invocation on a mock,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,"* A placeholder for mock, the method that was called and the arguments that were passed.",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,public interface InvocationOnMock extends Serializable {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* returns the mock object,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @return mock object,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,Object getMock();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* returns the method,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @return method,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,Method getMethod();,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* returns arguments passed to the method,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @return arguments,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,Object[] getArguments();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* Returns casted argument using position,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @param index argument position,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @param clazz argument type,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @return casted argument on position,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,"<T> T getArgumentAt(int index, Class<T> clazz);",45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,/**,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* calls real method,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* <p>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* <b>Warning:</b> depending on the real implementation it might throw exceptions,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @return whatever the real method returns / throws,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,* @throws Throwable in case real method throws,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,Object callRealMethod() throws Throwable;,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\InvocationOnMock.java,},57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,package org.mockito.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,* Describes the location of something in the source code.,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,public interface Location {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,* @return the location,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,String toString();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\Location.java,},17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,package org.mockito.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,import java.io.Serializable;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,"* Mockito handler of an invocation on a mock. This is a core part of the API, the heart of Mockito.",10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* See also the {@link org.mockito.plugins.MockMaker}.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* This api is work in progress. Do not provide your own implementations.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* Mockito will provide you with the implementation via other {@link org.mockito.plugins.MockMaker} methods.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,public interface MockHandler extends Serializable {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* Takes an invocation object and handles it.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* The default implementation provided by Mockito handles invocations by recording,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,"* method calls on mocks for further verification, captures the stubbing information when mock is stubbed,",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,"* returns the stubbed values for invocations that have been stubbed, and much more.",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* @param invocation The invocation to handle,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* @return Result,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,* @throws Throwable Throwable,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,Object handle(Invocation invocation) throws Throwable;,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\MockHandler.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,package org.mockito.invocation;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,"* The information about stubbing, for example the location of stubbing.",8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,public interface StubInfo {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,* @return the location where the invocation was stubbed.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,Location stubbedAt();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\invocation\StubInfo.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,package org.mockito.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,/**,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,* The JUnit rule can be used instead of {@link org.mockito.runners.MockitoJUnitRunner}. See {@link MockitoRule}.,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,*,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,* @since 1.10.17,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,*/,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,public class MockitoJUnit {,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,* Creates rule instance that initiates &#064;Mocks,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,* See {@link MockitoRule}.,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,*,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,* @return the rule instance,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,public static MockitoRule rule() {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,return new MockitoJUnitRule();,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,},18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnit.java,},19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,package org.mockito.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,import org.junit.rules.MethodRule;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,import org.junit.runners.model.FrameworkMethod;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,import org.junit.runners.model.Statement;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,import org.mockito.internal.junit.JUnitRule;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* Please use {@link MockitoJUnit#rule()} instead of direct use.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* The reason of the deprecation is that we want to avoid concrete classes in the public api.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* @see MockitoJUnit,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* @since 1.10.6,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,@Deprecated,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,"public class MockitoJUnitRule implements MethodRule, MockitoRule {",17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,//MethodRule is undeprecated in latest JUnit,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,private final JUnitRule jUnitRule;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,/**,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* Please use {@link MockitoJUnit#rule()}.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* The reason of the deprecation is that we want to avoid concrete classes in the public api.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,@Deprecated,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,public MockitoJUnitRule() {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,this.jUnitRule = new JUnitRule();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* Please use {@link MockitoJUnit#rule()}.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,* The reason of the deprecation is that we want to avoid concrete classes in the public api.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,*/,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,@Deprecated,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,public MockitoJUnitRule(Object targetTest) {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,this();,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,"public Statement apply(Statement base, FrameworkMethod method, Object target) {",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,"return jUnitRule.apply(base, target);",40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,},41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoJUnitRule.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,package org.mockito.junit;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,import org.junit.rules.MethodRule;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* The JUnit rule can be used instead of {@link org.mockito.runners.MockitoJUnitRunner}.,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* It requires JUnit at least 4.7.,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* This rule adds following behavior:,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* <ul>,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*   <li>,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,"*      Initializes mocks annotated with {@link org.mockito.Mock},",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*      so that explicit usage of {@link org.mockito.MockitoAnnotations#initMocks(Object)} is not necessary.,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*      Mocks are initialized before each test method.,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*   <li>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*      validates framework usage after each test method. See javadoc for {@link org.mockito.Mockito#validateMockitoUsage()}.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* </ul>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* Example use:,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,"* <pre class=""code""><code class=""java"">",19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* public class ExampleTest {,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     &#064;Rule,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     public MockitoRule rule = MockitoJUnit.rule();,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     &#064;Mock,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     private List list;,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     &#064;Test,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     public void shouldDoSomething() {,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*         list.add(100);,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*     },31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* },32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* </code></pre>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,* @since 1.10.17,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,*/,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\junit\MockitoRule.java,public interface MockitoRule extends MethodRule {},37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,package org.mockito.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,import org.mockito.MockSettings;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* This listener can be notified of method invocations on a mock.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,"* For this to happen, it must be registered using {@link MockSettings#invocationListeners(InvocationListener...)}.",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*/,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,public interface InvocationListener {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* Called after the invocation of the listener's mock if it returned normally.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* <p>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* Exceptions caused by this invocationListener will raise a {@link org.mockito.exceptions.base.MockitoException}.,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* </p>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* @param methodInvocationReport Information about the method call that just happened.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,* @see MethodInvocationReport,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,void reportInvocation(MethodInvocationReport methodInvocationReport);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\InvocationListener.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,package org.mockito.listeners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,import org.mockito.exceptions.PrintableInvocation;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,import org.mockito.invocation.DescribedInvocation;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* Represent a method call on a mock.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* <p>,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"*     Contains the information on the mock, the location of the stub",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"*     the return value if it returned something (maybe null), or an",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*     exception if one was thrown when the method was invoked.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* </p>,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,public interface MethodInvocationReport {,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"* The return type is deprecated, please assign the return value from this method",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* to the {@link DescribedInvocation} type. Sorry for inconvenience but we had to move,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* {@link PrintableInvocation} to better place to keep the API consistency.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"* @return Information on the method call, never {@code null}",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,DescribedInvocation getInvocation();,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,28,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"* @return The resulting value of the method invocation, may be <code>null</code>",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,Object getReturnedValue();,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"* @return The throwable raised by the method invocation, maybe <code>null</code>",35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,Throwable getThrowable();,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,38,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,"* @return <code>true</code> if an exception was raised, <code>false</code> otherwise",40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,boolean threwException();,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,* @return Location of the stub invocation,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,*/,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,String getLocationOfStubbing();,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\listeners\MethodInvocationReport.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,package org.mockito.mock;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,import org.mockito.Incubating;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,import org.mockito.listeners.InvocationListener;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,import org.mockito.stubbing.Answer;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,import java.util.List;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,import java.util.Set;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,14,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* Informs about the mock settings. An immutable view of {@link org.mockito.MockSettings}.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,public interface MockCreationSettings<T> {,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* Mocked type. An interface or class the mock should implement / extend.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,Class<T> getTypeToMock();,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* the extra interfaces the mock object should implement.,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,Set<Class> getExtraInterfaces();,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,"* the name of this mock, as printed on verification errors; see {@link org.mockito.MockSettings#name}.",31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,MockName getMockName();,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,"* the default answer for this mock, see {@link org.mockito.MockSettings#defaultAnswer}.",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,Answer getDefaultAnswer();,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* the spied instance - needed for spies.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,Object getSpiedInstance();,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,"* if the mock is serializable, see {@link org.mockito.MockSettings#serializable}.",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,boolean isSerializable();,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* @return the serializable mode of this mock,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,SerializableMode getSerializableMode();,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,54,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,"* Whether the mock is only for stubbing, i.e. does not remember",56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* parameters on its invocation and therefore cannot,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* be used for verification,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,boolean isStubOnly();,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,61,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,"* The invocation listeners attached to this mock, see {@link org.mockito.MockSettings#invocationListeners}.",63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,List<InvocationListener> getInvocationListeners();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,66,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* Informs whether the mock instance should be created via constructor,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* @since 1.10.12,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,@Incubating,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,boolean isUsingConstructor();,73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,/**,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* Used when mocking non-static inner classes in conjunction with {@link #isUsingConstructor()},76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* @return the outer class instance used for creation of the mock object via the constructor.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,* @since 1.10.12,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,*/,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,@Incubating,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,Object getOuterClassInstance();,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockCreationSettings.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,package org.mockito.mock;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,/**,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,"* Represents the name of the mock as shown in the verification failure reports, etc.",8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,*/,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,public interface MockName {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,/**,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,* the name,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,String toString();,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,* default name means generated by Mockito. non-default means the user has named the mock at creation.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,*/,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,boolean isDefault();,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\MockName.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,package org.mockito.mock;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,import org.mockito.Incubating;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,* Mock serializable style.,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,*/,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,@Incubating,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,public enum SerializableMode {,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,* No serialization.,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,*/,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,"NONE,",14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,,15,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,/**,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,* Basic serializable mode for mock objects. Introduced in Mockito 1.8.1.,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,"BASIC,",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,/**,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,* Useful if the mock is deserialized in a different classloader / vm.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,*/,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,@Incubating,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,ACROSS_CLASSLOADERS,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\mock\SerializableMode.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,package org.mockito.plugins;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,import org.mockito.invocation.MockHandler;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,import org.mockito.mock.MockCreationSettings;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* The facility to create mocks.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* <p>By default, an internal byte-buddy/asm/objenesis based implementation is used.</p>",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <p>{@code MockMaker} is an extension point that makes it possible to use custom dynamic proxies,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* and avoid using the default byte-buddy/asm/objenesis implementation.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* For example, the android users can use a MockMaker that can work with Dalvik virtual machine",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* and hence bring Mockito to android apps developers.</p>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <h3>Using the extension point</h3>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* <p>Suppose you wrote an extension to create mocks with some <em>Awesome</em> library, in order to tell",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Mockito to use it you need to put in your <strong>classpath</strong>:,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* <ol style=""list-style-type: lower-alpha"">",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     <li>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"*         The implementation itself, for example <code>org.awesome.mockito.AwesomeMockMaker</code> that",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*         extends the <code>MockMaker</code>.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     </li>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     <li>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"*         A file ""<code>mockito-extensions/org.mockito.plugins.MockMaker</code>"". The content of this file is",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*         exactly a <strong>one</strong> line with the qualified name:,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*         <code>org.awesome.mockito.AwesomeMockMaker</code>.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*      </li>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* </ol>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* </p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <p>Note that if several <code>mockito-extensions/org.mockito.plugins.MockMaker</code> files exists in the classpath,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Mockito will only use the first returned by the standard {@link ClassLoader#getResource} mechanism.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @see org.mockito.mock.MockCreationSettings,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @see org.mockito.invocation.MockHandler,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @since 1.9.5,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*/,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,public interface MockMaker {,44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,/**,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* If you want to provide your own implementation of {@code MockMaker} this method should:,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <ul>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     <li>Create a proxy object that implements {@code settings.typeToMock} and potentially also {@code settings.extraInterfaces}.</li>,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     <li>You may use the information from {@code settings} to create/configure your proxy object.</li>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"*     <li>Your proxy object should carry the {@code handler} with it. For example, if you generate byte code",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     to create the proxy you could generate an extra field to keep the {@code handler} with the generated object.,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     Your implementation of {@code MockMaker} is required to provide this instance of {@code handler} when,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     {@link #getHandler(Object)} is called.,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*     </li>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* </ul>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* @param settings - mock creation settings like type to mock, extra interfaces and so on.",58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @param handler See {@link org.mockito.invocation.MockHandler}.,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*                <b>Do not</b> provide your own implementation at this time. Make sure your implementation of,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*                {@link #getHandler(Object)} will return this instance.,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* @param <T> Type of the mock to return, actually the <code>settings.getTypeToMock</code>.",62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @return The mock instance.,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @since 1.9.5,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*/,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,<T> T createMock(,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"MockCreationSettings<T> settings,",67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,MockHandler handler,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,);,69,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,,70,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,/**,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Returns the handler for the {@code mock}. <b>Do not</b> provide your own implementations at this time,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* because the work on the {@link MockHandler} api is not completed.,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Use the instance provided to you by Mockito at {@link #createMock} or {@link #resetMock}.,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @param mock The mock instance.,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @return may return null - it means that there is no handler attached to provided object.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*   This means the passed object is not really a Mockito mock.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @since 1.9.5,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*/,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,MockHandler getHandler(Object mock);,81,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,,82,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,/**,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* Replaces the existing handler on {@code mock} with {@code newHandler}.,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <p>The invocation handler actually store invocations to achieve,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"* stubbing and verification. In order to reset the mock, we pass",87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* a new instance of the invocation handler.</p>,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* <p>Your implementation should make sure the {@code newHandler} is correctly associated to passed {@code mock}</p>,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @param mock The mock instance whose invocation handler is to be replaced.,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @param newHandler The new invocation handler instance.,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @param settings The mock settings - should you need to access some of the mock creation details.,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,* @since 1.9.5,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,*/,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,void resetMock(,97,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"Object mock,",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,"MockHandler newHandler,",99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,MockCreationSettings settings,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,);,101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\MockMaker.java,},102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,package org.mockito.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,import org.mockito.Incubating;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* Allows switching off the plugins that are discovered on classpath.,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <p>,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     Mockito will invoke this interface in order to select whether a plugin is enabled or not.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* </p>,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     When a particular plugin is switched off, the default Mockito behavior is used.",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     For example, if Android's dexmaker MockMaker is switched off,",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     Mockito default MockMaker implementation is used {@link org.mockito.plugins.MockMaker},15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* </p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <h3>Using the extension point</h3>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     The plugin mechanism of mockito works in a similar way as the {@link java.util.ServiceLoader}, however instead of",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     looking in the <code>META-INF</code> directory, Mockito will look in <code>mockito-extensions</code> directory.",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     <em>The reason for that is that Android SDK strips jar from the <code>META-INF</code> directory when creating an APK.</em>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* </p>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"* <ol style=""list-style-type: lower-alpha"">",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     <li>The implementation itself, for example <code>org.awesome.mockito.AwesomeMockMaker</code> that extends the <code>MockMaker</code>.</li>",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,"*     <li>A file ""<code>mockito-extensions/org.mockito.plugins.MockMaker</code>"". The content of this file is",28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     exactly a <strong>one</strong> line with the qualified name: <code>org.awesome.mockito.AwesomeMockMaker</code>.</li>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* </ol></p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <p>Note that if several <code>mockito-extensions/org.mockito.plugins.MockMaker</code> files exists in the classpath,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* Mockito will only use the first returned by the standard {@link ClassLoader#getResource} mechanism.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* <p>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     So just create a custom implementation of {@link PluginSwitch} and place the qualified name in the following file,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*     <code>mockito-extensions/org.mockito.plugins.PluginSwitch</code>.,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* </p>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* @since 1.10.15,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*/,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,@Incubating,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,public interface PluginSwitch {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* Mockito invokes this method for every plugin found in the classpath,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* (except from the {@code PluginSwitch} implementation itself).,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* If no custom plugins are discovered this method is not invoked.,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,* @since 1.10.15,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,*/,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,boolean isEnabled(String pluginClassName);,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\PluginSwitch.java,},52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,package org.mockito.plugins;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,import org.mockito.exceptions.stacktrace.StackTraceCleaner;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* An extension point to register custom {@link StackTraceCleaner}.,6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* You can replace Mockito's default StackTraceCleaner.,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* You can also 'enhance' Mockito's default behavior,8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* because the default cleaner is passed as parameter to the method.,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* <p>,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* Registering custom StackTraceCleaner is done in similar manner as the {@link MockMaker} implementation.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* See the default implementation: {@link org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider},13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,*/,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,public interface StackTraceCleanerProvider {,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,,16,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,/**,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* Allows configuring custom StackTraceCleaner.,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* @param defaultCleaner - Mockito's default StackTraceCleaner,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,* @return StackTraceCleaner to use,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,*/,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,StackTraceCleaner getStackTraceCleaner(StackTraceCleaner defaultCleaner);,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\plugins\StackTraceCleanerProvider.java,},24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,package org.mockito.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.Runner;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.manipulation.Filter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.manipulation.Filterable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.manipulation.NoTestsRemainException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.notification.Failure;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.notification.RunListener;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runner.notification.RunNotifier;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.junit.runners.BlockJUnit4ClassRunner;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.mockito.internal.debugging.WarningsCollector;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerFactory;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerImpl;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.mockito.internal.util.ConsoleMockitoLogger;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import org.mockito.internal.util.MockitoLogger;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,import java.lang.reflect.InvocationTargetException;,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,/**,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Uses <b>JUnit 4.5</b> runner {@link BlockJUnit4ClassRunner}.,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Experimental implementation that suppose to improve tdd/testing experience.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Don't hesitate to send feedback to mockito@googlegroups.com,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <b>It is very likely it will change in the next version!</b>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* This runner does exactly what {@link MockitoJUnitRunner} does but also,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* prints warnings that might be useful.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* The point is that Mockito should help the tdd developer to quickly figure out if the test fails for the right reason.,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Then the developer can implement the functionality.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Also when the test fails it should be easy to figure out why the test fails.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* Sometimes when the test fails, the underlying reason is that stubbed method was called with wrong arguments.",37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Sometimes it fails because one forgets to stub a method or forgets to call a stubbed method.,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* All above problems are not immediately obvious.,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* One way of approaching this problem is full-blown 'expect' API.,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* However it means the 'expectations upfront' business which is not in line with core Mockito concepts.,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* After all, the essence of testing are <b>explicit assertions</b> that are described consistently at the <b>bottom of the test</b> method.",43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Here's the experiment: a warning is printed to the standard output if the test fails.,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* Also, you get a clickabe link to the line of code. You can immediately jump to the place in code where the potential problem is.",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Let's say your test fails on assertion.,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Let's say the underlying reason is a stubbed method that was called with different arguments:,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* <pre class=""code""><code class=""java"">",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* //test:,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Dictionary dictionary = new Dictionary(translator);,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* when(translator.translate(""Mockito"")).thenReturn(""cool framework"");",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* String translated = dictionary.search(""Mockito"");",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* assertEquals(""cool framework"", translated);",55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* //code:,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* public String search(String word) {,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*     ...,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"*     return translator.translate(""oups"");",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* </code></pre>,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* On standard output you'll see something like that:,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* <pre class=""code""><code class=""java"">",64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* [Mockito] Warning - stubbed method called with different arguments.,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Stubbed this way:,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* translator.translate(""Mockito"");",67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* org.dictionary.SmartDictionaryTest.shouldFindTranslation(SmartDictionaryTest.java:27),68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* But called with different arguments:,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* translator.translate(""oups"");",71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* org.dictionary.SmartDictionary.search(SmartDictionary.java:15),72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* </code></pre>,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"* Note that it is just a warning, not an assertion.",75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* The test fails on assertion because it's the assertion's duty to document what the test stands for and what behavior it proves.,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Warnings just makes it quicker to figure out if the test fails for the right reason.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Note that code links printed to the console are clickable in any decent IDE (e.g. Eclipse).,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* So far I identified 2 cases when warnings are printed:,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <li>unsued stub</li>,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <li>stubbed method but called with different arguments</li>,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <br/>,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* <p>,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,* Do you think it is useful or not? Drop us an email at mockito@googlegroups.com,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,*/,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public class ConsoleSpammingMockitoJUnitRunner extends Runner implements Filterable {,89,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,90,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,private final MockitoLogger logger;,91,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,private final RunnerImpl runner;,92,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,93,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public ConsoleSpammingMockitoJUnitRunner(Class<?> klass) throws InvocationTargetException {,94,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"this(new ConsoleMockitoLogger(), new RunnerFactory().create(klass));",95,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},96,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,97,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,"ConsoleSpammingMockitoJUnitRunner(MockitoLogger logger, RunnerImpl runnerImpl) {",98,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,this.runner = runnerImpl;,99,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,this.logger = logger;,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},101,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,102,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,@Override,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public void run(RunNotifier notifier) {,104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,RunListener listener = new RunListener() {,105,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,WarningsCollector warningsCollector;,106,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,107,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,@Override,108,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public void testStarted(Description description) throws Exception {,109,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,warningsCollector = new WarningsCollector();,110,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},111,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,112,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,@Override public void testFailure(Failure failure) throws Exception {,113,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,logger.log(warningsCollector.getWarnings());,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},115,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,};,116,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,117,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,notifier.addListener(listener);,118,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,119,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,runner.run(notifier);,120,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,122,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,@Override,123,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public Description getDescription() {,124,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,return runner.getDescription();,125,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},126,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,,127,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,public void filter(Filter filter) throws NoTestsRemainException {,128,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,//filter is required because without it UnrootedTests show up in Eclipse,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,runner.filter(filter);,130,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},131,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\ConsoleSpammingMockitoJUnitRunner.java,},132,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,package org.mockito.runners;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,import org.mockito.Mock;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,import org.mockito.Mockito;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,import org.mockito.MockitoAnnotations;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,,11,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,import java.lang.reflect.InvocationTargetException;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,/**,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <b>Deprecated: Simply use {@link MockitoJUnitRunner}</b>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <p>,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,"* Compatible only with <b>JUnit 4.4</b>, this runner adds following behavior:",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <ul>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*   <li>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,"*      Initializes mocks annotated with {@link Mock},",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*      so that explicit usage of {@link MockitoAnnotations#initMocks(Object)} is not necessary.,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*      Mocks are initialized before each test method.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*   <li>,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*      validates framework usage after each test method. See javadoc for {@link Mockito#validateMockitoUsage()}.,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* </ul>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,"* Runner is completely optional - there are other ways you can get &#064;Mock working, for example by writing a base class.",27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* Explicitly validating framework usage is also optional because it is triggered automatically by Mockito every time you use the framework.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* See javadoc for {@link Mockito#validateMockitoUsage()}.,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* Read more about &#064;Mock annotation in javadoc for {@link MockitoAnnotations},31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <p>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* Example:,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,"* <pre class=""code""><code class=""java"">",34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* &#064;RunWith(MockitoJUnitRunner.class),35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* public class ExampleTest {,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*     &#064;Mock,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*     private List list;,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*     &#064;Test,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*     public void shouldDoSomething() {,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*         list.add(100);,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*     },44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* },45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* <p>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,* </code></pre>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,*/,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,@Deprecated,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,public class MockitoJUnit44Runner extends MockitoJUnitRunner {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,public MockitoJUnit44Runner(Class<?> klass) throws InvocationTargetException {,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,super(klass);,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,},55,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnit44Runner.java,},56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,package org.mockito.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.Runner;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.manipulation.Filter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.manipulation.Filterable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.manipulation.NoTestsRemainException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.junit.runner.notification.RunNotifier;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.mockito.Mock;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.mockito.Mockito;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.mockito.MockitoAnnotations;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerFactory;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerImpl;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,18,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,import java.lang.reflect.InvocationTargetException;,19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,20,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,"* Compatible with <b>JUnit 4.4 and higher</b>, this runner adds following behavior:",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* <ul>,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*   <li>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,"*      Initializes mocks annotated with {@link Mock},",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*      so that explicit usage of {@link MockitoAnnotations#initMocks(Object)} is not necessary.,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*      Mocks are initialized before each test method.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*   <li>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*      validates framework usage after each test method. See javadoc for {@link Mockito#validateMockitoUsage()}.,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* </ul>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,"* Runner is completely optional - there are other ways you can get &#064;Mock working, for example by writing a base class.",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* Explicitly validating framework usage is also optional because it is triggered automatically by Mockito every time you use the framework.,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* See javadoc for {@link Mockito#validateMockitoUsage()}.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* <p>,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* Read more about &#064;Mock annotation in javadoc for {@link MockitoAnnotations},37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,"* <pre class=""code""><code class=""java"">",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* <b>&#064;RunWith(MockitoJUnitRunner.class)</b>,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* public class ExampleTest {,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*     &#064;Mock,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*     private List list;,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*     &#064;Test,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*     public void shouldDoSomething() {,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*         list.add(100);,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*     },48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* },49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,* </code></pre>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,*/,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,public class MockitoJUnitRunner extends Runner implements Filterable {,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,53,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,private final RunnerImpl runner;,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,public MockitoJUnitRunner(Class<?> klass) throws InvocationTargetException {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,runner = new RunnerFactory().create(klass);,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,},58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,@Override,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,public void run(final RunNotifier notifier) {,61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,runner.run(notifier);,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,},63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,@Override,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,public Description getDescription() {,66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,return runner.getDescription();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,},68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,public void filter(Filter filter) throws NoTestsRemainException {,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,//filter is required because without it UnrootedTests show up in Eclipse,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,runner.filter(filter);,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\MockitoJUnitRunner.java,},74,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,package org.mockito.runners;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.Description;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.Runner;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.manipulation.Filter;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.manipulation.Filterable;,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.manipulation.NoTestsRemainException;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.notification.Failure;,12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.notification.RunListener;,13,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.junit.runner.notification.RunNotifier;,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.mockito.internal.debugging.WarningsCollector;,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerFactory;,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.mockito.internal.runners.RunnerImpl;,17,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import org.mockito.internal.util.junit.JUnitFailureHacker;,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,import java.lang.reflect.InvocationTargetException;,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,21,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,/**,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* Experimental implementation that suppose to improve tdd/testing experience.,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* Don't hesitate to send feedback to mockito@googlegroups.com,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* <b>It is very likely it will change in the next version!</b>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* <p>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* This runner does exactly what {@link MockitoJUnitRunner} does but also,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* adds extra Mocktio hints to the exception message.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* The point is that Mockito should help the tdd developer to quickly figure out if the test fails for the right reason and track the reason.,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* <p>,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* The implementation is pretty hacky - it uses brute force of reflection to modify the exception message and add extra mockito hints.,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* You've been warned.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* <p>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* Do you think it is useful or not? Drop us an email at mockito@googlegroups.com,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* <p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,* Experimental implementation - will change in future!,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public class VerboseMockitoJUnitRunner extends Runner implements Filterable {,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,private final RunnerImpl runner;,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public VerboseMockitoJUnitRunner(Class<?> klass) throws InvocationTargetException {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,this(new RunnerFactory().create(klass));,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,VerboseMockitoJUnitRunner(RunnerImpl runnerImpl) {,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,this.runner = runnerImpl;,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,49,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,@Override,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public void run(RunNotifier notifier) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,52,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,//a listener that changes the failure's exception in a very hacky way...,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,RunListener listener = new RunListener() {,54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,WarningsCollector warningsCollector;,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,@Override,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public void testStarted(Description description) throws Exception {,59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,warningsCollector = new WarningsCollector();,60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},61,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,62,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,@Override,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public void testFailure(final Failure failure) throws Exception {,64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,String warnings = warningsCollector.getWarnings();,65,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,"new JUnitFailureHacker().appendWarnings(failure, warnings);",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,};,68,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,69,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,notifier.addFirstListener(listener);,70,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,71,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,runner.run(notifier);,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},73,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,74,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,@Override,75,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public Description getDescription() {,76,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,return runner.getDescription();,77,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},78,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,,79,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,public void filter(Filter filter) throws NoTestsRemainException {,80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,//filter is required because without it UnrootedTests show up in Eclipse,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,runner.filter(filter);,82,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},83,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\runners\VerboseMockitoJUnitRunner.java,},84,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,package org.mockito.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,import org.mockito.invocation.InvocationOnMock;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* Generic interface to be used for configuring mock's answer.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* Answer specifies an action that is executed and a return value that is returned when you interact with the mock.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* Example of stubbing a mock with custom answer:,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,"* <pre class=""code""><code class=""java"">",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* when(mock.someMethod(anyString())).thenAnswer(new Answer() {,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*     Object answer(InvocationOnMock invocation) {,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*         Object[] args = invocation.getArguments();,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*         Object mock = invocation.getMock();,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,"*         return ""called with arguments: "" + Arrays.toString(args);",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*     },21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* });,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,"* //Following prints ""called with arguments: [foo]""",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,"* System.out.println(mock.someMethod(""foo""));",25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* </code></pre>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* @param <T> the type to return.,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*/,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,public interface Answer<T> {,30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,/**,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* @param invocation the invocation on the mock.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* @return the value to be returned,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,* @throws Throwable the throwable to be thrown,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,T answer(InvocationOnMock invocation) throws Throwable;,38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Answer.java,},39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,package org.mockito.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,import org.mockito.internal.progress.IOngoingStubbing;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* Stubs a method call with return value or an exception. E.g:,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* stub(mock.someMethod()).toReturn(10);,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* //you can use flexible argument matchers, e.g:",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* //setting exception to be thrown:,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* //you can stub with different behavior for consecutive method calls.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* //Last stubbing (e.g: toReturn(""foo"")) determines the behavior for further consecutive calls.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* stub(mock.someMethod(""some arg""))",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*  .toThrow(new RuntimeException()),25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"*  .toReturn(""foo"");",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* </code></pre>,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* See examples in javadoc for {@link Mockito#stub},30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,public interface DeprecatedOngoingStubbing<T> extends IOngoingStubbing {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,/**,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* Set a return value for the stubbed method. E.g:,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* <pre class=""code""><code class=""java"">",36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* stub(mock.someMethod()).toReturn(10);,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* </code></pre>,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* See examples in javadoc for {@link Mockito#stub},40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @param value return value,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*/,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,DeprecatedOngoingStubbing<T> toReturn(T value);,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,,47,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,/**,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* Set a Throwable to be thrown when the stubbed method is called. E.g:,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* <pre class=""code""><code class=""java"">",50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* stub(mock.someMethod()).toThrow(new RuntimeException());,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* </code></pre>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* If throwable is a checked exception then it has to,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* match one of the checked exceptions of method signature.,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* See examples in javadoc for {@link Mockito#stub},57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @param throwable to be thrown on method invocation,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*/,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,DeprecatedOngoingStubbing<T> toThrow(Throwable throwable);,63,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,,64,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,/**,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* Set a generic Answer for the stubbed method. E.g:,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,"* <pre class=""code""><code class=""java"">",67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* stub(mock.someMethod(10)).toAnswer(new Answer&lt;Integer&gt;() {,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*     public Integer answer(InvocationOnMock invocation) throws Throwable {,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*         return (Integer) invocation.getArguments()[0];,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*     },71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* },72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* </code></pre>,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @param answer the custom answer to execute.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,*/,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer);,79,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\DeprecatedOngoingStubbing.java,},80,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,package org.mockito.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,import org.mockito.internal.progress.IOngoingStubbing;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* Simply put: ""<b>When</b> the x method is called <b>then</b> return y"". E.g:",11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <b>when</b>(mock.someMethod()).<b>thenReturn</b>(10);,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* //you can use flexible argument matchers, e.g:",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* //setting exception to be thrown:,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* //you can set different behavior for consecutive method calls.,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* when(mock.someMethod(""some arg""))",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*  .thenThrow(new RuntimeException()),25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"*  .thenReturn(""foo"");",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* //There is a shorter way of consecutive stubbing:,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* when(mock.someMethod()).thenReturn(1,2,3);",29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* when(mock.otherMethod()).thenThrow(exc1, exc2);",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,public interface OngoingStubbing<T> extends IOngoingStubbing {,35,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,36,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets a return value to be returned when the method is called. E.g:,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.someMethod()).thenReturn(10);,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param value return value,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> thenReturn(T value);,49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets consecutive return values to be returned when the method is called. E.g:,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* when(mock.someMethod()).thenReturn(1, 2, 3);",54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Last return value in the sequence (in example: 3) determines the behavior of further consecutive calls.,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param value first return value,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param values next return values,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"OngoingStubbing<T> thenReturn(T value, T... values);",66,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,67,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets Throwable objects to be thrown when the method is called. E.g:,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.someMethod()).thenThrow(new RuntimeException());,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* If throwables contain a checked exception then it has to,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* match one of the checked exceptions of method signature.,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* You can specify throwables to be thrown for consecutive calls.,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* In that case the last throwable determines the behavior of further consecutive calls.,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* if throwable is null then exception will be thrown.,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param throwables to be thrown on method invocation,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> thenThrow(Throwable... throwables);,88,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,89,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets Throwable classes to be thrown when the method is called. E.g:,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.someMethod()).thenThrow(RuntimeException.class);,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Each throwable class will be instantiated for each method invocation.,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* If throwableClasses contain a checked exception then it has to,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* match one of the checked exceptions of method signature.,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* You can specify throwableClasses to be thrown for consecutive calls.,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* In that case the last throwable determines the behavior of further consecutive calls.,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* if throwable is null then exception will be thrown.,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param throwableClasses to be thrown on method invocation,109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @since 1.9.0,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> thenThrow(Class<? extends Throwable>... throwableClasses);,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,115,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets the real implementation to be called when the method is called on a mock object.,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* As usual you are going to read <b>the partial mock warning</b>:,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects.",120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* How does partial mock fit into this paradigm? Well, it just doesn't...",121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Partial mock usually means that the complexity has been moved to a different method on the same object.,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* In most cases, this is not the way you want to design your application.",123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* However, there are rare cases when partial mocks come handy:",125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)",126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code.",127,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",128,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"*   // someMethod() must be safe (e.g. doesn't throw, doesn't have dependencies to the object state, etc.)",129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   // if it isn't safe then you will have trouble stubbing it using this api. Use Mockito.doCallRealMethod() instead.,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   when(mock.someMethod()).thenCallRealMethod();,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   // calls real method:,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   mock.someMethod();,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See also javadoc {@link Mockito#spy(Object)} to find out more about partial mocks.,137,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <b>Mockito.spy() is a recommended way of creating partial mocks.</b>,138,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* The reason is it guarantees real methods are called against correctly constructed object because you're responsible for constructing the object passed to spy() method.,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* See examples in javadoc for {@link Mockito#when},141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> thenCallRealMethod();,145,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,146,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,147,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets a generic Answer for the method. E.g:,148,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",149,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.someMethod(10)).thenAnswer(new Answer&lt;Integer&gt;() {,150,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*     public Integer answer(InvocationOnMock invocation) throws Throwable {,151,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*         return (Integer) invocation.getArguments()[0];,152,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*     },153,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* },154,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,155,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,156,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param answer the custom answer to execute.,157,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,158,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,159,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,160,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> thenAnswer(Answer<?> answer);,161,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,162,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,163,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Sets a generic Answer for the method.,164,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,165,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* This method is an alias of {@link #thenAnswer(Answer)}. This alias allows,166,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* more readable tests on occasion, for example:",167,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",168,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* //using 'then' alias:,169,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.foo()).then(returnCoolValue());,170,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,171,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* //versus good old 'thenAnswer:,172,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* when(mock.foo()).thenAnswer(byReturningCoolValue());,173,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,174,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,175,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param answer the custom answer to execute.,176,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return iOngoingStubbing object that allows stubbing consecutive calls,177,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,178,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @see #thenAnswer(Answer),179,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @since 1.9.0,180,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,181,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,OngoingStubbing<T> then(Answer<?> answer);,182,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,183,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,/**,184,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* Returns the mock that was used for this stub.,185,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* <p>,186,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* It allows to create a stub in one line of code.,187,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* This can be helpful to keep test code clean.,188,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* For example, some boring stub can be created & stubbed at field initialization in a test:",189,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,"* <pre class=""code""><code class=""java"">",190,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* public class CarTest {,191,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   Car boringStubbedCar = when(mock(Car.class).shiftGear()).thenThrow(EngineNotStarted.class).getMock();,192,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,193,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*   &#064;Test public void should... {},194,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* </code></pre>,195,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*,196,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @param <M> The mock type given by the variable type.,197,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @return Mock used in this ongoing stubbing.,198,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,* @since 1.9.0,199,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,*/,200,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,<M> M getMock();,201,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,,202,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\OngoingStubbing.java,},203,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,package org.mockito.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Allows to choose a method when stubbing in doThrow()|doAnswer()|doNothing()|doReturn() style,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Example:,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doThrow(new RuntimeException()).when(mockedList).clear();,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   //following throws RuntimeException:,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   mockedList.clear();,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Also useful when stubbing consecutive calls:,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"*   doThrow(new RuntimeException(""one"")).",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"*   doThrow(new RuntimeException(""two""))",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mock).someVoidMethod();,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Read more about those methods:,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doThrow(Throwable)},30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doAnswer(Answer)},32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doNothing()},34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doReturn(Object)},36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See examples in javadoc for {@link Mockito},39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"@SuppressWarnings(""unchecked"")",41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,public interface Stubber {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Allows to choose a method when stubbing in doThrow()|doAnswer()|doNothing()|doReturn() style,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Example:,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doThrow(new RuntimeException()),49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mockedList).clear();,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   //following throws RuntimeException:,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   mockedList.clear();,53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Read more about those methods:,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doThrow(Throwable)},58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doAnswer(Answer)},60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doNothing()},62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* {@link Mockito#doReturn(Object)},64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*  See examples in javadoc for {@link Mockito},67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @param mock The mock,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return select method for stubbing,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,<T> T when(T mock);,72,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,73,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doThrow(Throwable)} style:,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"*   doThrow(new RuntimeException(""one"")).",77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"*   doThrow(new RuntimeException(""two""))",78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mock).someVoidMethod();,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doThrow(Throwable)},81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @param toBeThrown to be thrown when the stubbed method is called,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doThrow(Throwable toBeThrown);,86,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,87,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doThrow(Class)} style:,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doThrow(RuntimeException.class).,91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doThrow(IllegalArgumentException.class),92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mock).someVoidMethod();,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doThrow(Class)},95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @param toBeThrown exception class to be thrown when the stubbed method is called,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doThrow(Class<? extends Throwable> toBeThrown);,100,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,101,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doAnswer(Answer)} style:,103,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",104,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doAnswer(answerOne).,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doAnswer(answerTwo),106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mock).someVoidMethod();,107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doAnswer(Answer)},109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @param answer to answer when the stubbed method is called,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doAnswer(Answer answer);,114,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,115,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doNothing()} style:,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"* <pre class=""code""><code class=""java"">",118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   doNothing().,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,"*   doThrow(new RuntimeException(""two""))",120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*   .when(mock).someVoidMethod();,121,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* </code></pre>,122,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doNothing()},123,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,124,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,125,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,126,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doNothing();,127,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,128,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,129,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doReturn(Object)} style.,130,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,131,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doReturn(Object)},132,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,133,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @param toBeReturned to be returned when the stubbed method is called,134,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,135,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,136,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doReturn(Object toBeReturned);,137,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,,138,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,/**,139,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* Use it for stubbing consecutive calls in {@link Mockito#doCallRealMethod()} style.,140,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* <p>,141,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* See javadoc for {@link Mockito#doCallRealMethod()},142,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*,143,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,* @return stubber - to select a method for stubbing,144,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,*/,145,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,Stubber doCallRealMethod();,146,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\Stubber.java,},147,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,package org.mockito.stubbing;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,import org.mockito.Mockito;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Stubs void method with an exception. E.g:,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* <pre class=""code""><code class=""java"">",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* //you can stub with different behavior for consecutive method calls.,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* //Last stubbing (e.g: toReturn()) determines the behavior for further consecutive calls.,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* stubVoid(mock),17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*  .toThrow(new RuntimeException()),18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*  .toReturn(),19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*  .on().someMethod();,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </code></pre>,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* See examples in javadoc for {@link Mockito#stubVoid},23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,public interface VoidMethodStubbable<T> {,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/**,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Stubs void method with an exception. E.g:,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* <pre class=""code""><code class=""java"">",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </code></pre>,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* If throwable is a checked exception then it has to,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* match one of the checked exceptions of method signature.,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* See examples in javadoc for {@link Mockito#stubVoid},37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @param throwable to be thrown on method invocation,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @return VoidMethodStubbable - typically to choose void method and finish stubbing,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,VoidMethodStubbable<T> toThrow(Throwable throwable);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,44,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/**,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Stubs void method to 'just return' (e.g. to <b>not</b> to throw any exception),46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <p>,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <b>Only use this method if you're stubbing consecutive calls.</b>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <p>,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* For example:,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* <pre class=""code""><code class=""java"">",51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* stubVoid(mock),52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*   .toReturn(),53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*   .toThrow(new RuntimeException()),54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*   .on().foo(10);,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </code></pre>,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <ul>,57,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <li>first time foo(10) is called the mock will 'just return' (e.g. don't throw any exception)</li>,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <li>second time foo(10) is called the mock will throw RuntimeException</li>,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <li>every consecutive time foo(10) is called the mock will throw RuntimeException</li>,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </ul>,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <p>,62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* See examples in javadoc for {@link Mockito#stubVoid},63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @return VoidMethodStubbable - typically to choose void method and finish stubbing,65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,VoidMethodStubbable<T> toReturn();,67,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,68,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/**,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Stubs a void method with generic {@link Answer},70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* <p>,71,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* For Example:,72,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* <pre class=""code""><code class=""java"">",73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* stubVoid(mock),74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*   .toAnswer(new Answer() {,75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*                 public Object answer(InvocationOnMOck invocation) {,76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*                     Visitor v = (Visitor) invocation.getArguments()[0];,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*                     v.visitMock(invocation.getMock());,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*                     return null;,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*                 },81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*             }),82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*    .on().accept(any());,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </code></pre>,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,85,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @param answer the custom answer to execute.,86,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @return VoidMethodStubbable - typically to choose void method and finish stubbing,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,VoidMethodStubbable<T> toAnswer(Answer<?> answer);,90,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,,91,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,/**,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* Choose void method for stubbing. E.g:,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* <pre class=""code""><code class=""java"">",95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,"* stubVoid(mock).toThrow(new RuntimeException()).on().someMethod(""some arg"");",96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* </code></pre>,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* See examples in javadoc for {@link Mockito#stubVoid},99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,* @return mock object itself,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,*/,102,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,T on();,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\VoidMethodStubbable.java,},104,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,package org.mockito.stubbing.answers;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,import java.util.Collection;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,,8,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,/**,9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* Returns elements of the collection. Keeps returning the last element forever.,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* Might be useful on occasion when you have a collection of elements to return.,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,*   //this:,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,"*   when(mock.foo()).thenReturn(1, 2, 3);",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,*   //is equivalent to:,16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,"*   when(mock.foo()).thenReturn(new ReturnsElementsOf(Arrays.asList(1, 2, 3)));",17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* </code></pre>,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,* @deprecated Use {@link org.mockito.AdditionalAnswers#returnsElementsOf},20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,*/,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,@Deprecated,22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,public class ReturnsElementsOf extends org.mockito.internal.stubbing.answers.ReturnsElementsOf {,23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,,24,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,@Deprecated,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,public ReturnsElementsOf(Collection<?> elements) {,26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,super(elements);,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,},28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\stubbing\answers\ReturnsElementsOf.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,package org.mockito.verification;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,import org.mockito.internal.verification.VerificationOverTimeImpl;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,4,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,/**,5,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* See the javadoc for {@link VerificationAfterDelay},6,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* <p>,7,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"* Typically, you won't use this class explicitly. Instead use timeout() method on Mockito class.",8,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* See javadoc for {@link VerificationWithTimeout},9,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,*/,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,public class After extends VerificationWrapper<VerificationOverTimeImpl> implements VerificationAfterDelay {,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,12,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,/**,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* See the javadoc for {@link VerificationAfterDelay},14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* <p>,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"* Typically, you won't use this class explicitly. Instead use timeout() method on Mockito class.",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,* See javadoc for {@link VerificationWithTimeout},17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,*/,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"public After(long delayMillis, VerificationMode verificationMode) {",19,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"this(10, delayMillis, verificationMode);",20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,},21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,22,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"After(long pollingPeriod, long delayMillis, VerificationMode verificationMode) {",23,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,"this(new VerificationOverTimeImpl(pollingPeriod, delayMillis, verificationMode, false));",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,},25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,26,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,After(VerificationOverTimeImpl verificationOverTime) {,27,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,super(verificationOverTime);,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,},29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,@Override,31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,protected VerificationMode copySelfWithNewVerificationMode(VerificationMode verificationMode) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,return new After(wrappedVerification.copyWithVerificationMode(verificationMode));,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\After.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,package org.mockito.verification;,5,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,6,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,import org.mockito.exceptions.Reporter;,7,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,import org.mockito.internal.util.Timer;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,import org.mockito.internal.verification.VerificationOverTimeImpl;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See the javadoc for {@link VerificationWithTimeout},11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* <p>,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"* Typically, you won't use this class explicitly. Instead use timeout() method on Mockito class.",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See javadoc for {@link VerificationWithTimeout},14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,*/,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,public class Timeout extends VerificationWrapper<VerificationOverTimeImpl> implements VerificationWithTimeout {,16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,/**,18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See the javadoc for {@link VerificationWithTimeout},19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* <p>,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"* Typically, you won't use this class explicitly. Instead use timeout() method on Mockito class.",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See javadoc for {@link VerificationWithTimeout},22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,*/,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"public Timeout(long millis, VerificationMode delegate) {",24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"this(10, millis, delegate);",25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,/**,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See the javadoc for {@link VerificationWithTimeout},29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,*/,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"Timeout(long pollingPeriodMillis, long millis, VerificationMode delegate) {",31,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"this(new VerificationOverTimeImpl(pollingPeriodMillis, millis, delegate, true));",32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,34,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,/**,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,* See the javadoc for {@link VerificationWithTimeout},36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,*/,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"Timeout(long pollingPeriodMillis, VerificationMode delegate, Timer timer) {",38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,"this(new VerificationOverTimeImpl(pollingPeriodMillis, delegate, true, timer));",39,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,Timeout(VerificationOverTimeImpl verificationOverTime) {,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,super(verificationOverTime);,43,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},44,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,45,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,@Override,46,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,protected VerificationMode copySelfWithNewVerificationMode(VerificationMode newVerificationMode) {,47,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,return new Timeout(wrappedVerification.copyWithVerificationMode(newVerificationMode));,48,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},49,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,50,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,public VerificationMode atMost(int maxNumberOfInvocations) {,51,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,new Reporter().atMostAndNeverShouldNotBeUsedWithTimeout();,52,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,return null;,53,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},54,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,,55,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,public VerificationMode never() {,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,new Reporter().atMostAndNeverShouldNotBeUsedWithTimeout();,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,return null;,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},59,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\Timeout.java,},60,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,package org.mockito.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* VerificationAfterDelay is a {@link VerificationMode} that allows combining existing verification modes with an initial delay, e.g.",12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* verify(mock, after(100).atMost(5)).foo();",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* verify(mock, after(100).never()).bar();",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* verify(mock, after(200).atLeastOnce()).baz();",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* </code></pre>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* This is similar to {@link VerificationWithTimeout timeout()} except the assertion will not terminate until either the condition is,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* definitively failed, or the full time has elapsed (whereas timeout() will also stop if the conditions is true at any point, as is",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* typically the case with never() etc initially).,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* <p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public interface VerificationAfterDelay extends VerificationMode {,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,30,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Verifies that there are exactly N invocations during the given period. This will wait the full period given.,32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode times(int wantedNumberOfInvocations);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Allows verification that there are no invocations at any point during the given period. This will wait the,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* full period given, unless an invocation occurs (in which case there will be immediate failure)",38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode never();,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,41,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,42,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Verifies that there is at least 1 invocation during the given period. This will wait the full period given.,43,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode atLeastOnce();,45,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,46,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Verifies that there is are least N invocations during the given period. This will wait the full period given.,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode atLeast(int minNumberOfInvocations);,50,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,51,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* Verifies that there is are most N invocations during the given period. This will wait the full period given,",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* unless too many invocations occur (in which case there will be an immediate failure),54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode atMost(int maxNumberOfInvocations);,56,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,57,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,/**,58,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,* Verifies that there the given method is invoked and is the only method invoked. This will wait the full,59,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,"* period given, unless another method is invoked (in which case there will be an immediate failure)",60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,*/,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,public VerificationMode only();,62,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,,63,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationAfterDelay.java,},64,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,package org.mockito.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,import org.mockito.internal.verification.api.VerificationData;,9,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,,10,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,/**,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* Allows verifying that certain behavior happened at least once / exact number,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* of times / never. E.g:,13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* <pre class=""code""><code class=""java"">",15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* verify(mock, times(5)).someMethod(&quot;was called five times&quot;);",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* verify(mock, never()).someMethod(&quot;was never called&quot;);",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* verify(mock, atLeastOnce()).someMethod(&quot;was called at least once&quot;);",20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* verify(mock, atLeast(2)).someMethod(&quot;was called at least twice&quot;);",22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* verify(mock, atMost(3)).someMethod(&quot;was called at most 3 times&quot;);",24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* </code></pre>,26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* <b>times(1) is the default</b> and can be omitted,28,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,* <p>,29,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,"* See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}",30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,*/,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,public interface VerificationMode {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,,33,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,void verify(VerificationData data);,34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationMode.java,},36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/*,1,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Copyright (c) 2007 Mockito contributors,2,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* This program is made available under the terms of the MIT License.,3,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,4,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,package org.mockito.verification;,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,import org.mockito.Mockito;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,10,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* VerificationWithTimeout is a {@link VerificationMode} that allows combining existing verification modes with 'timeout'. E.g:,11,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,12,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* <pre class=""code""><code class=""java"">",13,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* verify(mock, timeout(100).times(5)).foo();",14,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,15,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* verify(mock, timeout(100).never()).bar();",16,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,17,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* verify(mock, timeout(200).atLeastOnce()).baz();",18,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* </code></pre>,19,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,20,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* This is similar to {@link VerificationAfterDelay after()} except this assertion will immediately pass if it becomes true at any point,",21,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* whereas after() will wait the full period. Assertions which are consistently expected to be initially true and potentially become false,22,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* are deprecated below, and after() should be used instead.",23,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,24,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,25,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}",26,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,27,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public interface VerificationWithTimeout extends VerificationMode {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,29,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,30,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Allows verifying exact number of invocations within given timeout,31,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* <pre class=""code""><code class=""java"">",32,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"*   verify(mock, timeout(100).times(2)).someMethod(""some arg"");",33,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* </code></pre>,34,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,35,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* See examples in javadoc for {@link Mockito} class,36,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,37,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @param wantedNumberOfInvocations wanted number of invocations,38,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,39,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,40,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,41,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode times(int wantedNumberOfInvocations);,42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,44,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @deprecated,45,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* Validation with timeout combined with never simply does not make sense, as never() will typically immediately pass,",46,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* and therefore not wait the timeout. The behaviour you may be looking for is actually provided by after().never().,47,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,48,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* To avoid compilation errors upon upgrade the method is deprecated and it throws a ""friendly reminder"" exception.",49,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,50,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* In a future release we will remove timeout(x).atMost(y) and timeout(x).never() from the API.,51,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,52,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* Do you want to find out more? See <a href=""http://code.google.com/p/mockito/issues/detail?id=235"">issue 235</a>",53,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,54,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,55,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,56,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,@Deprecated,57,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode never();,58,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,59,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,60,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Allows at-least-once verification within given timeout. E.g:,61,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* <pre class=""code""><code class=""java"">",62,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"*   verify(mock, timeout(100).atLeastOnce()).someMethod(""some arg"");",63,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* </code></pre>,64,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Alias to atLeast(1),65,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,66,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* See examples in javadoc for {@link Mockito} class,67,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,68,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,69,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,70,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode atLeastOnce();,71,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,72,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,73,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Allows at-least-x verification within given timeout. E.g:,74,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* <pre class=""code""><code class=""java"">",75,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"*   verify(mock, timeout(100).atLeast(3)).someMethod(""some arg"");",76,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* </code></pre>,77,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,78,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* See examples in javadoc for {@link Mockito} class,79,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,80,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @param minNumberOfInvocations minimum number of invocations,81,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,82,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,83,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,84,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode atLeast(int minNumberOfInvocations);,85,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,86,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,87,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @deprecated,88,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,89,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <b>Deprecated</b>,90,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* Validation with timeout combined with never simply does not make sense, as atMost() will typically immediately pass,",91,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* and therefore not wait the timeout. The behaviour you may be looking for is actually provided by after().atMost().,92,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,93,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* To avoid compilation errors upon upgrade the method is deprecated and it throws a ""friendly reminder"" exception.",94,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,95,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* In a future release we will remove timeout(x).atMost(y) and timeout(x).never() from the API.,96,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,97,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* Do you want to find out more? See <a href=""http://code.google.com/p/mockito/issues/detail?id=235"">issue 235</a>",98,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,99,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,100,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,101,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,@Deprecated,102,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode atMost(int maxNumberOfInvocations);,103,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,,104,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,/**,105,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* Allows checking if given method was the only one invoked. E.g:,106,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"* <pre class=""code""><code class=""java"">",107,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,"*   verify(mock, only()).someMethod();",108,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*   //above is a shorthand for following 2 lines of code:,109,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*   verify(mock).someMethod();,110,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*   verifyNoMoreInvocations(mock);,111,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* </code></pre>,112,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,113,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,114,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* See also {@link Mockito#verifyNoMoreInteractions(Object...)},115,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* <p>,116,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* See examples in javadoc for {@link Mockito} class,117,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*,118,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,* @return verification mode,119,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,*/,120,True,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,public VerificationMode only();,121,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWithTimeout.java,},122,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,package org.mockito.verification;,1,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,2,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,import org.mockito.internal.verification.VerificationModeFactory;,3,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,import org.mockito.internal.verification.api.VerificationData;,4,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,5,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public abstract class VerificationWrapper<WrapperType extends VerificationMode> implements VerificationMode {,6,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,7,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,protected final WrapperType wrappedVerification;,8,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,9,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationWrapper(WrapperType wrappedVerification) {,10,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,this.wrappedVerification = wrappedVerification;,11,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},12,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,13,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public void verify(VerificationData data) {,14,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,wrappedVerification.verify(data);,15,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},16,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,17,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,protected abstract VerificationMode copySelfWithNewVerificationMode(VerificationMode verificationMode);,18,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,19,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode times(int wantedNumberOfInvocations) {,20,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.times(wantedNumberOfInvocations));,21,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},22,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,23,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode never() {,24,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.atMost(0));,25,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},26,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,27,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode atLeastOnce() {,28,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.atLeastOnce());,29,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},30,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,31,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode atLeast(int minNumberOfInvocations) {,32,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.atLeast(minNumberOfInvocations));,33,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},34,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,35,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode atMost(int maxNumberOfInvocations) {,36,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.atMost(maxNumberOfInvocations));,37,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},38,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,39,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,public VerificationMode only() {,40,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,return copySelfWithNewVerificationMode(VerificationModeFactory.only());,41,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},42,False,False
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,,43,False,True
G:\defects4j\Mockito\mockito_1_buggy\src\org\mockito\verification\VerificationWrapper.java,},44,False,False
